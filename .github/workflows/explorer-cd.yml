name: API Explorer CD

on:
  push:
    branches:
    - development
    paths:
    - 'src/explorer/**'
    - '.github/workflows/nodejs.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: src/explorer

    strategy:
      matrix:
        node-version: [14.x, 15.x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - run: npm ci
      working-directory: ${{env.working-directory}}
    - run: npm run build --if-present
      working-directory: ${{env.working-directory}}
    - run: npm test
      working-directory: ${{env.working-directory}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      PROJECT_ID: ${{ secrets.DEV_PROJECT_ID }}
      GKE_CLUSTER: ${{ secrets.DEV_CLUSTER }}
      GKE_ZONE: us-central1
      DEPLOYMENT_NAME: ${{ secrets.EXPLORER_DEPLOYMENT}}
      IMAGE: ${{ secrets.EXPLORER_IMAGE }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - id: variables
      run: |
        echo "::set-output name=version::$(echo ${GITHUB_SHA} | cut -c1-8)"
        echo "::set-output name=project_id::$(echo ${PROJECT_ID} | cut -c1-8)"
        echo "::set-output name=image::$(echo ${IMAGE} | cut -c1-8)"

    - name: Setup GCP
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.DEV_SA }}
        project_id: ${{ secrets.DEV_PROJECT_ID }}

    - run: |-
        gcloud --quiet auth configure-docker
    - run: |-
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE

    - name: Build Image
      run: |-
        docker build \
          --tag gcr.io/$PROJECT_ID/$IMAGE:${{ steps.variables.outputs.version }} \
          . \
          --file ./src/explorer/Dockerfile

    # Push the Docker image to Google Container Registry
    - name: Publish Image
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ steps.variables.outputs.version }}"

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"

    - name: Deploy
      run: |-
        cd kustomize/base
        kustomize edit set image $PROJECT_ID/$IMAGE=$PROJECT_ID/$IMAGE:${{ steps.variables.outputs.version }}
        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
