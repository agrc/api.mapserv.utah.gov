using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using graphql.schemas;
using NetTopologySuite.Geometries;

namespace graphql
{
    public partial class CloudSqlContext : DbContext
    {
        public CloudSqlContext()
        {
        }

        public CloudSqlContext(DbContextOptions<CloudSqlContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AddressPoints> AddressPoints { get; set; }
        public virtual DbSet<AddressSystemQuadrants> AddressSystemQuadrants { get; set; }
        public virtual DbSet<AerialPhotographyExtents> AerialPhotographyExtents { get; set; }
        public virtual DbSet<Airport> Airport { get; set; }
        public virtual DbSet<AirportLocations> AirportLocations { get; set; }
        public virtual DbSet<AlluvialFans> AlluvialFans { get; set; }
        public virtual DbSet<AquiferBasinFillBoundary> AquiferBasinFillBoundary { get; set; }
        public virtual DbSet<AquiferRechargeDischargeAreas> AquiferRechargeDischargeAreas { get; set; }
        public virtual DbSet<ArchaeologySites> ArchaeologySites { get; set; }
        public virtual DbSet<AssociationOfGovernments> AssociationOfGovernments { get; set; }
        public virtual DbSet<AutoCorrelatedDemExtents> AutoCorrelatedDemExtents { get; set; }
        public virtual DbSet<AvalanchePaths> AvalanchePaths { get; set; }
        public virtual DbSet<AvalancheRoseTriCanyons> AvalancheRoseTriCanyons { get; set; }
        public virtual DbSet<BeaverCountyParcels> BeaverCountyParcels { get; set; }
        public virtual DbSet<BeaverCountyParcelsLir> BeaverCountyParcelsLir { get; set; }
        public virtual DbSet<BlmDistricts> BlmDistricts { get; set; }
        public virtual DbSet<BlmFieldOffices> BlmFieldOffices { get; set; }
        public virtual DbSet<BlmMonumentsAndNcas> BlmMonumentsAndNcas { get; set; }
        public virtual DbSet<BlmMonumentsAndNcasHistoric> BlmMonumentsAndNcasHistoric { get; set; }
        public virtual DbSet<BlmRmpTargetedLands> BlmRmpTargetedLands { get; set; }
        public virtual DbSet<BlmWildernessStudyAreasForUtah> BlmWildernessStudyAreasForUtah { get; set; }
        public virtual DbSet<BoatRamps> BoatRamps { get; set; }
        public virtual DbSet<BoxElderCountyParcels> BoxElderCountyParcels { get; set; }
        public virtual DbSet<BoxElderCountyParcelsLir> BoxElderCountyParcelsLir { get; set; }
        public virtual DbSet<BroadbandService> BroadbandService { get; set; }
        public virtual DbSet<Buildings> Buildings { get; set; }
        public virtual DbSet<CacheCountyParcels> CacheCountyParcels { get; set; }
        public virtual DbSet<CacheCountyParcelsLir> CacheCountyParcelsLir { get; set; }
        public virtual DbSet<CarbonCountyParcels> CarbonCountyParcels { get; set; }
        public virtual DbSet<CarbonCountyParcelsLir> CarbonCountyParcelsLir { get; set; }
        public virtual DbSet<Cemeteries> Cemeteries { get; set; }
        public virtual DbSet<CemeteriesPolygons> CemeteriesPolygons { get; set; }
        public virtual DbSet<Census2010CountySocioEconBasics> Census2010CountySocioEconBasics { get; set; }
        public virtual DbSet<CensusBlockGroups2010> CensusBlockGroups2010 { get; set; }
        public virtual DbSet<CensusBlocks2010> CensusBlocks2010 { get; set; }
        public virtual DbSet<CensusCounties2010> CensusCounties2010 { get; set; }
        public virtual DbSet<CensusEdges2010> CensusEdges2010 { get; set; }
        public virtual DbSet<CensusPlacePoints2010> CensusPlacePoints2010 { get; set; }
        public virtual DbSet<CensusPlaces2010> CensusPlaces2010 { get; set; }
        public virtual DbSet<CensusTracts2010> CensusTracts2010 { get; set; }
        public virtual DbSet<CityAndTownLocations> CityAndTownLocations { get; set; }
        public virtual DbSet<CityCourtsOfUtah> CityCourtsOfUtah { get; set; }
        public virtual DbSet<Coal4FootSeams> Coal4FootSeams { get; set; }
        public virtual DbSet<CoalDepositAreas1988> CoalDepositAreas1988 { get; set; }
        public virtual DbSet<CoalLeases> CoalLeases { get; set; }
        public virtual DbSet<CoalMinesUgs> CoalMinesUgs { get; set; }
        public virtual DbSet<ConservationDistricts> ConservationDistricts { get; set; }
        public virtual DbSet<ConservationZones> ConservationZones { get; set; }
        public virtual DbSet<ContourLineExtents> ContourLineExtents { get; set; }
        public virtual DbSet<Contours500Foot> Contours500Foot { get; set; }
        public virtual DbSet<ContoursGeneralized200Foot> ContoursGeneralized200Foot { get; set; }
        public virtual DbSet<CorrectionalFacilities> CorrectionalFacilities { get; set; }
        public virtual DbSet<CountiesLabelLines> CountiesLabelLines { get; set; }
        public virtual DbSet<CountiesModifications> CountiesModifications { get; set; }
        public virtual DbSet<CountyBoundaries> CountyBoundaries { get; set; }
        public virtual DbSet<CountyCourtsOfUtah> CountyCourtsOfUtah { get; set; }
        public virtual DbSet<DaggettCountyParcels> DaggettCountyParcels { get; set; }
        public virtual DbSet<DaggettCountyParcelsLir> DaggettCountyParcelsLir { get; set; }
        public virtual DbSet<DaqAirEmissionsInventory> DaqAirEmissionsInventory { get; set; }
        public virtual DbSet<DaqAirMonitorByStation> DaqAirMonitorByStation { get; set; }
        public virtual DbSet<DaqAirMonitorData> DaqAirMonitorData { get; set; }
        public virtual DbSet<DaqAirOilGasEmissions> DaqAirOilGasEmissions { get; set; }
        public virtual DbSet<DaqAirOilGasEmissionsPoint> DaqAirOilGasEmissionsPoint { get; set; }
        public virtual DbSet<DaqPermitCompApproval> DaqPermitCompApproval { get; set; }
        public virtual DbSet<DaqPermitCompTitleV> DaqPermitCompTitleV { get; set; }
        public virtual DbSet<DaqPre1978LeadInHomes> DaqPre1978LeadInHomes { get; set; }
        public virtual DbSet<DavisCountyParcels> DavisCountyParcels { get; set; }
        public virtual DbSet<DavisCountyParcelsLir> DavisCountyParcelsLir { get; set; }
        public virtual DbSet<DdwIrrigatedCropConsumptiveUseZones> DdwIrrigatedCropConsumptiveUseZones { get; set; }
        public virtual DbSet<DebrisFlowWasatchFront> DebrisFlowWasatchFront { get; set; }
        public virtual DbSet<DebrisFlowWasatchStudyBoundary> DebrisFlowWasatchStudyBoundary { get; set; }
        public virtual DbSet<DeqBrownfieldsOther> DeqBrownfieldsOther { get; set; }
        public virtual DbSet<DeqBrownfieldsTargeted> DeqBrownfieldsTargeted { get; set; }
        public virtual DbSet<DeqCerclaCerclisList> DeqCerclaCerclisList { get; set; }
        public virtual DbSet<DeqCerclaNationalPrioritiesList> DeqCerclaNationalPrioritiesList { get; set; }
        public virtual DbSet<DeqEnforceableWrittenAssurances> DeqEnforceableWrittenAssurances { get; set; }
        public virtual DbSet<DeqEnvironmentalCovenantBufferZones> DeqEnvironmentalCovenantBufferZones { get; set; }
        public virtual DbSet<DeqFormerlyUsedDefense> DeqFormerlyUsedDefense { get; set; }
        public virtual DbSet<DeqMilitaryMunitionResponseProgram> DeqMilitaryMunitionResponseProgram { get; set; }
        public virtual DbSet<DeqTier2> DeqTier2 { get; set; }
        public virtual DbSet<DeqToxicReleaseInventory> DeqToxicReleaseInventory { get; set; }
        public virtual DbSet<DeqUndergroundStorageTanks> DeqUndergroundStorageTanks { get; set; }
        public virtual DbSet<DeqVoluntaryCleanupProgram> DeqVoluntaryCleanupProgram { get; set; }
        public virtual DbSet<DeqmapCauselust> DeqmapCauselust { get; set; }
        public virtual DbSet<DeqmapCerclabranchactmaj> DeqmapCerclabranchactmaj { get; set; }
        public virtual DbSet<DeqmapCerclabranchactmin> DeqmapCerclabranchactmin { get; set; }
        public virtual DbSet<DeqmapCerclabranchic> DeqmapCerclabranchic { get; set; }
        public virtual DbSet<DeqmapCerclabrremed> DeqmapCerclabrremed { get; set; }
        public virtual DbSet<DeqmapCerclabrrestrict> DeqmapCerclabrrestrict { get; set; }
        public virtual DbSet<DeqmapComplianceust> DeqmapComplianceust { get; set; }
        public virtual DbSet<DeqmapEiChemical> DeqmapEiChemical { get; set; }
        public virtual DbSet<DeqmapEiImpactedMedia> DeqmapEiImpactedMedia { get; set; }
        public virtual DbSet<DeqmapLust> DeqmapLust { get; set; }
        public virtual DbSet<DeqmapRbcaoff> DeqmapRbcaoff { get; set; }
        public virtual DbSet<DeqmapRbcaon> DeqmapRbcaon { get; set; }
        public virtual DbSet<DeqmapSoiltype> DeqmapSoiltype { get; set; }
        public virtual DbSet<DeqmapTankust> DeqmapTankust { get; set; }
        public virtual DbSet<DeqmapTier2chem> DeqmapTier2chem { get; set; }
        public virtual DbSet<DeqmapTier2rptyr> DeqmapTier2rptyr { get; set; }
        public virtual DbSet<DeqmapTrichem> DeqmapTrichem { get; set; }
        public virtual DbSet<DeqmapTriowners> DeqmapTriowners { get; set; }
        public virtual DbSet<DeqmapTrirptyr> DeqmapTrirptyr { get; set; }
        public virtual DbSet<DistrictCombinationAreas2012> DistrictCombinationAreas2012 { get; set; }
        public virtual DbSet<DominantVegetation> DominantVegetation { get; set; }
        public virtual DbSet<DrgExtents> DrgExtents { get; set; }
        public virtual DbSet<DuchesneCountyParcels> DuchesneCountyParcels { get; set; }
        public virtual DbSet<DuchesneCountyParcelsLir> DuchesneCountyParcelsLir { get; set; }
        public virtual DbSet<DwmrcHazardousWasteAndUsedOilFacilities> DwmrcHazardousWasteAndUsedOilFacilities { get; set; }
        public virtual DbSet<DwmrcLowLevelWasteDisposalAndUraniumMillFacilities> DwmrcLowLevelWasteDisposalAndUraniumMillFacilities { get; set; }
        public virtual DbSet<DwmrcSolidWasteFacilities> DwmrcSolidWasteFacilities { get; set; }
        public virtual DbSet<DwqAssessedLakes> DwqAssessedLakes { get; set; }
        public virtual DbSet<DwqAssessedWaters> DwqAssessedWaters { get; set; }
        public virtual DbSet<DwqAssessmentUnits> DwqAssessmentUnits { get; set; }
        public virtual DbSet<DwqGroundwaterPermits> DwqGroundwaterPermits { get; set; }
        public virtual DbSet<DwqMercuryInFishTissue> DwqMercuryInFishTissue { get; set; }
        public virtual DbSet<DwqMonitoredLakes132> DwqMonitoredLakes132 { get; set; }
        public virtual DbSet<DwqMonitoringLocations> DwqMonitoringLocations { get; set; }
        public virtual DbSet<DwqStormWaterDischargers> DwqStormWaterDischargers { get; set; }
        public virtual DbSet<DwqUpdesDischargers> DwqUpdesDischargers { get; set; }
        public virtual DbSet<EarthquakeEpicenters1850To2016> EarthquakeEpicenters1850To2016 { get; set; }
        public virtual DbSet<EarthquakeEpicentersMiningInduced1928To2016> EarthquakeEpicentersMiningInduced1928To2016 { get; set; }
        public virtual DbSet<ElectricalLines> ElectricalLines { get; set; }
        public virtual DbSet<ElectricalService> ElectricalService { get; set; }
        public virtual DbSet<EmergencyMedicalServiceFacilities> EmergencyMedicalServiceFacilities { get; set; }
        public virtual DbSet<EmergencyMedicalServices> EmergencyMedicalServices { get; set; }
        public virtual DbSet<EmeryCountyParcels> EmeryCountyParcels { get; set; }
        public virtual DbSet<EnergyCorridorAreas> EnergyCorridorAreas { get; set; }
        public virtual DbSet<EnergyCorridorCenterline> EnergyCorridorCenterline { get; set; }
        public virtual DbSet<EnergyResourcesLine> EnergyResourcesLine { get; set; }
        public virtual DbSet<EnergyResourcesPoint> EnergyResourcesPoint { get; set; }
        public virtual DbSet<EnergyResourcesPolygons> EnergyResourcesPolygons { get; set; }
        public virtual DbSet<EnterpriseZones> EnterpriseZones { get; set; }
        public virtual DbSet<EntitiesNonTax> EntitiesNonTax { get; set; }
        public virtual DbSet<EnvironmentUstRiskAssessment> EnvironmentUstRiskAssessment { get; set; }
        public virtual DbSet<EnvironmentalIncidents> EnvironmentalIncidents { get; set; }
        public virtual DbSet<FacilityMonitoringSites> FacilityMonitoringSites { get; set; }
        public virtual DbSet<FirePerimeters> FirePerimeters { get; set; }
        public virtual DbSet<FireStations> FireStations { get; set; }
        public virtual DbSet<Floodplains> Floodplains { get; set; }
        public virtual DbSet<ForestServiceBoundaries> ForestServiceBoundaries { get; set; }
        public virtual DbSet<ForestServiceStations> ForestServiceStations { get; set; }
        public virtual DbSet<GarfieldCountyParcels> GarfieldCountyParcels { get; set; }
        public virtual DbSet<GarfieldCountyParcelsLir> GarfieldCountyParcelsLir { get; set; }
        public virtual DbSet<GeologicContacts> GeologicContacts { get; set; }
        public virtual DbSet<GeologicDikes> GeologicDikes { get; set; }
        public virtual DbSet<GeologicFormationsLine> GeologicFormationsLine { get; set; }
        public virtual DbSet<GeologicMarkers> GeologicMarkers { get; set; }
        public virtual DbSet<GeologicVeins> GeologicVeins { get; set; }
        public virtual DbSet<GeothermalLeases> GeothermalLeases { get; set; }
        public virtual DbSet<GnisPlaceNames> GnisPlaceNames { get; set; }
        public virtual DbSet<GolfCourses> GolfCourses { get; set; }
        public virtual DbSet<GoogleFlightBlocks> GoogleFlightBlocks { get; set; }
        public virtual DbSet<GoogleServiceDates> GoogleServiceDates { get; set; }
        public virtual DbSet<GrandCountyParcels> GrandCountyParcels { get; set; }
        public virtual DbSet<GrandCountyParcelsLir> GrandCountyParcelsLir { get; set; }
        public virtual DbSet<GrandStaircaseEscalanteNm> GrandStaircaseEscalanteNm { get; set; }
        public virtual DbSet<GrazingAllotments> GrazingAllotments { get; set; }
        public virtual DbSet<GrazingImprovementRegions> GrazingImprovementRegions { get; set; }
        public virtual DbSet<GreatSaltLakeFlooding> GreatSaltLakeFlooding { get; set; }
        public virtual DbSet<GreatSaltLakeMeanderLine> GreatSaltLakeMeanderLine { get; set; }
        public virtual DbSet<GreatSaltLakeShoreline> GreatSaltLakeShoreline { get; set; }
        public virtual DbSet<GreatSaltLakeShorelineFlooding> GreatSaltLakeShorelineFlooding { get; set; }
        public virtual DbSet<GsenmSpecialManagementArea> GsenmSpecialManagementArea { get; set; }
        public virtual DbSet<GsenmSpecialRecreationManagementArea> GsenmSpecialRecreationManagementArea { get; set; }
        public virtual DbSet<HealthCareDistricts> HealthCareDistricts { get; set; }
        public virtual DbSet<HealthCareFacilities> HealthCareFacilities { get; set; }
        public virtual DbSet<HealthDistricts2015> HealthDistricts2015 { get; set; }
        public virtual DbSet<HealthSmallStatisticalAreas2017> HealthSmallStatisticalAreas2017 { get; set; }
        public virtual DbSet<HealthSmallStatisticalAreas2018> HealthSmallStatisticalAreas2018 { get; set; }
        public virtual DbSet<HealthSmallStatisticalAreasObesityAndActivity> HealthSmallStatisticalAreasObesityAndActivity { get; set; }
        public virtual DbSet<HexagonGrid1km> HexagonGrid1km { get; set; }
        public virtual DbSet<HexagonServiceDates> HexagonServiceDates { get; set; }
        public virtual DbSet<HighestPeaks> HighestPeaks { get; set; }
        public virtual DbSet<HighwayPatrolFieldSections> HighwayPatrolFieldSections { get; set; }
        public virtual DbSet<HistoricDistricts> HistoricDistricts { get; set; }
        public virtual DbSet<HistoricLakeBonneville> HistoricLakeBonneville { get; set; }
        public virtual DbSet<HistoricTrails> HistoricTrails { get; set; }
        public virtual DbSet<HouseDistricts2002> HouseDistricts2002 { get; set; }
        public virtual DbSet<HouseDistricts2012> HouseDistricts2012 { get; set; }
        public virtual DbSet<HucBoundaries> HucBoundaries { get; set; }
        public virtual DbSet<InlandPortAuthorityHb2001> InlandPortAuthorityHb2001 { get; set; }
        public virtual DbSet<IronCountyParcels> IronCountyParcels { get; set; }
        public virtual DbSet<IronCountyParcelsLir> IronCountyParcelsLir { get; set; }
        public virtual DbSet<JuabCountyParcels> JuabCountyParcels { get; set; }
        public virtual DbSet<JuabCountyParcelsLir> JuabCountyParcelsLir { get; set; }
        public virtual DbSet<JudicialDistricts> JudicialDistricts { get; set; }
        public virtual DbSet<KaneCountyParcels> KaneCountyParcels { get; set; }
        public virtual DbSet<KaneCountyParcelsLir> KaneCountyParcelsLir { get; set; }
        public virtual DbSet<LakeMonitorSites> LakeMonitorSites { get; set; }
        public virtual DbSet<LakeMonitoring> LakeMonitoring { get; set; }
        public virtual DbSet<LakesNhd> LakesNhd { get; set; }
        public virtual DbSet<LandOwnership> LandOwnership { get; set; }
        public virtual DbSet<LandslideCompilationDebrisFlowPaths> LandslideCompilationDebrisFlowPaths { get; set; }
        public virtual DbSet<LandslideCompilationPolygons> LandslideCompilationPolygons { get; set; }
        public virtual DbSet<LandslideCompilationScarps> LandslideCompilationScarps { get; set; }
        public virtual DbSet<LandslideInventoryMappedAreas> LandslideInventoryMappedAreas { get; set; }
        public virtual DbSet<LandslideInventoryPolygons> LandslideInventoryPolygons { get; set; }
        public virtual DbSet<LawEnforcement> LawEnforcement { get; set; }
        public virtual DbSet<LawEnforcementBoundaries> LawEnforcementBoundaries { get; set; }
        public virtual DbSet<Libraries> Libraries { get; set; }
        public virtual DbSet<LidarExtents> LidarExtents { get; set; }
        public virtual DbSet<LiquefactionPotential> LiquefactionPotential { get; set; }
        public virtual DbSet<LiquorStores> LiquorStores { get; set; }
        public virtual DbSet<LucaBlockAddressCounts2017> LucaBlockAddressCounts2017 { get; set; }
        public virtual DbSet<MajorLakes> MajorLakes { get; set; }
        public virtual DbSet<MajorRiversPolygons> MajorRiversPolygons { get; set; }
        public virtual DbSet<MetroMicroStatisticalAreas> MetroMicroStatisticalAreas { get; set; }
        public virtual DbSet<MetroTownships> MetroTownships { get; set; }
        public virtual DbSet<MillardCountyParcels> MillardCountyParcels { get; set; }
        public virtual DbSet<MillardCountyParcelsLir> MillardCountyParcelsLir { get; set; }
        public virtual DbSet<Minerals> Minerals { get; set; }
        public virtual DbSet<MorganCountyParcels> MorganCountyParcels { get; set; }
        public virtual DbSet<MorganCountyParcelsLir> MorganCountyParcelsLir { get; set; }
        public virtual DbSet<MunicipalBoundaries> MunicipalBoundaries { get; set; }
        public virtual DbSet<MunicipalBoundariesCartography> MunicipalBoundariesCartography { get; set; }
        public virtual DbSet<MunicipalitiesModifications> MunicipalitiesModifications { get; set; }
        public virtual DbSet<NationalGrid> NationalGrid { get; set; }
        public virtual DbSet<NaturalGasServiceAreasApprox> NaturalGasServiceAreasApprox { get; set; }
        public virtual DbSet<NavajoChapters> NavajoChapters { get; set; }
        public virtual DbSet<NcaPropSanJuanCounty> NcaPropSanJuanCounty { get; set; }
        public virtual DbSet<NhdPointsAll> NhdPointsAll { get; set; }
        public virtual DbSet<NwsForecastZones> NwsForecastZones { get; set; }
        public virtual DbSet<OilGasFields> OilGasFields { get; set; }
        public virtual DbSet<OilGasWells> OilGasWells { get; set; }
        public virtual DbSet<OilGasWellsDownHoles> OilGasWellsDownHoles { get; set; }
        public virtual DbSet<OilGasWellsPaths> OilGasWellsPaths { get; set; }
        public virtual DbSet<ParksLocal> ParksLocal { get; set; }
        public virtual DbSet<PermittedUraniumMines> PermittedUraniumMines { get; set; }
        public virtual DbSet<PhysiographicSubdivisions> PhysiographicSubdivisions { get; set; }
        public virtual DbSet<PiuteCountyParcels> PiuteCountyParcels { get; set; }
        public virtual DbSet<PliAreasProposalJan16> PliAreasProposalJan16 { get; set; }
        public virtual DbSet<PliLinesProposalJan16> PliLinesProposalJan16 { get; set; }
        public virtual DbSet<PlssEditTracker> PlssEditTracker { get; set; }
        public virtual DbSet<PlssPointAgrc> PlssPointAgrc { get; set; }
        public virtual DbSet<PlssPointGcdb> PlssPointGcdb { get; set; }
        public virtual DbSet<PlssQuarterQuarterSectionsGcdb> PlssQuarterQuarterSectionsGcdb { get; set; }
        public virtual DbSet<PlssQuarterSectionsGcdb> PlssQuarterSectionsGcdb { get; set; }
        public virtual DbSet<PlssSectionLookup> PlssSectionLookup { get; set; }
        public virtual DbSet<PlssSectionsGcdb> PlssSectionsGcdb { get; set; }
        public virtual DbSet<PlssTownshipAndRangeLookup> PlssTownshipAndRangeLookup { get; set; }
        public virtual DbSet<PlssTownshipsGcdb> PlssTownshipsGcdb { get; set; }
        public virtual DbSet<PopulationBlockAreas2010Approx> PopulationBlockAreas2010Approx { get; set; }
        public virtual DbSet<PopulationPlacePoints2010Approx> PopulationPlacePoints2010Approx { get; set; }
        public virtual DbSet<PortsOfEntry> PortsOfEntry { get; set; }
        public virtual DbSet<PostOffices> PostOffices { get; set; }
        public virtual DbSet<PowerPlantsCo2> PowerPlantsCo2 { get; set; }
        public virtual DbSet<PrimitivePropEmeryCounty> PrimitivePropEmeryCounty { get; set; }
        public virtual DbSet<PublicLandsInitiativeHr5780AreasBlm2016> PublicLandsInitiativeHr5780AreasBlm2016 { get; set; }
        public virtual DbSet<PublicLandsInitiativeHr5780LinesBlm2016> PublicLandsInitiativeHr5780LinesBlm2016 { get; set; }
        public virtual DbSet<PublicSafetyAnsweringPointBoundaries> PublicSafetyAnsweringPointBoundaries { get; set; }
        public virtual DbSet<PublicSafetyAnsweringPointLocations> PublicSafetyAnsweringPointLocations { get; set; }
        public virtual DbSet<QuaternaryFaults> QuaternaryFaults { get; set; }
        public virtual DbSet<QuaternaryVolcanicFlow> QuaternaryVolcanicFlow { get; set; }
        public virtual DbSet<QuaternaryVolcanicVents> QuaternaryVolcanicVents { get; set; }
        public virtual DbSet<RailroadMileposts> RailroadMileposts { get; set; }
        public virtual DbSet<Railroads> Railroads { get; set; }
        public virtual DbSet<RetailCulinaryWaterServiceAreas> RetailCulinaryWaterServiceAreas { get; set; }
        public virtual DbSet<RichCountyParcels> RichCountyParcels { get; set; }
        public virtual DbSet<RichCountyParcelsLir> RichCountyParcelsLir { get; set; }
        public virtual DbSet<Roads> Roads { get; set; }
        public virtual DbSet<RoadsFreewayExits> RoadsFreewayExits { get; set; }
        public virtual DbSet<RuralTelecomBoundaries> RuralTelecomBoundaries { get; set; }
        public virtual DbSet<SalesTaxZones> SalesTaxZones { get; set; }
        public virtual DbSet<SaltLakeCountyParcels> SaltLakeCountyParcels { get; set; }
        public virtual DbSet<SaltLakeCountyParcelsLir> SaltLakeCountyParcelsLir { get; set; }
        public virtual DbSet<SanJuanCountyParcels> SanJuanCountyParcels { get; set; }
        public virtual DbSet<SanJuanCountyParcelsLir> SanJuanCountyParcelsLir { get; set; }
        public virtual DbSet<SanpeteCountyParcels> SanpeteCountyParcels { get; set; }
        public virtual DbSet<SanpeteCountyParcelsLir> SanpeteCountyParcelsLir { get; set; }
        public virtual DbSet<SchoolBoardDistricts2012> SchoolBoardDistricts2012 { get; set; }
        public virtual DbSet<SchoolBoardDistricts2015> SchoolBoardDistricts2015 { get; set; }
        public virtual DbSet<SchoolBoardDistrictsMembers> SchoolBoardDistrictsMembers { get; set; }
        public virtual DbSet<SchoolDistrictBoundaries> SchoolDistrictBoundaries { get; set; }
        public virtual DbSet<Schools> Schools { get; set; }
        public virtual DbSet<SemiPrimitivePropEmeryCounty> SemiPrimitivePropEmeryCounty { get; set; }
        public virtual DbSet<SenateDistricts2002> SenateDistricts2002 { get; set; }
        public virtual DbSet<SenateDistricts2012> SenateDistricts2012 { get; set; }
        public virtual DbSet<SevierCountyParcels> SevierCountyParcels { get; set; }
        public virtual DbSet<SevierCountyParcelsLir> SevierCountyParcelsLir { get; set; }
        public virtual DbSet<ShallowGroundWater> ShallowGroundWater { get; set; }
        public virtual DbSet<SkiAreaBoundaries> SkiAreaBoundaries { get; set; }
        public virtual DbSet<SkiAreaResortLocations> SkiAreaResortLocations { get; set; }
        public virtual DbSet<SkiLifts> SkiLifts { get; set; }
        public virtual DbSet<SkiTrailsXc> SkiTrailsXc { get; set; }
        public virtual DbSet<SpringsNhd> SpringsNhd { get; set; }
        public virtual DbSet<StateAgencyDispatch> StateAgencyDispatch { get; set; }
        public virtual DbSet<StateBoundary> StateBoundary { get; set; }
        public virtual DbSet<StateCourtDistricts> StateCourtDistricts { get; set; }
        public virtual DbSet<StateFacilityLocations> StateFacilityLocations { get; set; }
        public virtual DbSet<Stations> Stations { get; set; }
        public virtual DbSet<StreamGaugesNhd> StreamGaugesNhd { get; set; }
        public virtual DbSet<StreamMonitorSites> StreamMonitorSites { get; set; }
        public virtual DbSet<StreamsNhd> StreamsNhd { get; set; }
        public virtual DbSet<SummitCountyParcels> SummitCountyParcels { get; set; }
        public virtual DbSet<SummitCountyParcelsLir> SummitCountyParcelsLir { get; set; }
        public virtual DbSet<TarSands> TarSands { get; set; }
        public virtual DbSet<TaxAreas2018> TaxAreas2018 { get; set; }
        public virtual DbSet<TaxEntities2018> TaxEntities2018 { get; set; }
        public virtual DbSet<TooeleCountyParcels> TooeleCountyParcels { get; set; }
        public virtual DbSet<TooeleCountyParcelsLir> TooeleCountyParcelsLir { get; set; }
        public virtual DbSet<TotalIcAndReservationTribalLand> TotalIcAndReservationTribalLand { get; set; }
        public virtual DbSet<Trailheads> Trailheads { get; set; }
        public virtual DbSet<Trails> Trails { get; set; }
        public virtual DbSet<TransitSpecialTaxAreas> TransitSpecialTaxAreas { get; set; }
        public virtual DbSet<TransmissionLines> TransmissionLines { get; set; }
        public virtual DbSet<TurnGpsBaselines> TurnGpsBaselines { get; set; }
        public virtual DbSet<TurnGpsStations> TurnGpsStations { get; set; }
        public virtual DbSet<UdotMapScenicByways> UdotMapScenicByways { get; set; }
        public virtual DbSet<UdotMileposts> UdotMileposts { get; set; }
        public virtual DbSet<UdotRoutesLrs> UdotRoutesLrs { get; set; }
        public virtual DbSet<UdotTenthMileRefPoints> UdotTenthMileRefPoints { get; set; }
        public virtual DbSet<UgsUraniumDistricts> UgsUraniumDistricts { get; set; }
        public virtual DbSet<UintahCountyParcels> UintahCountyParcels { get; set; }
        public virtual DbSet<UndergroundInjectionControlAuthorization> UndergroundInjectionControlAuthorization { get; set; }
        public virtual DbSet<UndergroundInjectionControlAuthorizationAction> UndergroundInjectionControlAuthorizationAction { get; set; }
        public virtual DbSet<UndergroundInjectionControlFacility> UndergroundInjectionControlFacility { get; set; }
        public virtual DbSet<UndergroundInjectionControlWell> UndergroundInjectionControlWell { get; set; }
        public virtual DbSet<UndergroundInjectionControlWellOperatingStatus> UndergroundInjectionControlWellOperatingStatus { get; set; }
        public virtual DbSet<UnincorporatedAreas2010Approx> UnincorporatedAreas2010Approx { get; set; }
        public virtual DbSet<UniqueHouseSenate2002> UniqueHouseSenate2002 { get; set; }
        public virtual DbSet<UnpopulatedAreas2010Approx> UnpopulatedAreas2010Approx { get; set; }
        public virtual DbSet<UpdesSites> UpdesSites { get; set; }
        public virtual DbSet<UraniumAreaBoundaries> UraniumAreaBoundaries { get; set; }
        public virtual DbSet<UraniumMills> UraniumMills { get; set; }
        public virtual DbSet<UraniumPastProducers> UraniumPastProducers { get; set; }
        public virtual DbSet<UrbanAreasCensus2010> UrbanAreasCensus2010 { get; set; }
        public virtual DbSet<UrbanInterfaceAreas> UrbanInterfaceAreas { get; set; }
        public virtual DbSet<UrezPhase1GeothermalZones> UrezPhase1GeothermalZones { get; set; }
        public virtual DbSet<UrezPhase1SolarZones> UrezPhase1SolarZones { get; set; }
        public virtual DbSet<UrezPhase1Transmission> UrezPhase1Transmission { get; set; }
        public virtual DbSet<UrezPhase1WindDrainage> UrezPhase1WindDrainage { get; set; }
        public virtual DbSet<UrezPhase1WindZones> UrezPhase1WindZones { get; set; }
        public virtual DbSet<UrezPhase2ConceptualTransmission> UrezPhase2ConceptualTransmission { get; set; }
        public virtual DbSet<UrezPhase2Geothermal> UrezPhase2Geothermal { get; set; }
        public virtual DbSet<UrezPhase2ZoneBoundaries> UrezPhase2ZoneBoundaries { get; set; }
        public virtual DbSet<UsCongressDistricts> UsCongressDistricts { get; set; }
        public virtual DbSet<UsCongressDistricts2002> UsCongressDistricts2002 { get; set; }
        public virtual DbSet<UsStates> UsStates { get; set; }
        public virtual DbSet<UsfsRoadlessInventory> UsfsRoadlessInventory { get; set; }
        public virtual DbSet<UsfsWildernessAreas> UsfsWildernessAreas { get; set; }
        public virtual DbSet<Usgs100kQuads> Usgs100kQuads { get; set; }
        public virtual DbSet<Usgs24kQuads> Usgs24kQuads { get; set; }
        public virtual DbSet<Usgs24kQuarterQuads> Usgs24kQuarterQuads { get; set; }
        public virtual DbSet<Usgs250kQuads1x1> Usgs250kQuads1x1 { get; set; }
        public virtual DbSet<Usgs250kQuads1x2> Usgs250kQuads1x2 { get; set; }
        public virtual DbSet<Usgs3dep1kGrid> Usgs3dep1kGrid { get; set; }
        public virtual DbSet<UsgsDemExtents> UsgsDemExtents { get; set; }
        public virtual DbSet<UtaBusFlexRoutes> UtaBusFlexRoutes { get; set; }
        public virtual DbSet<UtaBusRoutesWasatchFront> UtaBusRoutesWasatchFront { get; set; }
        public virtual DbSet<UtaBusStopsWasatchFront> UtaBusStopsWasatchFront { get; set; }
        public virtual DbSet<UtaCommuterRailRoutes> UtaCommuterRailRoutes { get; set; }
        public virtual DbSet<UtaCommuterRailStations> UtaCommuterRailStations { get; set; }
        public virtual DbSet<UtaLightRailRoutes> UtaLightRailRoutes { get; set; }
        public virtual DbSet<UtaLightRailStations> UtaLightRailStations { get; set; }
        public virtual DbSet<UtahCountyParcels> UtahCountyParcels { get; set; }
        public virtual DbSet<UtahCountyParcelsLir> UtahCountyParcelsLir { get; set; }
        public virtual DbSet<Uwc2008CherryStemRoads> Uwc2008CherryStemRoads { get; set; }
        public virtual DbSet<VistaBallotAreas> VistaBallotAreas { get; set; }
        public virtual DbSet<VistaBallotAreasProposed> VistaBallotAreasProposed { get; set; }
        public virtual DbSet<VolcanicCones> VolcanicCones { get; set; }
        public virtual DbSet<WasatchCountyParcels> WasatchCountyParcels { get; set; }
        public virtual DbSet<WasatchCountyParcelsLir> WasatchCountyParcelsLir { get; set; }
        public virtual DbSet<WashingtonCountyParcels> WashingtonCountyParcels { get; set; }
        public virtual DbSet<WashingtonCountyParcelsLir> WashingtonCountyParcelsLir { get; set; }
        public virtual DbSet<WaterRelatedLandUse> WaterRelatedLandUse { get; set; }
        public virtual DbSet<WatershedsArea> WatershedsArea { get; set; }
        public virtual DbSet<WayneCountyParcels> WayneCountyParcels { get; set; }
        public virtual DbSet<WayneCountyParcelsLir> WayneCountyParcelsLir { get; set; }
        public virtual DbSet<WeatherStations> WeatherStations { get; set; }
        public virtual DbSet<WeberCountyParcels> WeberCountyParcels { get; set; }
        public virtual DbSet<WeberCountyParcelsLir> WeberCountyParcelsLir { get; set; }
        public virtual DbSet<Wetlands> Wetlands { get; set; }
        public virtual DbSet<WetlandsMappingProjects> WetlandsMappingProjects { get; set; }
        public virtual DbSet<WildernessBlm98Reinventory> WildernessBlm98Reinventory { get; set; }
        public virtual DbSet<WildernessBlmSuitability> WildernessBlmSuitability { get; set; }
        public virtual DbSet<WildernessProposalBlm> WildernessProposalBlm { get; set; }
        public virtual DbSet<WildernessProposalHr1500> WildernessProposalHr1500 { get; set; }
        public virtual DbSet<WildernessProposalHr1745> WildernessProposalHr1745 { get; set; }
        public virtual DbSet<WildernessProposalNineco1995> WildernessProposalNineco1995 { get; set; }
        public virtual DbSet<WildernessProposalRedRock> WildernessProposalRedRock { get; set; }
        public virtual DbSet<WildernessProposalUwa1995> WildernessProposalUwa1995 { get; set; }
        public virtual DbSet<WildernessProposalUwc1989> WildernessProposalUwc1989 { get; set; }
        public virtual DbSet<WildernessProposalUwc1995> WildernessProposalUwc1995 { get; set; }
        public virtual DbSet<WildernessProposalUwc2008> WildernessProposalUwc2008 { get; set; }
        public virtual DbSet<WildernessProposalWashingtonCounty> WildernessProposalWashingtonCounty { get; set; }
        public virtual DbSet<WildernessProposalWestDesert1999> WildernessProposalWestDesert1999 { get; set; }
        public virtual DbSet<WildfirePerimeters> WildfirePerimeters { get; set; }
        public virtual DbSet<ZipCodeAreas> ZipCodeAreas { get; set; }
        public virtual DbSet<ZipCodePoBoxes> ZipCodePoBoxes { get; set; }
        public virtual DbSet<ZoomLocations> ZoomLocations { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseNpgsql("Name=OpenSGID", x => x.UseNetTopologySuite());
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasPostgresExtension("postgis");

            modelBuilder.Entity<AddressPoints>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("address_points_pkey");

                entity.ToTable("address_points", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("address_points_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Addnum)
                    .HasColumnName("addnum")
                    .HasMaxLength(10);

                entity.Property(e => e.Addnumsuffix)
                    .HasColumnName("addnumsuffix")
                    .HasMaxLength(4);

                entity.Property(e => e.Addsource)
                    .HasColumnName("addsource")
                    .HasMaxLength(30);

                entity.Property(e => e.Addsystem)
                    .HasColumnName("addsystem")
                    .HasMaxLength(40);

                entity.Property(e => e.Building)
                    .HasColumnName("building")
                    .HasMaxLength(75);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.Countyid)
                    .HasColumnName("countyid")
                    .HasMaxLength(15);

                entity.Property(e => e.Fulladd)
                    .HasColumnName("fulladd")
                    .HasMaxLength(100);

                entity.Property(e => e.Landmarkname)
                    .HasColumnName("landmarkname")
                    .HasMaxLength(75);

                entity.Property(e => e.Loaddate)
                    .HasColumnName("loaddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelid)
                    .HasColumnName("parcelid")
                    .HasMaxLength(30);

                entity.Property(e => e.Prefixdir)
                    .HasColumnName("prefixdir")
                    .HasMaxLength(1);

                entity.Property(e => e.Ptlocation)
                    .HasColumnName("ptlocation")
                    .HasMaxLength(30);

                entity.Property(e => e.Pttype)
                    .HasColumnName("pttype")
                    .HasMaxLength(15);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Streetname)
                    .HasColumnName("streetname")
                    .HasMaxLength(50);

                entity.Property(e => e.Streettype)
                    .HasColumnName("streettype")
                    .HasMaxLength(4);

                entity.Property(e => e.Structure)
                    .HasColumnName("structure")
                    .HasMaxLength(10);

                entity.Property(e => e.Suffixdir)
                    .HasColumnName("suffixdir")
                    .HasMaxLength(1);

                entity.Property(e => e.Unitid)
                    .HasColumnName("unitid")
                    .HasMaxLength(20);

                entity.Property(e => e.Unittype)
                    .HasColumnName("unittype")
                    .HasMaxLength(20);

                entity.Property(e => e.Usng)
                    .HasColumnName("usng")
                    .HasMaxLength(10);

                entity.Property(e => e.Utaddptid)
                    .HasColumnName("utaddptid")
                    .HasMaxLength(140);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<AddressSystemQuadrants>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("address_system_quadrants_pkey");

                entity.ToTable("address_system_quadrants", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("address_system_quadrants_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(25);

                entity.Property(e => e.GridName)
                    .HasColumnName("grid_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Quadrant)
                    .HasColumnName("quadrant")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<AerialPhotographyExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("aerial_photography_extents_pkey");

                entity.ToTable("aerial_photography_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("aerial_photography_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.Endpoint)
                    .HasColumnName("endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(100);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(100);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Airport>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("airport_pkey");

                entity.ToTable("airport", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("airport_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CityName)
                    .HasColumnName("city_name")
                    .HasMaxLength(26);

                entity.Property(e => e.CountyNam)
                    .HasColumnName("county_nam")
                    .HasMaxLength(21);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FacType)
                    .HasColumnName("fac_type")
                    .HasMaxLength(13);

                entity.Property(e => e.Fullname)
                    .HasColumnName("fullname")
                    .HasMaxLength(42);

                entity.Property(e => e.LocId)
                    .HasColumnName("loc_id")
                    .HasMaxLength(4);

                entity.Property(e => e.OwnerType)
                    .HasColumnName("owner_type")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.SiteNo)
                    .HasColumnName("site_no")
                    .HasMaxLength(11);
            });

            modelBuilder.Entity<AirportLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("airport_locations_pkey");

                entity.ToTable("airport_locations", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("airport_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ActDate)
                    .HasColumnName("act_date")
                    .HasMaxLength(7);

                entity.Property(e => e.AeroChart)
                    .HasColumnName("aero_chart")
                    .HasMaxLength(30);

                entity.Property(e => e.AirTaxi)
                    .HasColumnName("air_taxi")
                    .HasMaxLength(6);

                entity.Property(e => e.Arrivals)
                    .HasColumnName("arrivals")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.CbdDir)
                    .HasColumnName("cbd_dir")
                    .HasMaxLength(3);

                entity.Property(e => e.CbdDist)
                    .HasColumnName("cbd_dist")
                    .HasMaxLength(2);

                entity.Property(e => e.CertType)
                    .HasColumnName("cert_type")
                    .HasMaxLength(15);

                entity.Property(e => e.CityName)
                    .HasColumnName("city_name")
                    .HasMaxLength(40);

                entity.Property(e => e.CntlTwr)
                    .HasColumnName("cntl_twr")
                    .HasMaxLength(1);

                entity.Property(e => e.CommServ)
                    .HasColumnName("comm_serv")
                    .HasMaxLength(6);

                entity.Property(e => e.CountyNam)
                    .HasColumnName("county_nam")
                    .HasMaxLength(21);

                entity.Property(e => e.CountySt)
                    .HasColumnName("county_st")
                    .HasMaxLength(2);

                entity.Property(e => e.CustLndg)
                    .HasColumnName("cust_lndg")
                    .HasMaxLength(1);

                entity.Property(e => e.Departures)
                    .HasColumnName("departures")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.EffDate)
                    .HasColumnName("eff_date")
                    .HasMaxLength(10);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasMaxLength(7);

                entity.Property(e => e.Enplanemen)
                    .HasColumnName("enplanemen")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FaaDistri)
                    .HasColumnName("faa_distri")
                    .HasMaxLength(4);

                entity.Property(e => e.FaaRegion)
                    .HasColumnName("faa_region")
                    .HasMaxLength(3);

                entity.Property(e => e.FaaSt)
                    .HasColumnName("faa_st")
                    .HasMaxLength(2);

                entity.Property(e => e.FacCystzp)
                    .HasColumnName("fac_cystzp")
                    .HasMaxLength(45);

                entity.Property(e => e.FacUse)
                    .HasColumnName("fac_use")
                    .HasMaxLength(2);

                entity.Property(e => e.FedAgree)
                    .HasColumnName("fed_agree")
                    .HasMaxLength(7);

                entity.Property(e => e.Fullname)
                    .HasColumnName("fullname")
                    .HasMaxLength(50);

                entity.Property(e => e.Helicopter)
                    .HasColumnName("helicopter")
                    .HasMaxLength(3);

                entity.Property(e => e.Internatio)
                    .HasColumnName("internatio")
                    .HasMaxLength(1);

                entity.Property(e => e.ItinOps)
                    .HasColumnName("itin_ops")
                    .HasMaxLength(6);

                entity.Property(e => e.JetEnGa)
                    .HasColumnName("jet_en_ga")
                    .HasMaxLength(3);

                entity.Property(e => e.JointUse)
                    .HasColumnName("joint_use")
                    .HasMaxLength(1);

                entity.Property(e => e.LanFaTy)
                    .HasColumnName("lan_fa_ty")
                    .HasMaxLength(13);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LocalOps)
                    .HasColumnName("local_ops")
                    .HasMaxLength(6);

                entity.Property(e => e.Locid)
                    .HasColumnName("locid")
                    .HasMaxLength(4);

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MEngGa)
                    .HasColumnName("m_eng_ga")
                    .HasMaxLength(3);

                entity.Property(e => e.MilLndgR)
                    .HasColumnName("mil_lndg_r")
                    .HasMaxLength(1);

                entity.Property(e => e.MilOps)
                    .HasColumnName("mil_ops")
                    .HasMaxLength(6);

                entity.Property(e => e.OperGlide)
                    .HasColumnName("oper_glide")
                    .HasMaxLength(3);

                entity.Property(e => e.OperMil)
                    .HasColumnName("oper_mil")
                    .HasMaxLength(3);

                entity.Property(e => e.OwnerType)
                    .HasColumnName("owner_type")
                    .HasMaxLength(2);

                entity.Property(e => e.Passengers)
                    .HasColumnName("passengers")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SEngGa)
                    .HasColumnName("s_eng_ga")
                    .HasMaxLength(3);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteNo)
                    .HasColumnName("site_no")
                    .HasMaxLength(11);

                entity.Property(e => e.StPostal)
                    .HasColumnName("st_postal")
                    .HasMaxLength(2);

                entity.Property(e => e.StateName)
                    .HasColumnName("state_name")
                    .HasMaxLength(20);

                entity.Property(e => e.Stfips)
                    .HasColumnName("stfips")
                    .HasMaxLength(2);

                entity.Property(e => e.Ultralight)
                    .HasColumnName("ultralight")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<AlluvialFans>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("alluvial_fans_pkey");

                entity.ToTable("alluvial_fans", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("alluvial_fans_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(254);

                entity.Property(e => e.FemaFloodZone)
                    .HasColumnName("fema_flood_zone")
                    .HasMaxLength(17);

                entity.Property(e => e.FieldNotes)
                    .HasColumnName("field_notes")
                    .HasMaxLength(254);

                entity.Property(e => e.GeologicMapDescription)
                    .HasColumnName("geologic_map_description")
                    .HasMaxLength(254);

                entity.Property(e => e.GeologicMapUnit)
                    .HasColumnName("geologic_map_unit")
                    .HasMaxLength(10);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Municipality)
                    .HasColumnName("municipality")
                    .HasMaxLength(254);

                entity.Property(e => e.RelativeHazard)
                    .HasColumnName("relative_hazard")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.UgsFloodHazard)
                    .HasColumnName("ugs_flood_hazard")
                    .HasMaxLength(20);

                entity.Property(e => e.UgsLandslideDescription)
                    .HasColumnName("ugs_landslide_description")
                    .HasMaxLength(150);

                entity.Property(e => e.UgsLandslideMoveType)
                    .HasColumnName("ugs_landslide_move_type")
                    .HasMaxLength(50);

                entity.Property(e => e.Watercourse)
                    .HasColumnName("watercourse")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<AquiferBasinFillBoundary>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("aquifer_basin_fill_boundary_pkey");

                entity.ToTable("aquifer_basin_fill_boundary", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("aquifer_basin_fill_boundary_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<AquiferRechargeDischargeAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("aquifer_recharge_discharge_areas_pkey");

                entity.ToTable("aquifer_recharge_discharge_areas", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("aquifer_recharge_discharge_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(50);

                entity.Property(e => e.Author)
                    .HasColumnName("author")
                    .HasMaxLength(50);

                entity.Property(e => e.Pubyear)
                    .HasColumnName("pubyear")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Studyarea)
                    .HasColumnName("studyarea")
                    .HasMaxLength(50);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ArchaeologySites>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("archaeology_sites_pkey");

                entity.ToTable("archaeology_sites", "history");

                entity.HasIndex(e => e.Shape)
                    .HasName("archaeology_sites_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AddInfo)
                    .HasColumnName("add_info")
                    .HasMaxLength(255);

                entity.Property(e => e.Presenceyn)
                    .HasColumnName("presenceyn")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Warning1)
                    .HasColumnName("warning1")
                    .HasMaxLength(255);

                entity.Property(e => e.Warning2)
                    .HasColumnName("warning2")
                    .HasMaxLength(255);

                entity.Property(e => e.Warning3)
                    .HasColumnName("warning3")
                    .HasMaxLength(255);

                entity.Property(e => e.Warning4)
                    .HasColumnName("warning4")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<AssociationOfGovernments>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("association_of_governments_pkey");

                entity.ToTable("association_of_governments", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("association_of_governments_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AogName)
                    .HasColumnName("aog_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<AutoCorrelatedDemExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("auto_correlated_dem_extents_pkey");

                entity.ToTable("auto_correlated_dem_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("auto_correlated_dem_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(50);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(100);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Metadata)
                    .HasColumnName("metadata")
                    .HasMaxLength(50);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Report)
                    .HasColumnName("report")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<AvalanchePaths>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("avalanche_paths_pkey");

                entity.ToTable("avalanche_paths", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("avalanche_paths_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DistanceToHighway)
                    .HasColumnName("distance_to_highway")
                    .HasMaxLength(10);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.ReturnInterval)
                    .HasColumnName("return_interval")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SizeOfSlidepath)
                    .HasColumnName("size_of_slidepath")
                    .HasMaxLength(50);

                entity.Property(e => e.StartingZoneAspect)
                    .HasColumnName("starting_zone_aspect")
                    .HasMaxLength(10);

                entity.Property(e => e.StartingZoneElev)
                    .HasColumnName("starting_zone_elev")
                    .HasMaxLength(10);

                entity.Property(e => e.VerticalFall)
                    .HasColumnName("vertical_fall")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<AvalancheRoseTriCanyons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("avalanche_rose_tri_canyons_pkey");

                entity.ToTable("avalanche_rose_tri_canyons", "elevation");

                entity.HasIndex(e => e.Shape)
                    .HasName("avalanche_rose_tri_canyons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aspect)
                    .HasColumnName("aspect")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Gridcode)
                    .HasColumnName("gridcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<BeaverCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("beaver_county_parcels_pkey");

                entity.ToTable("beaver_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("beaver_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<BeaverCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("beaver_county_parcels_lir_pkey");

                entity.ToTable("beaver_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("beaver_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<BlmDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_districts_pkey");

                entity.ToTable("blm_districts", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DoCode)
                    .HasColumnName("do_code")
                    .HasMaxLength(10);

                entity.Property(e => e.DoName)
                    .HasColumnName("do_name")
                    .HasMaxLength(50);

                entity.Property(e => e.FoCode)
                    .HasColumnName("fo_code")
                    .HasMaxLength(10);

                entity.Property(e => e.FoName)
                    .HasColumnName("fo_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("shape_leng")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<BlmFieldOffices>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_field_offices_pkey");

                entity.ToTable("blm_field_offices", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_field_offices_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.OfficeTyp)
                    .HasColumnName("office_typ")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<BlmMonumentsAndNcas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_monuments_and_ncas_pkey");

                entity.ToTable("blm_monuments_and_ncas", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_monuments_and_ncas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AdminSt)
                    .HasColumnName("admin_st")
                    .HasMaxLength(2);

                entity.Property(e => e.CasefileNo)
                    .HasColumnName("casefile_no")
                    .HasMaxLength(17);

                entity.Property(e => e.NlcsId)
                    .HasColumnName("nlcs_id")
                    .HasMaxLength(10);

                entity.Property(e => e.NlcsName)
                    .HasColumnName("nlcs_name")
                    .HasMaxLength(100);

                entity.Property(e => e.NlcsType)
                    .HasColumnName("nlcs_type")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<BlmMonumentsAndNcasHistoric>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_monuments_and_ncas_historic_pkey");

                entity.ToTable("blm_monuments_and_ncas_historic", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_monuments_and_ncas_historic_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AdminSt)
                    .HasColumnName("admin_st")
                    .HasMaxLength(2);

                entity.Property(e => e.CasefileNo)
                    .HasColumnName("casefile_no")
                    .HasMaxLength(17);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.NlcsType)
                    .HasColumnName("nlcs_type")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<BlmRmpTargetedLands>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_rmp_targeted_lands_pkey");

                entity.ToTable("blm_rmp_targeted_lands", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_rmp_targeted_lands_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<BlmWildernessStudyAreasForUtah>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("blm_wilderness_study_areas_for_utah_pkey");

                entity.ToTable("blm_wilderness_study_areas_for_utah", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("blm_wilderness_study_areas_for_utah_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.WiwsaUt1)
                    .HasColumnName("wiwsa_ut_1")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.WiwsaUt24)
                    .HasColumnName("wiwsa_ut24")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.WsaAcres)
                    .HasColumnName("wsa_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.WsaAuth)
                    .HasColumnName("wsa_auth")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.WsaDate)
                    .HasColumnName("wsa_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.WsaName)
                    .HasColumnName("wsa_name")
                    .HasMaxLength(50);

                entity.Property(e => e.WsaNumber)
                    .HasColumnName("wsa_number")
                    .HasMaxLength(20);

                entity.Property(e => e.WsaSuitab)
                    .HasColumnName("wsa_suitab")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.WsaType)
                    .HasColumnName("wsa_type")
                    .HasMaxLength(6);

                entity.Property(e => e.WsaValues)
                    .HasColumnName("wsa_values")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<BoatRamps>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("boat_ramps_pkey");

                entity.ToTable("boat_ramps", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("boat_ramps_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Admin)
                    .HasColumnName("admin")
                    .HasMaxLength(7);

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(7);

                entity.Property(e => e.Desig)
                    .HasColumnName("desig")
                    .HasMaxLength(34);

                entity.Property(e => e.Featureid)
                    .HasColumnName("featureid")
                    .HasMaxLength(36);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(7);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StateLgd)
                    .HasColumnName("state_lgd")
                    .HasMaxLength(70);

                entity.Property(e => e.Vessels)
                    .HasColumnName("vessels")
                    .HasMaxLength(20);

                entity.Property(e => e.WaterBody)
                    .HasColumnName("water_body")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<BoxElderCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("box_elder_county_parcels_pkey");

                entity.ToTable("box_elder_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("box_elder_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<BoxElderCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("box_elder_county_parcels_lir_pkey");

                entity.ToTable("box_elder_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("box_elder_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<BroadbandService>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("broadband_service_pkey");

                entity.ToTable("broadband_service", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("broadband_service_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Identifier)
                    .HasColumnName("identifier")
                    .HasMaxLength(50);

                entity.Property(e => e.Lastedit)
                    .HasColumnName("lastedit")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Lastverified)
                    .HasColumnName("lastverified")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Maxaddown)
                    .HasColumnName("maxaddown")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maxadup)
                    .HasColumnName("maxadup")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Transtech)
                    .HasColumnName("transtech")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Utprovcode)
                    .HasColumnName("utprovcode")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<Buildings>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("buildings_pkey");

                entity.ToTable("buildings", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("buildings_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(75);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(35);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SrcYear)
                    .HasColumnName("src_year")
                    .HasMaxLength(4);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(50);

                entity.Property(e => e.Zip5)
                    .HasColumnName("zip5")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<CacheCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("cache_county_parcels_pkey");

                entity.ToTable("cache_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("cache_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<CacheCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("cache_county_parcels_lir_pkey");

                entity.ToTable("cache_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("cache_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<CarbonCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("carbon_county_parcels_pkey");

                entity.ToTable("carbon_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("carbon_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<CarbonCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("carbon_county_parcels_lir_pkey");

                entity.ToTable("carbon_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("carbon_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<Cemeteries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("cemeteries_pkey");

                entity.ToTable("cemeteries", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("cemeteries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(255);

                entity.Property(e => e.Cemetery)
                    .HasColumnName("cemetery")
                    .HasMaxLength(255);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(255);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(255);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(255);

                entity.Property(e => e.LocationDirections)
                    .HasColumnName("location_directions")
                    .HasMaxLength(255);

                entity.Property(e => e.NumberOfBurials)
                    .HasColumnName("number_of_burials_")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(255);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(5);

                entity.Property(e => e.YearEstablishedFirstBurial)
                    .HasColumnName("year_established_first_burial")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<CemeteriesPolygons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("cemeteries_polygons_pkey");

                entity.ToTable("cemeteries_polygons", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("cemeteries_polygons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<Census2010CountySocioEconBasics>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_2010_county_socio_econ_basics_pkey");

                entity.ToTable("census_2010_county_socio_econ_basics", "demographic");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Age20to34)
                    .HasColumnName("age20to34")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Age35to59)
                    .HasColumnName("age35to59")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Age5to9)
                    .HasColumnName("age5to9")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agegt60)
                    .HasColumnName("agegt60")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agelt5)
                    .HasColumnName("agelt5")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Bachgrad)
                    .HasColumnName("bachgrad")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(255);

                entity.Property(e => e.Houseunits)
                    .HasColumnName("houseunits")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Hsgrad)
                    .HasColumnName("hsgrad")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Inc100to200k)
                    .HasColumnName("inc100to200k")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Inc25to50k)
                    .HasColumnName("inc25to50k")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Inc50to100k)
                    .HasColumnName("inc50to100k")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incgt200k)
                    .HasColumnName("incgt200k")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Inclt25k)
                    .HasColumnName("inclt25k")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incltpoverty)
                    .HasColumnName("incltpoverty")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Landsqmile)
                    .HasColumnName("landsqmile")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Medianinc)
                    .HasColumnName("medianinc")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(255);

                entity.Property(e => e.Pop10)
                    .HasColumnName("pop10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Raceasian)
                    .HasColumnName("raceasian")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Raceblack)
                    .HasColumnName("raceblack")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racehispanic)
                    .HasColumnName("racehispanic")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racenatam)
                    .HasColumnName("racenatam")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racewhite)
                    .HasColumnName("racewhite")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<CensusBlockGroups2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_block_groups_2010_pkey");

                entity.ToTable("census_block_groups_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_block_groups_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aland10)
                    .HasColumnName("aland10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Awater10)
                    .HasColumnName("awater10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Blockce10)
                    .HasColumnName("blockce10")
                    .HasMaxLength(4);

                entity.Property(e => e.Countyfp10)
                    .HasColumnName("countyfp10")
                    .HasMaxLength(3);

                entity.Property(e => e.Funcstat10)
                    .HasColumnName("funcstat10")
                    .HasMaxLength(1);

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(15);

                entity.Property(e => e.Hu100)
                    .HasColumnName("hu100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Intptlat10)
                    .HasColumnName("intptlat10")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon10)
                    .HasColumnName("intptlon10")
                    .HasMaxLength(12);

                entity.Property(e => e.Logrecno)
                    .HasColumnName("logrecno")
                    .HasMaxLength(7);

                entity.Property(e => e.Mtfcc)
                    .HasColumnName("mtfcc")
                    .HasMaxLength(5);

                entity.Property(e => e.Name10)
                    .HasColumnName("name10")
                    .HasMaxLength(10);

                entity.Property(e => e.P0010011)
                    .HasColumnName("p0010011")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010012)
                    .HasColumnName("p0010012")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010013)
                    .HasColumnName("p0010013")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010014)
                    .HasColumnName("p0010014")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.P0020001)
                    .HasColumnName("p0020001")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020002)
                    .HasColumnName("p0020002")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020003)
                    .HasColumnName("p0020003")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020004)
                    .HasColumnName("p0020004")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020005)
                    .HasColumnName("p0020005")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020006)
                    .HasColumnName("p0020006")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020007)
                    .HasColumnName("p0020007")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020008)
                    .HasColumnName("p0020008")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020009)
                    .HasColumnName("p0020009")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020010)
                    .HasColumnName("p0020010")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pop100)
                    .HasColumnName("pop100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Statefp10)
                    .HasColumnName("statefp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Tractce10)
                    .HasColumnName("tractce10")
                    .HasMaxLength(6);
            });

            modelBuilder.Entity<CensusBlocks2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_blocks_2010_pkey");

                entity.ToTable("census_blocks_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_blocks_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aianhh)
                    .HasColumnName("aianhh")
                    .HasMaxLength(4);

                entity.Property(e => e.Aianhhcc)
                    .HasColumnName("aianhhcc")
                    .HasMaxLength(2);

                entity.Property(e => e.Aianhhfp)
                    .HasColumnName("aianhhfp")
                    .HasMaxLength(5);

                entity.Property(e => e.Aianhhns)
                    .HasColumnName("aianhhns")
                    .HasMaxLength(8);

                entity.Property(e => e.Aianhhsc)
                    .HasColumnName("aianhhsc")
                    .HasMaxLength(2);

                entity.Property(e => e.Aihhtli)
                    .HasColumnName("aihhtli")
                    .HasMaxLength(1);

                entity.Property(e => e.Aits)
                    .HasColumnName("aits")
                    .HasMaxLength(5);

                entity.Property(e => e.Aitscc)
                    .HasColumnName("aitscc")
                    .HasMaxLength(2);

                entity.Property(e => e.Aitsce)
                    .HasColumnName("aitsce")
                    .HasMaxLength(3);

                entity.Property(e => e.Aitsns)
                    .HasColumnName("aitsns")
                    .HasMaxLength(8);

                entity.Property(e => e.Aland10)
                    .HasColumnName("aland10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Anrcns)
                    .HasColumnName("anrcns")
                    .HasMaxLength(8);

                entity.Property(e => e.Arealand)
                    .HasColumnName("arealand")
                    .HasMaxLength(14);

                entity.Property(e => e.Areawatr)
                    .HasColumnName("areawatr")
                    .HasMaxLength(14);

                entity.Property(e => e.Awater10)
                    .HasColumnName("awater10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Blkgrp)
                    .HasColumnName("blkgrp")
                    .HasMaxLength(1);

                entity.Property(e => e.Block)
                    .HasColumnName("block")
                    .HasMaxLength(4);

                entity.Property(e => e.Blockce10)
                    .HasColumnName("blockce10")
                    .HasMaxLength(4);

                entity.Property(e => e.Cbsa)
                    .HasColumnName("cbsa")
                    .HasMaxLength(5);

                entity.Property(e => e.Cbsapci)
                    .HasColumnName("cbsapci")
                    .HasMaxLength(1);

                entity.Property(e => e.Cbsasc)
                    .HasColumnName("cbsasc")
                    .HasMaxLength(2);

                entity.Property(e => e.Cd)
                    .HasColumnName("cd")
                    .HasMaxLength(2);

                entity.Property(e => e.Chariter)
                    .HasColumnName("chariter")
                    .HasMaxLength(3);

                entity.Property(e => e.Cifsn)
                    .HasColumnName("cifsn")
                    .HasMaxLength(2);

                entity.Property(e => e.Cnectasc)
                    .HasColumnName("cnectasc")
                    .HasMaxLength(2);

                entity.Property(e => e.Concit)
                    .HasColumnName("concit")
                    .HasMaxLength(5);

                entity.Property(e => e.Concitcc)
                    .HasColumnName("concitcc")
                    .HasMaxLength(2);

                entity.Property(e => e.Concitns)
                    .HasColumnName("concitns")
                    .HasMaxLength(8);

                entity.Property(e => e.Concitsc)
                    .HasColumnName("concitsc")
                    .HasMaxLength(2);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(3);

                entity.Property(e => e.Countycc)
                    .HasColumnName("countycc")
                    .HasMaxLength(2);

                entity.Property(e => e.Countyfp10)
                    .HasColumnName("countyfp10")
                    .HasMaxLength(3);

                entity.Property(e => e.Countyns)
                    .HasColumnName("countyns")
                    .HasMaxLength(8);

                entity.Property(e => e.Countysc)
                    .HasColumnName("countysc")
                    .HasMaxLength(2);

                entity.Property(e => e.Cousub)
                    .HasColumnName("cousub")
                    .HasMaxLength(5);

                entity.Property(e => e.Cousubcc)
                    .HasColumnName("cousubcc")
                    .HasMaxLength(2);

                entity.Property(e => e.Cousubns)
                    .HasColumnName("cousubns")
                    .HasMaxLength(8);

                entity.Property(e => e.Cousubsc)
                    .HasColumnName("cousubsc")
                    .HasMaxLength(2);

                entity.Property(e => e.Csa)
                    .HasColumnName("csa")
                    .HasMaxLength(3);

                entity.Property(e => e.Csasc)
                    .HasColumnName("csasc")
                    .HasMaxLength(2);

                entity.Property(e => e.Division)
                    .HasColumnName("division")
                    .HasMaxLength(1);

                entity.Property(e => e.Fileid)
                    .HasColumnName("fileid")
                    .HasMaxLength(6);

                entity.Property(e => e.Funcstat)
                    .HasColumnName("funcstat")
                    .HasMaxLength(1);

                entity.Property(e => e.Funcstat10)
                    .HasColumnName("funcstat10")
                    .HasMaxLength(1);

                entity.Property(e => e.Gcuni)
                    .HasColumnName("gcuni")
                    .HasMaxLength(1);

                entity.Property(e => e.Geocomp)
                    .HasColumnName("geocomp")
                    .HasMaxLength(2);

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(15);

                entity.Property(e => e.Hu100)
                    .HasColumnName("hu100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Intptlat)
                    .HasColumnName("intptlat")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlat10)
                    .HasColumnName("intptlat10")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon)
                    .HasColumnName("intptlon")
                    .HasMaxLength(12);

                entity.Property(e => e.Intptlon10)
                    .HasColumnName("intptlon10")
                    .HasMaxLength(12);

                entity.Property(e => e.Iuc)
                    .HasColumnName("iuc")
                    .HasMaxLength(2);

                entity.Property(e => e.Logrecno)
                    .HasColumnName("logrecno")
                    .HasMaxLength(7);

                entity.Property(e => e.Lsadc)
                    .HasColumnName("lsadc")
                    .HasMaxLength(2);

                entity.Property(e => e.Memi)
                    .HasColumnName("memi")
                    .HasMaxLength(1);

                entity.Property(e => e.Mtfcc)
                    .HasColumnName("mtfcc")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(90);

                entity.Property(e => e.Name10)
                    .HasColumnName("name10")
                    .HasMaxLength(10);

                entity.Property(e => e.Nmemi)
                    .HasColumnName("nmemi")
                    .HasMaxLength(1);

                entity.Property(e => e.P0010011)
                    .HasColumnName("p0010011")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010012)
                    .HasColumnName("p0010012")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010013)
                    .HasColumnName("p0010013")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010014)
                    .HasColumnName("p0010014")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.P0020001)
                    .HasColumnName("p0020001")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020002)
                    .HasColumnName("p0020002")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020003)
                    .HasColumnName("p0020003")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020004)
                    .HasColumnName("p0020004")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020005)
                    .HasColumnName("p0020005")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020006)
                    .HasColumnName("p0020006")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020007)
                    .HasColumnName("p0020007")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020008)
                    .HasColumnName("p0020008")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020009)
                    .HasColumnName("p0020009")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020010)
                    .HasColumnName("p0020010")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Partflag)
                    .HasColumnName("partflag")
                    .HasMaxLength(1);

                entity.Property(e => e.Place)
                    .HasColumnName("place")
                    .HasMaxLength(5);

                entity.Property(e => e.Placecc)
                    .HasColumnName("placecc")
                    .HasMaxLength(2);

                entity.Property(e => e.Placens)
                    .HasColumnName("placens")
                    .HasMaxLength(8);

                entity.Property(e => e.Placesc)
                    .HasColumnName("placesc")
                    .HasMaxLength(2);

                entity.Property(e => e.Pop100)
                    .HasColumnName("pop100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Puma)
                    .HasColumnName("puma")
                    .HasMaxLength(5);

                entity.Property(e => e.Region)
                    .HasColumnName("region")
                    .HasMaxLength(1);

                entity.Property(e => e.Reserve2)
                    .HasColumnName("reserve2")
                    .HasMaxLength(3);

                entity.Property(e => e.Reserve3)
                    .HasColumnName("reserve3")
                    .HasMaxLength(6);

                entity.Property(e => e.Reserved)
                    .HasColumnName("reserved")
                    .HasMaxLength(18);

                entity.Property(e => e.Sdelm)
                    .HasColumnName("sdelm")
                    .HasMaxLength(5);

                entity.Property(e => e.Sdsec)
                    .HasColumnName("sdsec")
                    .HasMaxLength(5);

                entity.Property(e => e.Sduni)
                    .HasColumnName("sduni")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Sldl)
                    .HasColumnName("sldl")
                    .HasMaxLength(3);

                entity.Property(e => e.Sldu)
                    .HasColumnName("sldu")
                    .HasMaxLength(3);

                entity.Property(e => e.Sqmiles)
                    .HasColumnName("sqmiles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Statefp10)
                    .HasColumnName("statefp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Statens)
                    .HasColumnName("statens")
                    .HasMaxLength(8);

                entity.Property(e => e.Stusab)
                    .HasColumnName("stusab")
                    .HasMaxLength(2);

                entity.Property(e => e.Submcd)
                    .HasColumnName("submcd")
                    .HasMaxLength(5);

                entity.Property(e => e.Submcdcc)
                    .HasColumnName("submcdcc")
                    .HasMaxLength(2);

                entity.Property(e => e.Submcdns)
                    .HasColumnName("submcdns")
                    .HasMaxLength(8);

                entity.Property(e => e.Sumlev)
                    .HasColumnName("sumlev")
                    .HasMaxLength(3);

                entity.Property(e => e.Tblkgrp)
                    .HasColumnName("tblkgrp")
                    .HasMaxLength(1);

                entity.Property(e => e.Tract)
                    .HasColumnName("tract")
                    .HasMaxLength(6);

                entity.Property(e => e.Tractce10)
                    .HasColumnName("tractce10")
                    .HasMaxLength(6);

                entity.Property(e => e.Ttract)
                    .HasColumnName("ttract")
                    .HasMaxLength(6);

                entity.Property(e => e.Ua)
                    .HasColumnName("ua")
                    .HasMaxLength(5);

                entity.Property(e => e.Uace10)
                    .HasColumnName("uace10")
                    .HasMaxLength(5);

                entity.Property(e => e.Uasc)
                    .HasColumnName("uasc")
                    .HasMaxLength(2);

                entity.Property(e => e.Uatype)
                    .HasColumnName("uatype")
                    .HasMaxLength(1);

                entity.Property(e => e.Uga)
                    .HasColumnName("uga")
                    .HasMaxLength(5);

                entity.Property(e => e.Ur)
                    .HasColumnName("ur")
                    .HasMaxLength(1);

                entity.Property(e => e.Ur10)
                    .HasColumnName("ur10")
                    .HasMaxLength(1);

                entity.Property(e => e.Urbanrural)
                    .HasColumnName("urbanrural")
                    .HasMaxLength(15);

                entity.Property(e => e.Vtd)
                    .HasColumnName("vtd")
                    .HasMaxLength(6);

                entity.Property(e => e.Vtdi)
                    .HasColumnName("vtdi")
                    .HasMaxLength(1);

                entity.Property(e => e.Zcta5)
                    .HasColumnName("zcta5")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<CensusCounties2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_counties_2010_pkey");

                entity.ToTable("census_counties_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_counties_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aland10)
                    .HasColumnName("aland10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Awater10)
                    .HasColumnName("awater10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Cbsafp10)
                    .HasColumnName("cbsafp10")
                    .HasMaxLength(5);

                entity.Property(e => e.Classfp10)
                    .HasColumnName("classfp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Countyfp10)
                    .HasColumnName("countyfp10")
                    .HasMaxLength(3);

                entity.Property(e => e.Countyns10)
                    .HasColumnName("countyns10")
                    .HasMaxLength(8);

                entity.Property(e => e.Csafp10)
                    .HasColumnName("csafp10")
                    .HasMaxLength(3);

                entity.Property(e => e.Funcstat10)
                    .HasColumnName("funcstat10")
                    .HasMaxLength(1);

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(5);

                entity.Property(e => e.Intptlat10)
                    .HasColumnName("intptlat10")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon10)
                    .HasColumnName("intptlon10")
                    .HasMaxLength(12);

                entity.Property(e => e.Lsad10)
                    .HasColumnName("lsad10")
                    .HasMaxLength(2);

                entity.Property(e => e.Metdivfp10)
                    .HasColumnName("metdivfp10")
                    .HasMaxLength(5);

                entity.Property(e => e.Mtfcc10)
                    .HasColumnName("mtfcc10")
                    .HasMaxLength(5);

                entity.Property(e => e.Name10)
                    .HasColumnName("name10")
                    .HasMaxLength(100);

                entity.Property(e => e.Namelsad10)
                    .HasColumnName("namelsad10")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Statefp10)
                    .HasColumnName("statefp10")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<CensusEdges2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_edges_2010_pkey");

                entity.ToTable("census_edges_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_edges_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Artpath)
                    .HasColumnName("artpath")
                    .HasMaxLength(1);

                entity.Property(e => e.Countyfp)
                    .HasColumnName("countyfp")
                    .HasMaxLength(3);

                entity.Property(e => e.Deckedroad)
                    .HasColumnName("deckedroad")
                    .HasMaxLength(1);

                entity.Property(e => e.Divroad)
                    .HasColumnName("divroad")
                    .HasMaxLength(1);

                entity.Property(e => e.Exttyp)
                    .HasColumnName("exttyp")
                    .HasMaxLength(1);

                entity.Property(e => e.Featcat)
                    .HasColumnName("featcat")
                    .HasMaxLength(1);

                entity.Property(e => e.Fullname)
                    .HasColumnName("fullname")
                    .HasMaxLength(100);

                entity.Property(e => e.Gcseflg)
                    .HasColumnName("gcseflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Hydroflg)
                    .HasColumnName("hydroflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Lfromadd)
                    .HasColumnName("lfromadd")
                    .HasMaxLength(12);

                entity.Property(e => e.Ltoadd)
                    .HasColumnName("ltoadd")
                    .HasMaxLength(12);

                entity.Property(e => e.Mtfcc)
                    .HasColumnName("mtfcc")
                    .HasMaxLength(5);

                entity.Property(e => e.Offsetl)
                    .HasColumnName("offsetl")
                    .HasMaxLength(1);

                entity.Property(e => e.Offsetr)
                    .HasColumnName("offsetr")
                    .HasMaxLength(1);

                entity.Property(e => e.Olfflg)
                    .HasColumnName("olfflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Passflg)
                    .HasColumnName("passflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Persist)
                    .HasColumnName("persist")
                    .HasMaxLength(1);

                entity.Property(e => e.Railflg)
                    .HasColumnName("railflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Rfromadd)
                    .HasColumnName("rfromadd")
                    .HasMaxLength(12);

                entity.Property(e => e.Roadflg)
                    .HasColumnName("roadflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Rtoadd)
                    .HasColumnName("rtoadd")
                    .HasMaxLength(12);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Smid)
                    .HasColumnName("smid")
                    .HasMaxLength(22);

                entity.Property(e => e.Statefp)
                    .HasColumnName("statefp")
                    .HasMaxLength(2);

                entity.Property(e => e.Tfidl)
                    .HasColumnName("tfidl")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tfidr)
                    .HasColumnName("tfidr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tlid)
                    .HasColumnName("tlid")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tnidf)
                    .HasColumnName("tnidf")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tnidt)
                    .HasColumnName("tnidt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ttyp)
                    .HasColumnName("ttyp")
                    .HasMaxLength(1);

                entity.Property(e => e.Zipl)
                    .HasColumnName("zipl")
                    .HasMaxLength(5);

                entity.Property(e => e.Zipr)
                    .HasColumnName("zipr")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<CensusPlacePoints2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_place_points_2010_pkey");

                entity.ToTable("census_place_points_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_place_points_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Agebetween20to34)
                    .HasColumnName("agebetween20to34")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agebetween35to59)
                    .HasColumnName("agebetween35to59")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agebetween5to19)
                    .HasColumnName("agebetween5to19")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agegreaterthan60)
                    .HasColumnName("agegreaterthan60")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ageunder5)
                    .HasColumnName("ageunder5")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Censusyear)
                    .HasColumnName("censusyear")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Educationbachelororgreater)
                    .HasColumnName("educationbachelororgreater")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Educationhighschoolgraduate)
                    .HasColumnName("educationhighschoolgraduate")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Geographyid)
                    .HasColumnName("geographyid")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Geographyname)
                    .HasColumnName("geographyname")
                    .HasMaxLength(255);

                entity.Property(e => e.Households)
                    .HasColumnName("households")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomebelowpoverty)
                    .HasColumnName("incomebelowpoverty")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomebetween100to200)
                    .HasColumnName("incomebetween100to200")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomebetween25to50)
                    .HasColumnName("incomebetween25to50")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomebetween50to100)
                    .HasColumnName("incomebetween50to100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomegreater200)
                    .HasColumnName("incomegreater200")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Incomelessthan25)
                    .HasColumnName("incomelessthan25")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Landarea)
                    .HasColumnName("landarea")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Medianincome)
                    .HasColumnName("medianincome")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pctutahmedianincome)
                    .HasColumnName("pctutahmedianincome")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Population)
                    .HasColumnName("population")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Raceasian)
                    .HasColumnName("raceasian")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Raceblack)
                    .HasColumnName("raceblack")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racehispanic)
                    .HasColumnName("racehispanic")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racenativeamerican)
                    .HasColumnName("racenativeamerican")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Racewhite)
                    .HasColumnName("racewhite")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.UsdaCombinedneed)
                    .HasColumnName("usda_combinedneed")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UsdaEconomicscore)
                    .HasColumnName("usda_economicscore")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UsdaRuralityscore)
                    .HasColumnName("usda_ruralityscore")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<CensusPlaces2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_places_2010_pkey");

                entity.ToTable("census_places_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_places_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aland10)
                    .HasColumnName("aland10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Awater10)
                    .HasColumnName("awater10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Classfp10)
                    .HasColumnName("classfp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Funcstat10)
                    .HasColumnName("funcstat10")
                    .HasMaxLength(1);

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(7);

                entity.Property(e => e.Intptlat10)
                    .HasColumnName("intptlat10")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon10)
                    .HasColumnName("intptlon10")
                    .HasMaxLength(12);

                entity.Property(e => e.Lsad10)
                    .HasColumnName("lsad10")
                    .HasMaxLength(2);

                entity.Property(e => e.Mtfcc10)
                    .HasColumnName("mtfcc10")
                    .HasMaxLength(5);

                entity.Property(e => e.Name10)
                    .HasColumnName("name10")
                    .HasMaxLength(100);

                entity.Property(e => e.Namelsad10)
                    .HasColumnName("namelsad10")
                    .HasMaxLength(100);

                entity.Property(e => e.Pcicbsa10)
                    .HasColumnName("pcicbsa10")
                    .HasMaxLength(1);

                entity.Property(e => e.Pcinecta10)
                    .HasColumnName("pcinecta10")
                    .HasMaxLength(1);

                entity.Property(e => e.Placefp10)
                    .HasColumnName("placefp10")
                    .HasMaxLength(5);

                entity.Property(e => e.Placens10)
                    .HasColumnName("placens10")
                    .HasMaxLength(8);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Statefp10)
                    .HasColumnName("statefp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Ta1race)
                    .HasColumnName("ta1race")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Ta2race)
                    .HasColumnName("ta2race")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ta3races)
                    .HasColumnName("ta3races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ta4races)
                    .HasColumnName("ta4races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ta5races)
                    .HasColumnName("ta5races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ta6races)
                    .HasColumnName("ta6races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaianas)
                    .HasColumnName("taaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaianashp)
                    .HasColumnName("taaianashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaianasor)
                    .HasColumnName("taaianasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaiannhp)
                    .HasColumnName("taaiannhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaiannhpo)
                    .HasColumnName("taaiannhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaianor)
                    .HasColumnName("taaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taaianshpo)
                    .HasColumnName("taaianshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taamindaln)
                    .HasColumnName("taamindaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taasianaln)
                    .HasColumnName("taasianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taasianoth)
                    .HasColumnName("taasianoth")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taasnhpo)
                    .HasColumnName("taasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taasnhpoor)
                    .HasColumnName("taasnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablackaln)
                    .HasColumnName("tablackaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablaian)
                    .HasColumnName("tablaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablaianhp)
                    .HasColumnName("tablaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablaianor)
                    .HasColumnName("tablaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablaians)
                    .HasColumnName("tablaians")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablaianso)
                    .HasColumnName("tablaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablainhpo)
                    .HasColumnName("tablainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablainshp)
                    .HasColumnName("tablainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablasnhop)
                    .HasColumnName("tablasnhop")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablasnhpo)
                    .HasColumnName("tablasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablasor)
                    .HasColumnName("tablasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablinshpo)
                    .HasColumnName("tablinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablkasian)
                    .HasColumnName("tablkasian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablkother)
                    .HasColumnName("tablkother")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablnhpo)
                    .HasColumnName("tablnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tablnhpoor)
                    .HasColumnName("tablnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tahispanic)
                    .HasColumnName("tahispanic")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tahoccupid)
                    .HasColumnName("tahoccupid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tahousing)
                    .HasColumnName("tahousing")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tahvacant)
                    .HasColumnName("tahvacant")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tanhpoaln)
                    .HasColumnName("tanhpoaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tanhpoor)
                    .HasColumnName("tanhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Taotheraln)
                    .HasColumnName("taotheraln")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tapersons)
                    .HasColumnName("tapersons")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tapop2race)
                    .HasColumnName("tapop2race")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawasnhopi)
                    .HasColumnName("tawasnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhaian)
                    .HasColumnName("tawhaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhaianhp)
                    .HasColumnName("tawhaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhaianor)
                    .HasColumnName("tawhaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhaians)
                    .HasColumnName("tawhaians")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhaianso)
                    .HasColumnName("tawhaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhainhpo)
                    .HasColumnName("tawhainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhainshp)
                    .HasColumnName("tawhainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhasnhpo)
                    .HasColumnName("tawhasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhasor)
                    .HasColumnName("tawhasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhbinhpo)
                    .HasColumnName("tawhbinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhbinshp)
                    .HasColumnName("tawhbinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblain)
                    .HasColumnName("tawhblain")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblaina)
                    .HasColumnName("tawhblaina")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblaino)
                    .HasColumnName("tawhblaino")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblas)
                    .HasColumnName("tawhblas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblashp)
                    .HasColumnName("tawhblashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblasor)
                    .HasColumnName("tawhblasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblinhp)
                    .HasColumnName("tawhblinhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblinso)
                    .HasColumnName("tawhblinso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblnhp)
                    .HasColumnName("tawhblnhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblnhpo)
                    .HasColumnName("tawhblnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblor)
                    .HasColumnName("tawhblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhblshpo)
                    .HasColumnName("tawhblshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhinshpo)
                    .HasColumnName("tawhinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhitealn)
                    .HasColumnName("tawhitealn")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tawhnhpo)
                    .HasColumnName("tawhnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhnhpoot)
                    .HasColumnName("tawhnhpoot")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhtasian)
                    .HasColumnName("tawhtasian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhtblack)
                    .HasColumnName("tawhtblack")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tawhtother)
                    .HasColumnName("tawhtother")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Thispnhisp)
                    .HasColumnName("thispnhisp")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tn1race)
                    .HasColumnName("tn1race")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tn2mraces)
                    .HasColumnName("tn2mraces")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tn2races)
                    .HasColumnName("tn2races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tn3races)
                    .HasColumnName("tn3races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tn4races)
                    .HasColumnName("tn4races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tn5races)
                    .HasColumnName("tn5races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tn6races)
                    .HasColumnName("tn6races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianaln)
                    .HasColumnName("tnaianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianas)
                    .HasColumnName("tnaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianashp)
                    .HasColumnName("tnaianashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianasor)
                    .HasColumnName("tnaianasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaiannhpi)
                    .HasColumnName("tnaiannhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaiannhpo)
                    .HasColumnName("tnaiannhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianor)
                    .HasColumnName("tnaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnaianshpo)
                    .HasColumnName("tnaianshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnasianaln)
                    .HasColumnName("tnasianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnasnhpoor)
                    .HasColumnName("tnasnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnasnhpopi)
                    .HasColumnName("tnasnhpopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnasor)
                    .HasColumnName("tnasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblaian)
                    .HasColumnName("tnblaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblaianas)
                    .HasColumnName("tnblaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblaianhp)
                    .HasColumnName("tnblaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblaianor)
                    .HasColumnName("tnblaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblaianso)
                    .HasColumnName("tnblaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblainhpo)
                    .HasColumnName("tnblainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblainshp)
                    .HasColumnName("tnblainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblasian)
                    .HasColumnName("tnblasian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblasnhpi)
                    .HasColumnName("tnblasnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblasnhpo)
                    .HasColumnName("tnblasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblasor)
                    .HasColumnName("tnblasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblinshpo)
                    .HasColumnName("tnblinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblkaln)
                    .HasColumnName("tnblkaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblnhpoor)
                    .HasColumnName("tnblnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblnhpopi)
                    .HasColumnName("tnblnhpopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnblor)
                    .HasColumnName("tnblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnhispanic)
                    .HasColumnName("tnhispanic")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tnnhopioor)
                    .HasColumnName("tnnhopioor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnnhpoaln)
                    .HasColumnName("tnnhpoaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnothraln)
                    .HasColumnName("tnothraln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwbinshpo)
                    .HasColumnName("tnwbinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaian)
                    .HasColumnName("tnwhaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaianas)
                    .HasColumnName("tnwhaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaianhp)
                    .HasColumnName("tnwhaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaianor)
                    .HasColumnName("tnwhaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaianso)
                    .HasColumnName("tnwhaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhainhpo)
                    .HasColumnName("tnwhainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhainshp)
                    .HasColumnName("tnwhainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhaln)
                    .HasColumnName("tnwhaln")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tnwhasnhpi)
                    .HasColumnName("tnwhasnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhasnhpo)
                    .HasColumnName("tnwhasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhasor)
                    .HasColumnName("tnwhasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhbinhpo)
                    .HasColumnName("tnwhbinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhbinshp)
                    .HasColumnName("tnwhbinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhbl)
                    .HasColumnName("tnwhbl")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblaian)
                    .HasColumnName("tnwhblaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblaino)
                    .HasColumnName("tnwhblaino")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblains)
                    .HasColumnName("tnwhblains")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblas)
                    .HasColumnName("tnwhblas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblashp)
                    .HasColumnName("tnwhblashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblasor)
                    .HasColumnName("tnwhblasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblinhp)
                    .HasColumnName("tnwhblinhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblinso)
                    .HasColumnName("tnwhblinso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblnhpi)
                    .HasColumnName("tnwhblnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblnhpo)
                    .HasColumnName("tnwhblnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblor)
                    .HasColumnName("tnwhblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhblshpo)
                    .HasColumnName("tnwhblshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhinshpo)
                    .HasColumnName("tnwhinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhnhpoor)
                    .HasColumnName("tnwhnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhnhpopi)
                    .HasColumnName("tnwhnhpopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhor)
                    .HasColumnName("tnwhor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tnwhtasian)
                    .HasColumnName("tnwhtasian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Twhbinshpo)
                    .HasColumnName("twhbinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va1race)
                    .HasColumnName("va1race")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Va2mraces)
                    .HasColumnName("va2mraces")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va2races)
                    .HasColumnName("va2races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va3races)
                    .HasColumnName("va3races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va4races)
                    .HasColumnName("va4races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va5races)
                    .HasColumnName("va5races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Va6races)
                    .HasColumnName("va6races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianaln)
                    .HasColumnName("vaaianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianas)
                    .HasColumnName("vaaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianashp)
                    .HasColumnName("vaaianashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianasor)
                    .HasColumnName("vaaianasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaiannhpi)
                    .HasColumnName("vaaiannhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaiannhpo)
                    .HasColumnName("vaaiannhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianor)
                    .HasColumnName("vaaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaaianshpo)
                    .HasColumnName("vaaianshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaasianaln)
                    .HasColumnName("vaasianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaasnhopi)
                    .HasColumnName("vaasnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaasnhpoor)
                    .HasColumnName("vaasnhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaasor)
                    .HasColumnName("vaasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablackaln)
                    .HasColumnName("vablackaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablaian)
                    .HasColumnName("vablaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablaianas)
                    .HasColumnName("vablaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablaianhp)
                    .HasColumnName("vablaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablaianor)
                    .HasColumnName("vablaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablaianso)
                    .HasColumnName("vablaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablainhpo)
                    .HasColumnName("vablainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablainshp)
                    .HasColumnName("vablainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablasian)
                    .HasColumnName("vablasian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablasnhpi)
                    .HasColumnName("vablasnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablasnhpo)
                    .HasColumnName("vablasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablasor)
                    .HasColumnName("vablasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablinshpo)
                    .HasColumnName("vablinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablnhopi)
                    .HasColumnName("vablnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablnhpiot)
                    .HasColumnName("vablnhpiot")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vablor)
                    .HasColumnName("vablor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vahisnhisp)
                    .HasColumnName("vahisnhisp")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vahispanic)
                    .HasColumnName("vahispanic")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Van1race)
                    .HasColumnName("van1race")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Van2races)
                    .HasColumnName("van2races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Van3races)
                    .HasColumnName("van3races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Van4races)
                    .HasColumnName("van4races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Van5races)
                    .HasColumnName("van5races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Van6races)
                    .HasColumnName("van6races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianaln)
                    .HasColumnName("vanaianaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianas)
                    .HasColumnName("vanaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianaso)
                    .HasColumnName("vanaianaso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianhpo)
                    .HasColumnName("vanaianhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaiannhp)
                    .HasColumnName("vanaiannhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianor)
                    .HasColumnName("vanaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanaianshp)
                    .HasColumnName("vanaianshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanainshpo)
                    .HasColumnName("vanainshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanasanaln)
                    .HasColumnName("vanasanaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanasnhopi)
                    .HasColumnName("vanasnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanasnhpoo)
                    .HasColumnName("vanasnhpoo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanasor)
                    .HasColumnName("vanasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanbinshpo)
                    .HasColumnName("vanbinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblaian)
                    .HasColumnName("vanblaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblaiano)
                    .HasColumnName("vanblaiano")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblaians)
                    .HasColumnName("vanblaians")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblainhp)
                    .HasColumnName("vanblainhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblainso)
                    .HasColumnName("vanblainso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblas)
                    .HasColumnName("vanblas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblashpo)
                    .HasColumnName("vanblashpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblasnhp)
                    .HasColumnName("vanblasnhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblasor)
                    .HasColumnName("vanblasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblinhpo)
                    .HasColumnName("vanblinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblinshp)
                    .HasColumnName("vanblinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblkaln)
                    .HasColumnName("vanblkaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblnhopi)
                    .HasColumnName("vanblnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblnhopo)
                    .HasColumnName("vanblnhopo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanblor)
                    .HasColumnName("vanblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanhispanc)
                    .HasColumnName("vanhispanc")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vanhpoaln)
                    .HasColumnName("vanhpoaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanhpoor)
                    .HasColumnName("vanhpoor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanm2races)
                    .HasColumnName("vanm2races")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vannhopior)
                    .HasColumnName("vannhopior")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vannhpoaln)
                    .HasColumnName("vannhpoaln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanoraln)
                    .HasColumnName("vanoraln")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwbinhpo)
                    .HasColumnName("vanwbinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwbinshp)
                    .HasColumnName("vanwbinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhaian)
                    .HasColumnName("vanwhaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhaiano)
                    .HasColumnName("vanwhaiano")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhaians)
                    .HasColumnName("vanwhaians")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhainhp)
                    .HasColumnName("vanwhainhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhainso)
                    .HasColumnName("vanwhainso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhas)
                    .HasColumnName("vanwhas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhashpo)
                    .HasColumnName("vanwhashpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhasnhp)
                    .HasColumnName("vanwhasnhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhasor)
                    .HasColumnName("vanwhasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhbinhp)
                    .HasColumnName("vanwhbinhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhbinso)
                    .HasColumnName("vanwhbinso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhbl)
                    .HasColumnName("vanwhbl")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblain)
                    .HasColumnName("vanwhblain")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblas)
                    .HasColumnName("vanwhblas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblaso)
                    .HasColumnName("vanwhblaso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblhpo)
                    .HasColumnName("vanwhblhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblino)
                    .HasColumnName("vanwhblino")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblins)
                    .HasColumnName("vanwhblins")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblnhp)
                    .HasColumnName("vanwhblnhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblor)
                    .HasColumnName("vanwhblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhblshp)
                    .HasColumnName("vanwhblshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhbshpo)
                    .HasColumnName("vanwhbshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhinhpo)
                    .HasColumnName("vanwhinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhinshp)
                    .HasColumnName("vanwhinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhnhopi)
                    .HasColumnName("vanwhnhopi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhnhopo)
                    .HasColumnName("vanwhnhopo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhor)
                    .HasColumnName("vanwhor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vanwhtaln)
                    .HasColumnName("vanwhtaln")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vanwinshpo)
                    .HasColumnName("vanwinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vaotheraln)
                    .HasColumnName("vaotheraln")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vapersons)
                    .HasColumnName("vapersons")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vawbinshpo)
                    .HasColumnName("vawbinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhaian)
                    .HasColumnName("vawhaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhaianas)
                    .HasColumnName("vawhaianas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhaianhp)
                    .HasColumnName("vawhaianhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhaianor)
                    .HasColumnName("vawhaianor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhaianso)
                    .HasColumnName("vawhaianso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhainhpo)
                    .HasColumnName("vawhainhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhainshp)
                    .HasColumnName("vawhainshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhas)
                    .HasColumnName("vawhas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhasnhpi)
                    .HasColumnName("vawhasnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhasnhpo)
                    .HasColumnName("vawhasnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhasor)
                    .HasColumnName("vawhasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhbinhpo)
                    .HasColumnName("vawhbinhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhbinshp)
                    .HasColumnName("vawhbinshp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhbl)
                    .HasColumnName("vawhbl")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblaian)
                    .HasColumnName("vawhblaian")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblaino)
                    .HasColumnName("vawhblaino")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblains)
                    .HasColumnName("vawhblains")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblas)
                    .HasColumnName("vawhblas")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblashp)
                    .HasColumnName("vawhblashp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblasor)
                    .HasColumnName("vawhblasor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblinhp)
                    .HasColumnName("vawhblinhp")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblinso)
                    .HasColumnName("vawhblinso")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblnhpi)
                    .HasColumnName("vawhblnhpi")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblnhpo)
                    .HasColumnName("vawhblnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblor)
                    .HasColumnName("vawhblor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhblshpo)
                    .HasColumnName("vawhblshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhinshpo)
                    .HasColumnName("vawhinshpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhitealn)
                    .HasColumnName("vawhitealn")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Vawhnhpiot)
                    .HasColumnName("vawhnhpiot")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhnhpo)
                    .HasColumnName("vawhnhpo")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vawhor)
                    .HasColumnName("vawhor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Vnwbinshpo)
                    .HasColumnName("vnwbinshpo")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<CensusTracts2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("census_tracts_2010_pkey");

                entity.ToTable("census_tracts_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("census_tracts_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Arealand)
                    .HasColumnName("arealand")
                    .HasMaxLength(14);

                entity.Property(e => e.Areawatr)
                    .HasColumnName("areawatr")
                    .HasMaxLength(14);

                entity.Property(e => e.Countyfp10)
                    .HasColumnName("countyfp10")
                    .HasMaxLength(3);

                entity.Property(e => e.Funcstat10)
                    .HasColumnName("funcstat10")
                    .HasMaxLength(1);

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(15);

                entity.Property(e => e.Hu100)
                    .HasColumnName("hu100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Intptlat10)
                    .HasColumnName("intptlat10")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon10)
                    .HasColumnName("intptlon10")
                    .HasMaxLength(12);

                entity.Property(e => e.Logrecno)
                    .HasColumnName("logrecno")
                    .HasMaxLength(7);

                entity.Property(e => e.Mtfcc)
                    .HasColumnName("mtfcc")
                    .HasMaxLength(5);

                entity.Property(e => e.Name10)
                    .HasColumnName("name10")
                    .HasMaxLength(10);

                entity.Property(e => e.P0010011)
                    .HasColumnName("p0010011")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010012)
                    .HasColumnName("p0010012")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010013)
                    .HasColumnName("p0010013")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.P0010014)
                    .HasColumnName("p0010014")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.P0020001)
                    .HasColumnName("p0020001")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020002)
                    .HasColumnName("p0020002")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020003)
                    .HasColumnName("p0020003")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020004)
                    .HasColumnName("p0020004")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020005)
                    .HasColumnName("p0020005")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020006)
                    .HasColumnName("p0020006")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020007)
                    .HasColumnName("p0020007")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020008)
                    .HasColumnName("p0020008")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020009)
                    .HasColumnName("p0020009")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.P0020010)
                    .HasColumnName("p0020010")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pop100)
                    .HasColumnName("pop100")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Sqmiles)
                    .HasColumnName("sqmiles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Statefp10)
                    .HasColumnName("statefp10")
                    .HasMaxLength(2);

                entity.Property(e => e.Tractce10)
                    .HasColumnName("tractce10")
                    .HasMaxLength(6);
            });

            modelBuilder.Entity<CityAndTownLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("city_and_town_locations_pkey");

                entity.ToTable("city_and_town_locations", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("city_and_town_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Carto)
                    .HasColumnName("carto")
                    .HasMaxLength(15);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(10);

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(50);

                entity.Property(e => e.Countyseat)
                    .HasColumnName("countyseat")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(35);

                entity.Property(e => e.Population)
                    .HasColumnName("population")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<CityCourtsOfUtah>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("city_courts_of_utah_pkey");

                entity.ToTable("city_courts_of_utah", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("city_courts_of_utah_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Court)
                    .HasColumnName("court")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<Coal4FootSeams>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("coal_4_foot_seams_pkey");

                entity.ToTable("coal_4_foot_seams", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("coal_4_foot_seams_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<CoalDepositAreas1988>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("coal_deposit_areas_1988_pkey");

                entity.ToTable("coal_deposit_areas_1988", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("coal_deposit_areas_1988_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acreage)
                    .HasColumnName("acreage")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FavCode)
                    .HasColumnName("fav_code")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.KmdaName)
                    .HasColumnName("kmda_name")
                    .HasMaxLength(40);

                entity.Property(e => e.KmdaNumbe)
                    .HasColumnName("kmda_numbe")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<CoalLeases>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("coal_leases_pkey");

                entity.ToTable("coal_leases", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("coal_leases_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(3);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner_")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.OwnerId)
                    .HasColumnName("owner_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Perimeter)
                    .HasColumnName("perimeter")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sgid93EnergyCoalleasesArea)
                    .HasColumnName("sgid93_energy_coalleases_area")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Symbol)
                    .HasColumnName("symbol")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<CoalMinesUgs>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("coal_mines_ugs_pkey");

                entity.ToTable("coal_mines_ugs", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("coal_mines_ugs_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(7);

                entity.Property(e => e.IndusSeg)
                    .HasColumnName("indus_seg")
                    .HasMaxLength(10);

                entity.Property(e => e.MapName)
                    .HasColumnName("map_name")
                    .HasMaxLength(40);

                entity.Property(e => e.MineStat)
                    .HasColumnName("mine_stat")
                    .HasMaxLength(10);

                entity.Property(e => e.Mineid)
                    .HasColumnName("mineid")
                    .HasMaxLength(8);

                entity.Property(e => e.Minerals)
                    .HasColumnName("minerals")
                    .HasMaxLength(38);

                entity.Property(e => e.Msu)
                    .HasColumnName("msu")
                    .HasMaxLength(4);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.Num)
                    .HasColumnName("num")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Operator)
                    .HasColumnName("operator")
                    .HasMaxLength(30);

                entity.Property(e => e.PermStat)
                    .HasColumnName("perm_stat")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(5);

                entity.Property(e => e.Utmx)
                    .HasColumnName("utmx")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Utmy)
                    .HasColumnName("utmy")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<ConservationDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("conservation_districts_pkey");

                entity.ToTable("conservation_districts", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("conservation_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Distname)
                    .HasColumnName("distname")
                    .HasMaxLength(40);

                entity.Property(e => e.Distno)
                    .HasColumnName("distno")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Zoneno)
                    .HasColumnName("zoneno")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<ConservationZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("conservation_zones_pkey");

                entity.ToTable("conservation_zones", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("conservation_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Zoneno)
                    .HasColumnName("zoneno")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<ContourLineExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("contour_line_extents_pkey");

                entity.ToTable("contour_line_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("contour_line_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(50);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(125);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<Contours500Foot>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("contours_500_foot_pkey");

                entity.ToTable("contours_500_foot", "elevation");

                entity.HasIndex(e => e.Shape)
                    .HasName("contours_500_foot_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<ContoursGeneralized200Foot>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("contours_generalized_200_foot_pkey");

                entity.ToTable("contours_generalized_200_foot", "elevation");

                entity.HasIndex(e => e.Shape)
                    .HasName("contours_generalized_200_foot_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Contourelevation)
                    .HasColumnName("contourelevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Elevationrange)
                    .HasColumnName("elevationrange")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<CorrectionalFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("correctional_facilities_pkey");

                entity.ToTable("correctional_facilities", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("correctional_facilities_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(80);

                entity.Property(e => e.Address2)
                    .HasColumnName("address2")
                    .HasMaxLength(80);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(120);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Directions)
                    .HasColumnName("directions")
                    .HasMaxLength(254);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Secclass)
                    .HasColumnName("secclass")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(12);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);

                entity.Property(e => e.Zipp4)
                    .HasColumnName("zipp4")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<CountiesLabelLines>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("counties_label_lines_pkey");

                entity.ToTable("counties_label_lines", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("counties_label_lines_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Leftcounty)
                    .HasColumnName("leftcounty")
                    .HasMaxLength(20);

                entity.Property(e => e.Rightcounty)
                    .HasColumnName("rightcounty")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<CountiesModifications>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("counties_modifications_pkey");

                entity.ToTable("counties_modifications", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("counties_modifications_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.DocLoc)
                    .HasColumnName("doc_loc")
                    .HasMaxLength(255);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Stateplane)
                    .HasColumnName("stateplane")
                    .HasMaxLength(20);

                entity.Property(e => e.UpdateType)
                    .HasColumnName("update_type")
                    .HasMaxLength(25);

                entity.Property(e => e.Updated)
                    .HasColumnName("updated")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<CountyBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("county_boundaries_pkey");

                entity.ToTable("county_boundaries", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("county_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Entitynbr)
                    .HasColumnName("entitynbr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Entityyr)
                    .HasColumnName("entityyr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FipsStr)
                    .HasColumnName("fips_str")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.PopCurrestimate)
                    .HasColumnName("pop_currestimate")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.PopLastcensus)
                    .HasColumnName("pop_lastcensus")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Stateplane)
                    .HasColumnName("stateplane")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry");

            });

            modelBuilder.Entity<CountyCourtsOfUtah>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("county_courts_of_utah_pkey");

                entity.ToTable("county_courts_of_utah", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("county_courts_of_utah_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Court)
                    .HasColumnName("court")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DaggettCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daggett_county_parcels_pkey");

                entity.ToTable("daggett_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("daggett_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DaggettCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daggett_county_parcels_lir_pkey");

                entity.ToTable("daggett_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("daggett_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DaqAirEmissionsInventory>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_air_emissions_inventory_pkey");

                entity.ToTable("daq_air_emissions_inventory", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_air_emissions_inventory_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address1)
                    .HasColumnName("address1")
                    .HasMaxLength(100);

                entity.Property(e => e.Address2)
                    .HasColumnName("address2")
                    .HasMaxLength(100);

                entity.Property(e => e.Address3)
                    .HasColumnName("address3")
                    .HasMaxLength(100);

                entity.Property(e => e.Ammonia)
                    .HasColumnName("ammonia")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.CarbonMonoxide)
                    .HasColumnName("carbon_monoxide")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(100);

                entity.Property(e => e.Company)
                    .HasColumnName("company")
                    .HasMaxLength(100);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.DaqId)
                    .HasColumnName("daq_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.MapLabel)
                    .HasColumnName("map_label")
                    .HasMaxLength(141);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.OxidesNitrogen)
                    .HasColumnName("oxides_nitrogen")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OxidesSulfur)
                    .HasColumnName("oxides_sulfur")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParticulateMatterPm10)
                    .HasColumnName("particulate_matter_pm10")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pm25)
                    .HasColumnName("pm25")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.VolatileOrganicCompounds)
                    .HasColumnName("volatile_organic_compounds")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<DaqAirMonitorByStation>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_air_monitor_by_station_pkey");

                entity.ToTable("daq_air_monitor_by_station", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_air_monitor_by_station_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Epaid)
                    .HasColumnName("epaid")
                    .HasMaxLength(12);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(151);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Stationaddress)
                    .HasColumnName("stationaddress")
                    .HasMaxLength(50);

                entity.Property(e => e.Stationcity)
                    .HasColumnName("stationcity")
                    .HasMaxLength(50);

                entity.Property(e => e.Stationcounty)
                    .HasColumnName("stationcounty")
                    .HasMaxLength(50);

                entity.Property(e => e.Stationid)
                    .HasColumnName("stationid")
                    .HasMaxLength(50);

                entity.Property(e => e.Stationname)
                    .HasColumnName("stationname")
                    .HasMaxLength(100);

                entity.Property(e => e.Stationzip)
                    .HasColumnName("stationzip")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DaqAirMonitorData>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_air_monitor_data_pkey");

                entity.ToTable("daq_air_monitor_data", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aqsparameterdescription)
                    .HasColumnName("aqsparameterdescription")
                    .HasMaxLength(60);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(50);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Date)
                    .HasColumnName("date_")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Epaid)
                    .HasColumnName("epaid")
                    .HasMaxLength(12);

                entity.Property(e => e.Finalvalue)
                    .HasColumnName("finalvalue")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(151);

                entity.Property(e => e.Nullcode)
                    .HasColumnName("nullcode")
                    .HasMaxLength(2);

                entity.Property(e => e.Parametername)
                    .HasColumnName("parametername")
                    .HasMaxLength(30);

                entity.Property(e => e.Reportedunitname)
                    .HasColumnName("reportedunitname")
                    .HasMaxLength(8);

                entity.Property(e => e.Sitedescription)
                    .HasColumnName("sitedescription")
                    .HasMaxLength(100);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(50);

                entity.Property(e => e.Streetaddress1)
                    .HasColumnName("streetaddress1")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DaqAirOilGasEmissions>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_air_oil_gas_emissions_pkey");

                entity.ToTable("daq_air_oil_gas_emissions", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_air_oil_gas_emissions_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CellId)
                    .HasColumnName("cell_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Cellid1)
                    .HasColumnName("cellid")
                    .HasMaxLength(50);

                entity.Property(e => e.Noxtpy)
                    .HasColumnName("noxtpy")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Noxvoctpy)
                    .HasColumnName("noxvoctpy")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Voctpy)
                    .HasColumnName("voctpy")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DaqAirOilGasEmissionsPoint>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_air_oil_gas_emissions_point_pkey");

                entity.ToTable("daq_air_oil_gas_emissions_point", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_air_oil_gas_emissions_point_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CompanyNa)
                    .HasColumnName("company_na")
                    .HasMaxLength(254);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MapLabel)
                    .HasColumnName("map_label")
                    .HasMaxLength(100);

                entity.Property(e => e.NoxTpy)
                    .HasColumnName("nox_tpy")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteName)
                    .HasColumnName("site_name")
                    .HasMaxLength(254);

                entity.Property(e => e.SourceId)
                    .HasColumnName("source_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.TotTpy)
                    .HasColumnName("tot_tpy")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.VocTpy)
                    .HasColumnName("voc_tpy")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DaqPermitCompApproval>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_permit_comp_approval_pkey");

                entity.ToTable("daq_permit_comp_approval", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_permit_comp_approval_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DaqId)
                    .HasColumnName("daq_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.MapLabel)
                    .HasColumnName("map_label")
                    .HasMaxLength(141);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.OwnOperatorMailingAddress1)
                    .HasColumnName("own_operator_mailing_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingAddress2)
                    .HasColumnName("own_operator_mailing_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingAddress3)
                    .HasColumnName("own_operator_mailing_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingCity)
                    .HasColumnName("own_operator_mailing_city")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingState)
                    .HasColumnName("own_operator_mailing_state")
                    .HasMaxLength(2);

                entity.Property(e => e.OwnOperatorMailingZip)
                    .HasColumnName("own_operator_mailing_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.OwnOperatorName)
                    .HasColumnName("own_operator_name")
                    .HasMaxLength(100);

                entity.Property(e => e.PermitIssued)
                    .HasColumnName("permit_issued")
                    .HasMaxLength(19);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteAddress1)
                    .HasColumnName("site_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteAddress2)
                    .HasColumnName("site_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteAddress3)
                    .HasColumnName("site_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteCity)
                    .HasColumnName("site_city")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteCounty)
                    .HasColumnName("site_county")
                    .HasMaxLength(30);

                entity.Property(e => e.SiteMailingAddress1)
                    .HasColumnName("site_mailing_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingAddress2)
                    .HasColumnName("site_mailing_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingAddress3)
                    .HasColumnName("site_mailing_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingCity)
                    .HasColumnName("site_mailing_city")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingState)
                    .HasColumnName("site_mailing_state")
                    .HasMaxLength(2);

                entity.Property(e => e.SiteMailingZip)
                    .HasColumnName("site_mailing_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.SiteState)
                    .HasColumnName("site_state")
                    .HasMaxLength(2);

                entity.Property(e => e.SiteZip)
                    .HasColumnName("site_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.UtmZone)
                    .HasColumnName("utm_zone")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<DaqPermitCompTitleV>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_permit_comp_title_v_pkey");

                entity.ToTable("daq_permit_comp_title_v", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_permit_comp_title_v_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DaqId)
                    .HasColumnName("daq_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.MapLabel)
                    .HasColumnName("map_label")
                    .HasMaxLength(141);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.OwnOperatorMailingAddress1)
                    .HasColumnName("own_operator_mailing_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingAddress2)
                    .HasColumnName("own_operator_mailing_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingAddress3)
                    .HasColumnName("own_operator_mailing_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingCity)
                    .HasColumnName("own_operator_mailing_city")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnOperatorMailingState)
                    .HasColumnName("own_operator_mailing_state")
                    .HasMaxLength(2);

                entity.Property(e => e.OwnOperatorMailingZip)
                    .HasColumnName("own_operator_mailing_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.OwnOperatorName)
                    .HasColumnName("own_operator_name")
                    .HasMaxLength(100);

                entity.Property(e => e.PermitIssued)
                    .HasColumnName("permit_issued")
                    .HasMaxLength(24);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteAddress1)
                    .HasColumnName("site_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteAddress2)
                    .HasColumnName("site_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteAddress3)
                    .HasColumnName("site_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteCity)
                    .HasColumnName("site_city")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteCounty)
                    .HasColumnName("site_county")
                    .HasMaxLength(30);

                entity.Property(e => e.SiteMailingAddress1)
                    .HasColumnName("site_mailing_address_1")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingAddress2)
                    .HasColumnName("site_mailing_address_2")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingAddress3)
                    .HasColumnName("site_mailing_address_3")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingCity)
                    .HasColumnName("site_mailing_city")
                    .HasMaxLength(100);

                entity.Property(e => e.SiteMailingState)
                    .HasColumnName("site_mailing_state")
                    .HasMaxLength(2);

                entity.Property(e => e.SiteMailingZip)
                    .HasColumnName("site_mailing_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.SiteState)
                    .HasColumnName("site_state")
                    .HasMaxLength(2);

                entity.Property(e => e.SiteZip)
                    .HasColumnName("site_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.UtmZone)
                    .HasColumnName("utm_zone")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<DaqPre1978LeadInHomes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("daq_pre_1978_lead_in_homes_pkey");

                entity.ToTable("daq_pre_1978_lead_in_homes", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("daq_pre_1978_lead_in_homes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Addnum)
                    .HasColumnName("addnum")
                    .HasMaxLength(10);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(15);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Fulladd)
                    .HasColumnName("fulladd")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<DavisCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("davis_county_parcels_pkey");

                entity.ToTable("davis_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("davis_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DavisCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("davis_county_parcels_lir_pkey");

                entity.ToTable("davis_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("davis_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DdwIrrigatedCropConsumptiveUseZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ddw_irrigated_crop_consumptive_use_zones_pkey");

                entity.ToTable("ddw_irrigated_crop_consumptive_use_zones", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("ddw_irrigated_crop_consumptive_use_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cuzone)
                    .HasColumnName("cuzone")
                    .HasMaxLength(10);

                entity.Property(e => e.Cuzonedesc)
                    .HasColumnName("cuzonedesc")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DebrisFlowWasatchFront>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("debris_flow_wasatch_front_pkey");

                entity.ToTable("debris_flow_wasatch_front", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("debris_flow_wasatch_front_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(50);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Hazard)
                    .HasColumnName("hazard")
                    .HasMaxLength(50);

                entity.Property(e => e.Hazcode)
                    .HasColumnName("hazcode")
                    .HasMaxLength(25);

                entity.Property(e => e.Relativehazard)
                    .HasColumnName("relativehazard")
                    .HasMaxLength(25);

                entity.Property(e => e.Requirement)
                    .HasColumnName("requirement")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DebrisFlowWasatchStudyBoundary>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("debris_flow_wasatch_study_boundary_pkey");

                entity.ToTable("debris_flow_wasatch_study_boundary", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("debris_flow_wasatch_study_boundary_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Author)
                    .HasColumnName("author")
                    .HasMaxLength(50);

                entity.Property(e => e.Hazard)
                    .HasColumnName("hazard")
                    .HasMaxLength(50);

                entity.Property(e => e.Pubagency)
                    .HasColumnName("pubagency")
                    .HasMaxLength(25);

                entity.Property(e => e.Publication)
                    .HasColumnName("publication")
                    .HasMaxLength(200);

                entity.Property(e => e.Pubnumber)
                    .HasColumnName("pubnumber")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Year)
                    .HasColumnName("year_")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<DeqBrownfieldsOther>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_brownfields_other_pkey");

                entity.ToTable("deq_brownfields_other", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_brownfields_other_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Datebrownf)
                    .HasColumnName("datebrownf")
                    .HasMaxLength(255);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(10);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqBrownfieldsTargeted>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_brownfields_targeted_pkey");

                entity.ToTable("deq_brownfields_targeted", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_brownfields_targeted_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Datebrownf)
                    .HasColumnName("datebrownf")
                    .HasMaxLength(255);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(4);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqCerclaCerclisList>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_cercla_cerclis_list_pkey");

                entity.ToTable("deq_cercla_cerclis_list", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_cercla_cerclis_list_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Archived)
                    .HasColumnName("archived")
                    .HasMaxLength(255);

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(12);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Erb)
                    .HasColumnName("erb_")
                    .HasMaxLength(255);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Npl)
                    .HasColumnName("npl_")
                    .HasMaxLength(255);

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Proposdnpl)
                    .HasColumnName("proposdnpl")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqCerclaNationalPrioritiesList>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_cercla_national_priorities_list_pkey");

                entity.ToTable("deq_cercla_national_priorities_list", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_cercla_national_priorities_list_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(12);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqEnforceableWrittenAssurances>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_enforceable_written_assurances_pkey");

                entity.ToTable("deq_enforceable_written_assurances", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_enforceable_written_assurances_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(4);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqEnvironmentalCovenantBufferZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_environmental_covenant_buffer_zones_pkey");

                entity.ToTable("deq_environmental_covenant_buffer_zones", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_environmental_covenant_buffer_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Altfacilit)
                    .HasColumnName("altfacilit")
                    .HasMaxLength(50);

                entity.Property(e => e.Branch)
                    .HasColumnName("branch")
                    .HasMaxLength(50);

                entity.Property(e => e.Department)
                    .HasColumnName("department")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(50);

                entity.Property(e => e.Division)
                    .HasColumnName("division")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilitype)
                    .HasColumnName("facilitype")
                    .HasMaxLength(50);

                entity.Property(e => e.FidInstit)
                    .HasColumnName("fid_instit")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Loccity)
                    .HasColumnName("loccity")
                    .HasMaxLength(50);

                entity.Property(e => e.Loccounty)
                    .HasColumnName("loccounty")
                    .HasMaxLength(50);

                entity.Property(e => e.Locname)
                    .HasColumnName("locname")
                    .HasMaxLength(50);

                entity.Property(e => e.Locstate)
                    .HasColumnName("locstate")
                    .HasMaxLength(50);

                entity.Property(e => e.Locstr)
                    .HasColumnName("locstr")
                    .HasMaxLength(50);

                entity.Property(e => e.Loczip)
                    .HasColumnName("loczip")
                    .HasMaxLength(50);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(50);

                entity.Property(e => e.Program)
                    .HasColumnName("program")
                    .HasMaxLength(50);

                entity.Property(e => e.Projectman)
                    .HasColumnName("projectman")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DeqFormerlyUsedDefense>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_formerly_used_defense_pkey");

                entity.ToTable("deq_formerly_used_defense", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_formerly_used_defense_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Archived)
                    .HasColumnName("archived")
                    .HasMaxLength(255);

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(12);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Erb)
                    .HasColumnName("erb_")
                    .HasMaxLength(255);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Npl)
                    .HasColumnName("npl_")
                    .HasMaxLength(255);

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Proposdnpl)
                    .HasColumnName("proposdnpl")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqMilitaryMunitionResponseProgram>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_military_munition_response_program_pkey");

                entity.ToTable("deq_military_munition_response_program", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_military_munition_response_program_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Archived)
                    .HasColumnName("archived")
                    .HasMaxLength(255);

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(4);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Erb)
                    .HasColumnName("erb_")
                    .HasMaxLength(255);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Npl)
                    .HasColumnName("npl_")
                    .HasMaxLength(255);

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Proposdnpl)
                    .HasColumnName("proposdnpl")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqTier2>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_tier2_pkey");

                entity.ToTable("deq_tier2", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_tier2_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(8);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FacAddres)
                    .HasColumnName("fac_addres")
                    .HasMaxLength(86);

                entity.Property(e => e.FacCity)
                    .HasColumnName("fac_city")
                    .HasMaxLength(50);

                entity.Property(e => e.FacCnty)
                    .HasColumnName("fac_cnty")
                    .HasMaxLength(20);

                entity.Property(e => e.FacName)
                    .HasColumnName("fac_name")
                    .HasMaxLength(80);

                entity.Property(e => e.FacState)
                    .HasColumnName("fac_state")
                    .HasMaxLength(2);

                entity.Property(e => e.FacZip)
                    .HasColumnName("fac_zip")
                    .HasMaxLength(9);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqToxicReleaseInventory>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_toxic_release_inventory_pkey");

                entity.ToTable("deq_toxic_release_inventory", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_toxic_release_inventory_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(15);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FacAddres)
                    .HasColumnName("fac_addres")
                    .HasMaxLength(86);

                entity.Property(e => e.FacCity)
                    .HasColumnName("fac_city")
                    .HasMaxLength(75);

                entity.Property(e => e.FacCnty)
                    .HasColumnName("fac_cnty")
                    .HasMaxLength(75);

                entity.Property(e => e.FacName)
                    .HasColumnName("fac_name")
                    .HasMaxLength(80);

                entity.Property(e => e.FacState)
                    .HasColumnName("fac_state")
                    .HasMaxLength(75);

                entity.Property(e => e.FacZip)
                    .HasColumnName("fac_zip")
                    .HasMaxLength(75);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(75);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DeqUndergroundStorageTanks>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_underground_storage_tanks_pkey");

                entity.ToTable("deq_underground_storage_tanks", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_underground_storage_tanks_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(50);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Facilityde)
                    .HasColumnName("facilityde")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilityid)
                    .HasColumnName("facilityid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Healthdist)
                    .HasColumnName("healthdist")
                    .HasMaxLength(50);

                entity.Property(e => e.Loccity)
                    .HasColumnName("loccity")
                    .HasMaxLength(50);

                entity.Property(e => e.Loccounty)
                    .HasColumnName("loccounty")
                    .HasMaxLength(20);

                entity.Property(e => e.Locname)
                    .HasColumnName("locname")
                    .HasMaxLength(255);

                entity.Property(e => e.Locstate)
                    .HasColumnName("locstate")
                    .HasMaxLength(2);

                entity.Property(e => e.Locstr)
                    .HasColumnName("locstr")
                    .HasMaxLength(255);

                entity.Property(e => e.Loczip)
                    .HasColumnName("loczip")
                    .HasMaxLength(9);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Openrelease)
                    .HasColumnName("openrelease")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Owneraddress)
                    .HasColumnName("owneraddress")
                    .HasMaxLength(60);

                entity.Property(e => e.Ownercity)
                    .HasColumnName("ownercity")
                    .HasMaxLength(50);

                entity.Property(e => e.Ownercounty)
                    .HasColumnName("ownercounty")
                    .HasMaxLength(20);

                entity.Property(e => e.Ownername)
                    .HasColumnName("ownername")
                    .HasMaxLength(50);

                entity.Property(e => e.Ownerstate)
                    .HasColumnName("ownerstate")
                    .HasMaxLength(2);

                entity.Property(e => e.Ownerzip)
                    .HasColumnName("ownerzip")
                    .HasMaxLength(9);

                entity.Property(e => e.Release)
                    .HasColumnName("release")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(3);

                entity.Property(e => e.Tank)
                    .HasColumnName("tank")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tankriskaveragetest)
                    .HasColumnName("tankriskaveragetest")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Utmdesc)
                    .HasColumnName("utmdesc")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DeqVoluntaryCleanupProgram>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deq_voluntary_cleanup_program_pkey");

                entity.ToTable("deq_voluntary_cleanup_program", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("deq_voluntary_cleanup_program_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Conphone)
                    .HasColumnName("conphone")
                    .HasMaxLength(10);

                entity.Property(e => e.Currprojma)
                    .HasColumnName("currprojma")
                    .HasMaxLength(50);

                entity.Property(e => e.Datecocis)
                    .HasColumnName("datecocis")
                    .HasMaxLength(255);

                entity.Property(e => e.Dateofappl)
                    .HasColumnName("dateofappl")
                    .HasMaxLength(255);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(4);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(255);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Projdesc)
                    .HasColumnName("projdesc")
                    .HasMaxLength(2000);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Siteaddres)
                    .HasColumnName("siteaddres")
                    .HasMaxLength(86);

                entity.Property(e => e.Sitecity)
                    .HasColumnName("sitecity")
                    .HasMaxLength(50);

                entity.Property(e => e.Sitecnty)
                    .HasColumnName("sitecnty")
                    .HasMaxLength(20);

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(35);

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(80);

                entity.Property(e => e.StKey)
                    .HasColumnName("st_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Zip4)
                    .HasColumnName("zip4")
                    .HasMaxLength(4);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<DeqmapCauselust>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_causelust_pkey");

                entity.ToTable("deqmap_causelust", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Causekey)
                    .HasColumnName("causekey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Causereal)
                    .HasColumnName("causereal")
                    .HasMaxLength(50);

                entity.Property(e => e.Lustkey)
                    .HasColumnName("lustkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Methdet)
                    .HasColumnName("methdet")
                    .HasMaxLength(50);

                entity.Property(e => e.Subrelease)
                    .HasColumnName("subrelease")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<DeqmapCerclabranchactmaj>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_cerclabranchactmaj_pkey");

                entity.ToTable("deqmap_cerclabranchactmaj", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Ackey)
                    .HasColumnName("ackey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.AclinkKey)
                    .HasColumnName("aclink_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.ActComm)
                    .HasColumnName("act_comm")
                    .HasMaxLength(4000);

                entity.Property(e => e.ComplDate)
                    .HasColumnName("compl_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.CurrentLd)
                    .HasColumnName("current_ld")
                    .HasMaxLength(10);

                entity.Property(e => e.MajFeddes)
                    .HasColumnName("maj_feddes")
                    .HasMaxLength(65);

                entity.Property(e => e.MajStdesc)
                    .HasColumnName("maj_stdesc")
                    .HasMaxLength(65);

                entity.Property(e => e.MajactKey)
                    .HasColumnName("majact_key")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ProjManag)
                    .HasColumnName("proj_manag")
                    .HasMaxLength(117);

                entity.Property(e => e.StartDate)
                    .HasColumnName("start_date")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<DeqmapCerclabranchactmin>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_cerclabranchactmin_pkey");

                entity.ToTable("deqmap_cerclabranchactmin", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AclinkKey)
                    .HasColumnName("aclink_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.MinFeddes)
                    .HasColumnName("min_feddes")
                    .HasMaxLength(255);

                entity.Property(e => e.MinStdesc)
                    .HasColumnName("min_stdesc")
                    .HasMaxLength(60);

                entity.Property(e => e.Minactlink)
                    .HasColumnName("minactlink")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqmapCerclabranchic>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_cerclabranchic_pkey");

                entity.ToTable("deqmap_cerclabranchic", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Agsigndate)
                    .HasColumnName("agsigndate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.AmendDate)
                    .HasColumnName("amend_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Amendment)
                    .HasColumnName("amendment_")
                    .HasMaxLength(3);

                entity.Property(e => e.CompDate)
                    .HasColumnName("comp_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.IcAKey)
                    .HasColumnName("ic_a_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.IcAgDesc)
                    .HasColumnName("ic_ag_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.IcComment)
                    .HasColumnName("ic_comment")
                    .HasMaxLength(4000);

                entity.Property(e => e.Icagdocpdf)
                    .HasColumnName("icagdocpdf")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Icalinkkey)
                    .HasColumnName("icalinkkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Permanent)
                    .HasColumnName("permanent_")
                    .HasMaxLength(3);

                entity.Property(e => e.TermDate)
                    .HasColumnName("term_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Terminate)
                    .HasColumnName("terminate")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<DeqmapCerclabrremed>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_cerclabrremed_pkey");

                entity.ToTable("deqmap_cerclabrremed", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Rdateappro)
                    .HasColumnName("rdateappro")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Rdatecompl)
                    .HasColumnName("rdatecompl")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Rdatestart)
                    .HasColumnName("rdatestart")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Rdocreftit)
                    .HasColumnName("rdocreftit")
                    .HasMaxLength(100);

                entity.Property(e => e.RemDesc)
                    .HasColumnName("rem_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.RemLead)
                    .HasColumnName("rem_lead")
                    .HasMaxLength(50);

                entity.Property(e => e.RemObject)
                    .HasColumnName("rem_object")
                    .HasMaxLength(255);

                entity.Property(e => e.Remcomment)
                    .HasColumnName("remcomment")
                    .HasMaxLength(4000);

                entity.Property(e => e.Remlinkkey)
                    .HasColumnName("remlinkkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.RestricKey)
                    .HasColumnName("restric_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Rlegaldesc)
                    .HasColumnName("rlegaldesc")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DeqmapCerclabrrestrict>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_cerclabrrestrict_pkey");

                entity.ToTable("deqmap_cerclabrrestrict", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Reslinkkey)
                    .HasColumnName("reslinkkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.RestDesc)
                    .HasColumnName("rest_desc")
                    .HasMaxLength(50);

                entity.Property(e => e.RestLead)
                    .HasColumnName("rest_lead")
                    .HasMaxLength(50);

                entity.Property(e => e.Restcommen)
                    .HasColumnName("restcommen")
                    .HasMaxLength(255);

                entity.Property(e => e.Restdatcom)
                    .HasColumnName("restdatcom")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Restdateap)
                    .HasColumnName("restdateap")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Restdatest)
                    .HasColumnName("restdatest")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Restdocref)
                    .HasColumnName("restdocref")
                    .HasMaxLength(100);

                entity.Property(e => e.Restobject)
                    .HasColumnName("restobject")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DeqmapComplianceust>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_complianceust_pkey");

                entity.ToTable("deqmap_complianceust", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Citation)
                    .HasColumnName("citation")
                    .HasMaxLength(255);

                entity.Property(e => e.Compdate)
                    .HasColumnName("compdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(255);

                entity.Property(e => e.Facilityid)
                    .HasColumnName("facilityid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Scientist)
                    .HasColumnName("scientist")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DeqmapEiChemical>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_ei_chemical_pkey");

                entity.ToTable("deqmap_ei_chemical", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Amount)
                    .HasColumnName("amount")
                    .HasMaxLength(150);

                entity.Property(e => e.AmountOther)
                    .HasColumnName("amount_other")
                    .HasMaxLength(150);

                entity.Property(e => e.AmountType)
                    .HasColumnName("amount_type")
                    .HasMaxLength(150);

                entity.Property(e => e.Chemical)
                    .HasColumnName("chemical")
                    .HasMaxLength(150);

                entity.Property(e => e.ChemicalOther)
                    .HasColumnName("chemical_other")
                    .HasMaxLength(150);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqmapEiImpactedMedia>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_ei_impacted_media_pkey");

                entity.ToTable("deqmap_ei_impacted_media", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(150);

                entity.Property(e => e.Distancetosurfacewater)
                    .HasColumnName("distancetosurfacewater")
                    .HasMaxLength(250);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Impactedmedia)
                    .HasColumnName("impactedmedia")
                    .HasMaxLength(255);

                entity.Property(e => e.Impactedmediaother)
                    .HasColumnName("impactedmediaother")
                    .HasMaxLength(500);

                entity.Property(e => e.InNearwater)
                    .HasColumnName("in_nearwater")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Landuse)
                    .HasColumnName("landuse")
                    .HasMaxLength(255);

                entity.Property(e => e.Waterwayname)
                    .HasColumnName("waterwayname")
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<DeqmapLust>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_lust_pkey");

                entity.ToTable("deqmap_lust", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Caph2otrea)
                    .HasColumnName("caph2otrea")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Capsoiltre)
                    .HasColumnName("capsoiltre")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Closuretype)
                    .HasColumnName("closuretype")
                    .HasMaxLength(25);

                entity.Property(e => e.Dateclose)
                    .HasColumnName("dateclose")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Deductible)
                    .HasColumnName("deductible")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depthgw)
                    .HasColumnName("depthgw")
                    .HasMaxLength(50);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(4);

                entity.Property(e => e.Facilityid)
                    .HasColumnName("facilityid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Gwflowdir1)
                    .HasColumnName("gwflowdir1")
                    .HasMaxLength(3);

                entity.Property(e => e.Gwflowdir2)
                    .HasColumnName("gwflowdir2")
                    .HasMaxLength(3);

                entity.Property(e => e.Ic)
                    .HasColumnName("ic")
                    .HasMaxLength(255);

                entity.Property(e => e.Lustkey)
                    .HasColumnName("lustkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(262);

                entity.Property(e => e.Nfaform)
                    .HasColumnName("nfaform")
                    .HasMaxLength(50);

                entity.Property(e => e.Notificati)
                    .HasColumnName("notificati")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Projectman)
                    .HasColumnName("projectman")
                    .HasMaxLength(50);

                entity.Property(e => e.Pstfundper)
                    .HasColumnName("pstfundper")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Pstfundsta)
                    .HasColumnName("pstfundsta")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<DeqmapRbcaoff>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_rbcaoff_pkey");

                entity.ToTable("deqmap_rbcaoff", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Lustkey)
                    .HasColumnName("lustkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Offimpact)
                    .HasColumnName("offimpact")
                    .HasMaxLength(25);

                entity.Property(e => e.Offland)
                    .HasColumnName("offland")
                    .HasMaxLength(25);

                entity.Property(e => e.Offsitekey)
                    .HasColumnName("offsitekey")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqmapRbcaon>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_rbcaon_pkey");

                entity.ToTable("deqmap_rbcaon", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Lustkey)
                    .HasColumnName("lustkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Onimpact)
                    .HasColumnName("onimpact")
                    .HasMaxLength(25);

                entity.Property(e => e.Onland)
                    .HasColumnName("onland")
                    .HasMaxLength(25);

                entity.Property(e => e.Onsitekey)
                    .HasColumnName("onsitekey")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqmapSoiltype>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_soiltype_pkey");

                entity.ToTable("deqmap_soiltype", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Lustkey)
                    .HasColumnName("lustkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Soil)
                    .HasColumnName("soil")
                    .HasMaxLength(50);

                entity.Property(e => e.Soilcom)
                    .HasColumnName("soilcom")
                    .HasMaxLength(250);

                entity.Property(e => e.Soiltypekey)
                    .HasColumnName("soiltypekey")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<DeqmapTankust>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_tankust_pkey");

                entity.ToTable("deqmap_tankust", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Abovetank)
                    .HasColumnName("abovetank")
                    .HasMaxLength(3);

                entity.Property(e => e.Alttankid)
                    .HasColumnName("alttankid")
                    .HasMaxLength(50);

                entity.Property(e => e.Closuresta)
                    .HasColumnName("closuresta")
                    .HasMaxLength(50);

                entity.Property(e => e.Dateclose)
                    .HasColumnName("dateclose")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Dateinstal)
                    .HasColumnName("dateinstal")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Datelastus)
                    .HasColumnName("datelastus")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Facilityid)
                    .HasColumnName("facilityid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Federalreg)
                    .HasColumnName("federalreg")
                    .HasMaxLength(3);

                entity.Property(e => e.Incomplian)
                    .HasColumnName("incomplian")
                    .HasMaxLength(3);

                entity.Property(e => e.Othertype)
                    .HasColumnName("othertype")
                    .HasMaxLength(50);

                entity.Property(e => e.Pipematdes)
                    .HasColumnName("pipematdes")
                    .HasMaxLength(50);

                entity.Property(e => e.Pipemoddes)
                    .HasColumnName("pipemoddes")
                    .HasMaxLength(50);

                entity.Property(e => e.Piperelde1)
                    .HasColumnName("piperelde1")
                    .HasMaxLength(23);

                entity.Property(e => e.Piperelde2)
                    .HasColumnName("piperelde2")
                    .HasMaxLength(4);

                entity.Property(e => e.Pipetypede)
                    .HasColumnName("pipetypede")
                    .HasMaxLength(50);

                entity.Property(e => e.PstFund)
                    .HasColumnName("pst_fund")
                    .HasMaxLength(3);

                entity.Property(e => e.Substanced)
                    .HasColumnName("substanced")
                    .HasMaxLength(50);

                entity.Property(e => e.Tankcapaci)
                    .HasColumnName("tankcapaci")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Tankemerge)
                    .HasColumnName("tankemerge")
                    .HasMaxLength(3);

                entity.Property(e => e.Tankid)
                    .HasColumnName("tankid")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tankmatdes)
                    .HasColumnName("tankmatdes")
                    .HasMaxLength(50);

                entity.Property(e => e.Tankmodsde)
                    .HasColumnName("tankmodsde")
                    .HasMaxLength(50);

                entity.Property(e => e.Tankreldet)
                    .HasColumnName("tankreldet")
                    .HasMaxLength(23);

                entity.Property(e => e.Tankstatus)
                    .HasColumnName("tankstatus")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<DeqmapTier2chem>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_tier2chem_pkey");

                entity.ToTable("deqmap_tier2chem", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AveAmount)
                    .HasColumnName("ave_amount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ChemKey)
                    .HasColumnName("chem_key")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Chemical)
                    .HasColumnName("chemical")
                    .HasMaxLength(255);

                entity.Property(e => e.Chemlnkkey)
                    .HasColumnName("chemlnkkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Daysonsite)
                    .HasColumnName("daysonsite")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DelayHaz)
                    .HasColumnName("delay_haz")
                    .HasMaxLength(255);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(8);

                entity.Property(e => e.EhsName)
                    .HasColumnName("ehs_name")
                    .HasMaxLength(180);

                entity.Property(e => e.EhsSub)
                    .HasColumnName("ehs_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.FireHaz)
                    .HasColumnName("fire_haz")
                    .HasMaxLength(255);

                entity.Property(e => e.GasSub)
                    .HasColumnName("gas_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.ImmedHaz)
                    .HasColumnName("immed_haz")
                    .HasMaxLength(255);

                entity.Property(e => e.LiquidSub)
                    .HasColumnName("liquid_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.MixSub)
                    .HasColumnName("mix_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.PresHaz)
                    .HasColumnName("pres_haz")
                    .HasMaxLength(255);

                entity.Property(e => e.PureSub)
                    .HasColumnName("pure_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.ReactHaz)
                    .HasColumnName("react_haz")
                    .HasMaxLength(255);

                entity.Property(e => e.SolidSub)
                    .HasColumnName("solid_sub")
                    .HasMaxLength(255);

                entity.Property(e => e.Tradsecret)
                    .HasColumnName("tradsecret")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DeqmapTier2rptyr>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_tier2rptyr_pkey");

                entity.ToTable("deqmap_tier2rptyr", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(8);

                entity.Property(e => e.NaicsCode)
                    .HasColumnName("naics_code")
                    .HasMaxLength(75);

                entity.Property(e => e.NaicsDesc)
                    .HasColumnName("naics_desc")
                    .HasMaxLength(120);

                entity.Property(e => e.Reportyear)
                    .HasColumnName("reportyear")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Rptyearkey)
                    .HasColumnName("rptyearkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Rptyrlink)
                    .HasColumnName("rptyrlink")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.SicCode)
                    .HasColumnName("sic_code")
                    .HasMaxLength(75);

                entity.Property(e => e.SicDesc)
                    .HasColumnName("sic_desc")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DeqmapTrichem>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_trichem_pkey");

                entity.ToTable("deqmap_trichem", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ActRevisi)
                    .HasColumnName("act_revisi")
                    .HasMaxLength(255);

                entity.Property(e => e.AveAmount)
                    .HasColumnName("ave_amount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Chemical)
                    .HasColumnName("chemical")
                    .HasMaxLength(180);

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(15);

                entity.Property(e => e.Facimpchem)
                    .HasColumnName("facimpchem")
                    .HasMaxLength(255);

                entity.Property(e => e.Facprochem)
                    .HasColumnName("facprochem")
                    .HasMaxLength(255);

                entity.Property(e => e.FormSubm)
                    .HasColumnName("form_subm")
                    .HasMaxLength(6);

                entity.Property(e => e.ManImpuri)
                    .HasColumnName("man_impuri")
                    .HasMaxLength(255);

                entity.Property(e => e.ManOnsite)
                    .HasColumnName("man_onsite")
                    .HasMaxLength(255);

                entity.Property(e => e.ManProd)
                    .HasColumnName("man_prod")
                    .HasMaxLength(255);

                entity.Property(e => e.ManSale)
                    .HasColumnName("man_sale")
                    .HasMaxLength(255);

                entity.Property(e => e.OtherManu)
                    .HasColumnName("other_manu")
                    .HasMaxLength(255);

                entity.Property(e => e.OtherProa)
                    .HasColumnName("other_proa")
                    .HasMaxLength(255);

                entity.Property(e => e.OtherUse)
                    .HasColumnName("other_use")
                    .HasMaxLength(255);

                entity.Property(e => e.ProArticl)
                    .HasColumnName("pro_articl")
                    .HasMaxLength(255);

                entity.Property(e => e.ProFormul)
                    .HasColumnName("pro_formul")
                    .HasMaxLength(255);

                entity.Property(e => e.ProImpuri)
                    .HasColumnName("pro_impuri")
                    .HasMaxLength(255);

                entity.Property(e => e.ProReact)
                    .HasColumnName("pro_react")
                    .HasMaxLength(255);

                entity.Property(e => e.ProRepack)
                    .HasColumnName("pro_repack")
                    .HasMaxLength(255);

                entity.Property(e => e.ProdRatio)
                    .HasColumnName("prod_ratio")
                    .HasMaxLength(9);

                entity.Property(e => e.QuantRel)
                    .HasColumnName("quant_rel")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Revision)
                    .HasColumnName("revision_")
                    .HasMaxLength(255);

                entity.Property(e => e.TradeSecr)
                    .HasColumnName("trade_secr")
                    .HasMaxLength(255);

                entity.Property(e => e.Trichemkey)
                    .HasColumnName("trichemkey")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Trilnkkey)
                    .HasColumnName("trilnkkey")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DeqmapTriowners>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_triowners_pkey");

                entity.ToTable("deqmap_triowners", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(15);

                entity.Property(e => e.OwnerAddr)
                    .HasColumnName("owner_addr")
                    .HasMaxLength(120);

                entity.Property(e => e.OwnerCity)
                    .HasColumnName("owner_city")
                    .HasMaxLength(75);

                entity.Property(e => e.OwnerCnty)
                    .HasColumnName("owner_cnty")
                    .HasMaxLength(75);

                entity.Property(e => e.OwnerName)
                    .HasColumnName("owner_name")
                    .HasMaxLength(80);

                entity.Property(e => e.OwnerZip)
                    .HasColumnName("owner_zip")
                    .HasMaxLength(75);

                entity.Property(e => e.OwnerZip4)
                    .HasColumnName("owner_zip4")
                    .HasMaxLength(75);

                entity.Property(e => e.Owneremail)
                    .HasColumnName("owneremail")
                    .HasMaxLength(75);

                entity.Property(e => e.Ownerphone)
                    .HasColumnName("ownerphone")
                    .HasMaxLength(75);

                entity.Property(e => e.Ownerstate)
                    .HasColumnName("ownerstate")
                    .HasMaxLength(75);

                entity.Property(e => e.Ownlinkkey)
                    .HasColumnName("ownlinkkey")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DeqmapTrirptyr>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("deqmap_trirptyr_pkey");

                entity.ToTable("deqmap_trirptyr", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Cimid)
                    .HasColumnName("cimid")
                    .HasMaxLength(15);

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasMaxLength(15);

                entity.Property(e => e.NaicsCode)
                    .HasColumnName("naics_code")
                    .HasMaxLength(75);

                entity.Property(e => e.NaicsDesc)
                    .HasColumnName("naics_desc")
                    .HasMaxLength(120);

                entity.Property(e => e.Reportyear)
                    .HasColumnName("reportyear")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rptyrkey)
                    .HasColumnName("rptyrkey")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rptyrlink)
                    .HasColumnName("rptyrlink")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SicCode)
                    .HasColumnName("sic_code")
                    .HasMaxLength(75);

                entity.Property(e => e.SicDesc)
                    .HasColumnName("sic_desc")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DistrictCombinationAreas2012>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("district_combination_areas_2012_pkey");

                entity.ToTable("district_combination_areas_2012", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("district_combination_areas_2012_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Color4house)
                    .HasColumnName("color4house")
                    .HasMaxLength(1);

                entity.Property(e => e.Color4school)
                    .HasColumnName("color4school")
                    .HasMaxLength(1);

                entity.Property(e => e.Color4senate)
                    .HasColumnName("color4senate")
                    .HasMaxLength(1);

                entity.Property(e => e.Comboid)
                    .HasColumnName("comboid")
                    .HasMaxLength(15);

                entity.Property(e => e.Congress)
                    .HasColumnName("congress")
                    .HasMaxLength(1);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(3);

                entity.Property(e => e.House)
                    .HasColumnName("house")
                    .HasMaxLength(2);

                entity.Property(e => e.School)
                    .HasColumnName("school")
                    .HasMaxLength(2);

                entity.Property(e => e.Senate)
                    .HasColumnName("senate")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DominantVegetation>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dominant_vegetation_pkey");

                entity.ToTable("dominant_vegetation", "bioscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("dominant_vegetation_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(5);

                entity.Property(e => e.Dom)
                    .HasColumnName("dom")
                    .HasMaxLength(3);

                entity.Property(e => e.Lab)
                    .HasColumnName("lab")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Ss1)
                    .HasColumnName("ss1")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss10)
                    .HasColumnName("ss10")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss2)
                    .HasColumnName("ss2")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss3)
                    .HasColumnName("ss3")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss4)
                    .HasColumnName("ss4")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss5)
                    .HasColumnName("ss5")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss6)
                    .HasColumnName("ss6")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss7)
                    .HasColumnName("ss7")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss8)
                    .HasColumnName("ss8")
                    .HasMaxLength(3);

                entity.Property(e => e.Ss9)
                    .HasColumnName("ss9")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<DrgExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("drg_extents_pkey");

                entity.ToTable("drg_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("drg_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(100);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(125);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<DuchesneCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("duchesne_county_parcels_pkey");

                entity.ToTable("duchesne_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("duchesne_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<DuchesneCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("duchesne_county_parcels_lir_pkey");

                entity.ToTable("duchesne_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("duchesne_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<DwmrcHazardousWasteAndUsedOilFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwmrc_hazardous_waste_and_used_oil_facilities_pkey");

                entity.ToTable("dwmrc_hazardous_waste_and_used_oil_facilities", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwmrc_hazardous_waste_and_used_oil_facilities_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CityId)
                    .HasColumnName("city_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.CityName)
                    .HasColumnName("city_name")
                    .HasMaxLength(80);

                entity.Property(e => e.FacilityName)
                    .HasColumnName("facility_name")
                    .HasMaxLength(255);

                entity.Property(e => e.FacilityNumber)
                    .HasColumnName("facility_number")
                    .HasMaxLength(64);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StreetAddress)
                    .HasColumnName("street_address")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DwmrcLowLevelWasteDisposalAndUraniumMillFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwmrc_low_level_waste_disposal_and_uranium_mill_facilities_pkey");

                entity.ToTable("dwmrc_low_level_waste_disposal_and_uranium_mill_facilities", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwmrc_low_level_waste_disposal_and_uranium_mill_facilities_shap")
                    .HasMethod("gist");

                entity.Property(e => e.Xid)
                    .HasColumnName("xid")
                    .HasDefaultValueSql("nextval('environment.dwmrc_low_level_waste_disposal_and_uranium_mill_facilit_xid_seq'::regclass)");

                entity.Property(e => e.FacilityName)
                    .HasColumnName("facility_name")
                    .HasMaxLength(250);

                entity.Property(e => e.FacilityNumber)
                    .HasColumnName("facility_number")
                    .HasMaxLength(20);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<DwmrcSolidWasteFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwmrc_solid_waste_facilities_pkey");

                entity.ToTable("dwmrc_solid_waste_facilities", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwmrc_solid_waste_facilities_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CityId)
                    .HasColumnName("city_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.CityName)
                    .HasColumnName("city_name")
                    .HasMaxLength(80);

                entity.Property(e => e.FacilityName)
                    .HasColumnName("facility_name")
                    .HasMaxLength(255);

                entity.Property(e => e.FacilityNumber)
                    .HasColumnName("facility_number")
                    .HasMaxLength(64);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StreetAddress)
                    .HasColumnName("street_address")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<DwqAssessedLakes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_assessed_lakes_pkey");

                entity.ToTable("dwq_assessed_lakes", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_assessed_lakes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acre)
                    .HasColumnName("acre")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.AcreSourc)
                    .HasColumnName("acre_sourc")
                    .HasMaxLength(50);

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.HucUnit)
                    .HasColumnName("huc_unit")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LatNad83)
                    .HasColumnName("lat_nad83")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LongNad83)
                    .HasColumnName("long_nad83")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LowCase)
                    .HasColumnName("low_case")
                    .HasMaxLength(40);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(60);

                entity.Property(e => e.MgmtUnit)
                    .HasColumnName("mgmt_unit")
                    .HasMaxLength(30);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.WbodyId)
                    .HasColumnName("wbody_id")
                    .HasMaxLength(22);
            });

            modelBuilder.Entity<DwqAssessedWaters>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_assessed_waters_pkey");

                entity.ToTable("dwq_assessed_waters", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_assessed_waters_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AntiDegrd)
                    .HasColumnName("anti_degrd")
                    .HasMaxLength(100);

                entity.Property(e => e.AreaM2)
                    .HasColumnName("area_m2")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.AssessId)
                    .HasColumnName("assess_id")
                    .HasMaxLength(40);

                entity.Property(e => e.Assessment)
                    .HasColumnName("assessment")
                    .HasMaxLength(30);

                entity.Property(e => e.AuDescrip)
                    .HasColumnName("au_descrip")
                    .HasMaxLength(200);

                entity.Property(e => e.AuName)
                    .HasColumnName("au_name")
                    .HasMaxLength(50);

                entity.Property(e => e.BenClass)
                    .HasColumnName("ben_class")
                    .HasMaxLength(40);

                entity.Property(e => e.BluRibbon)
                    .HasColumnName("blu_ribbon")
                    .HasMaxLength(125);

                entity.Property(e => e.GisAcres)
                    .HasColumnName("gis_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.HabImpair)
                    .HasColumnName("hab_impair")
                    .HasMaxLength(150);

                entity.Property(e => e.Impairment)
                    .HasColumnName("impairment")
                    .HasMaxLength(254);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(100);

                entity.Property(e => e.MgmtUnit)
                    .HasColumnName("mgmt_unit")
                    .HasMaxLength(50);

                entity.Property(e => e.NewAuid)
                    .HasColumnName("new_auid")
                    .HasMaxLength(50);

                entity.Property(e => e.Perimeter)
                    .HasColumnName("perimeter")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Protected)
                    .HasColumnName("protected")
                    .HasMaxLength(200);

                entity.Property(e => e.RiverMile)
                    .HasColumnName("river_mile")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TmdlApprv)
                    .HasColumnName("tmdl_apprv")
                    .HasMaxLength(150);

                entity.Property(e => e.TmdlInfo)
                    .HasColumnName("tmdl_info")
                    .HasMaxLength(254);

                entity.Property(e => e.TmdlReqrd)
                    .HasColumnName("tmdl_reqrd")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<DwqAssessmentUnits>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_assessment_units_pkey");

                entity.ToTable("dwq_assessment_units", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_assessment_units_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AcreGis)
                    .HasColumnName("acre_gis")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.AuDescrip)
                    .HasColumnName("au_descrip")
                    .HasMaxLength(200);

                entity.Property(e => e.AuId)
                    .HasColumnName("au_id")
                    .HasMaxLength(20);

                entity.Property(e => e.AuName)
                    .HasColumnName("au_name")
                    .HasMaxLength(30);

                entity.Property(e => e.BenClass)
                    .HasColumnName("ben_class")
                    .HasMaxLength(20);

                entity.Property(e => e.Cat2006)
                    .HasColumnName("cat_2006")
                    .HasMaxLength(10);

                entity.Property(e => e.Cause2006)
                    .HasColumnName("cause_2006")
                    .HasMaxLength(50);

                entity.Property(e => e.Miles2008)
                    .HasColumnName("miles2008")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Protected)
                    .HasColumnName("protected")
                    .HasMaxLength(150);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Status2006)
                    .HasColumnName("status2006")
                    .HasMaxLength(20);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<DwqGroundwaterPermits>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_groundwater_permits_pkey");

                entity.ToTable("dwq_groundwater_permits", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_groundwater_permits_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(50);

                entity.Property(e => e.Expiration)
                    .HasColumnName("expiration")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.IssueDate)
                    .HasColumnName("issue_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LocAddres)
                    .HasColumnName("loc_addres")
                    .HasMaxLength(150);

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Manager)
                    .HasColumnName("manager")
                    .HasMaxLength(254);

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(60);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PermitNo)
                    .HasColumnName("permit_no_")
                    .HasMaxLength(254);

                entity.Property(e => e.Permitted)
                    .HasColumnName("permitted")
                    .HasMaxLength(254);

                entity.Property(e => e.Permittee)
                    .HasColumnName("permittee")
                    .HasMaxLength(254);

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sector)
                    .HasColumnName("sector")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StateZip)
                    .HasColumnName("state_zip")
                    .HasMaxLength(30);

                entity.Property(e => e.WebInfo)
                    .HasColumnName("web_info")
                    .HasMaxLength(254);

                entity.Property(e => e.Wmu)
                    .HasColumnName("wmu")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<DwqMercuryInFishTissue>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_mercury_in_fish_tissue_pkey");

                entity.ToTable("dwq_mercury_in_fish_tissue", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_mercury_in_fish_tissue_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AveLength)
                    .HasColumnName("ave_length")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.AveWeight)
                    .HasColumnName("ave_weight")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Average)
                    .HasColumnName("average")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(40);

                entity.Property(e => e.FishAdvis)
                    .HasColumnName("fish_advis")
                    .HasMaxLength(50);

                entity.Property(e => e.Latnad83dd)
                    .HasColumnName("latnad83dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lonnad83dd)
                    .HasColumnName("lonnad83dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(100);

                entity.Property(e => e.MaxHg)
                    .HasColumnName("max_hg")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MinHg)
                    .HasColumnName("min_hg")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MonlocId)
                    .HasColumnName("monloc_id")
                    .HasMaxLength(16);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SampleGrp)
                    .HasColumnName("sample_grp")
                    .HasMaxLength(150);

                entity.Property(e => e.SampleNum)
                    .HasColumnName("sample_num")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteDescr)
                    .HasColumnName("site_descr")
                    .HasMaxLength(150);

                entity.Property(e => e.Species)
                    .HasColumnName("species")
                    .HasMaxLength(30);

                entity.Property(e => e.StDev)
                    .HasColumnName("st_dev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Water)
                    .HasColumnName("water")
                    .HasMaxLength(25);

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<DwqMonitoredLakes132>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_monitored_lakes_132_pkey");

                entity.ToTable("dwq_monitored_lakes_132", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_monitored_lakes_132_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.HucUnit)
                    .HasColumnName("huc_unit")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LowCase)
                    .HasColumnName("low_case")
                    .HasMaxLength(40);

                entity.Property(e => e.MgmtUnit)
                    .HasColumnName("mgmt_unit")
                    .HasMaxLength(30);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.WbId)
                    .HasColumnName("wb_id")
                    .HasMaxLength(22);
            });

            modelBuilder.Entity<DwqMonitoringLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_monitoring_locations_pkey");

                entity.ToTable("dwq_monitoring_locations", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_monitoring_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AntiDeg)
                    .HasColumnName("anti_deg")
                    .HasMaxLength(254);

                entity.Property(e => e.AuAssess)
                    .HasColumnName("au_assess")
                    .HasMaxLength(254);

                entity.Property(e => e.AuName)
                    .HasColumnName("au_name")
                    .HasMaxLength(254);

                entity.Property(e => e.AwqmsType)
                    .HasColumnName("awqms_type")
                    .HasMaxLength(254);

                entity.Property(e => e.BenClass)
                    .HasColumnName("ben_class")
                    .HasMaxLength(254);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(254);

                entity.Property(e => e.Hydrologic)
                    .HasColumnName("hydrologic")
                    .HasMaxLength(254);

                entity.Property(e => e.Latnad83dd)
                    .HasColumnName("latnad83dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lonnad83dd)
                    .HasColumnName("lonnad83dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(75);

                entity.Property(e => e.MonlocId)
                    .HasColumnName("monloc_id")
                    .HasMaxLength(254);

                entity.Property(e => e.MonlocIds)
                    .HasColumnName("monloc_ids")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(254);

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteSpec)
                    .HasColumnName("site_spec")
                    .HasMaxLength(254);

                entity.Property(e => e.Standard)
                    .HasColumnName("standard")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(254);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(254);

                entity.Property(e => e.Units)
                    .HasColumnName("units")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<DwqStormWaterDischargers>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_storm_water_dischargers_pkey");

                entity.ToTable("dwq_storm_water_dischargers", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_storm_water_dischargers_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(40);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Descript)
                    .HasColumnName("descript")
                    .HasMaxLength(50);

                entity.Property(e => e.EffecDate)
                    .HasColumnName("effec_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ExpirDate)
                    .HasColumnName("expir_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.IssueDate)
                    .HasColumnName("issue_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LatDd)
                    .HasColumnName("lat_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LocAddres)
                    .HasColumnName("loc_addres")
                    .HasMaxLength(60);

                entity.Property(e => e.LongDd)
                    .HasColumnName("long_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(75);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.NpdesId)
                    .HasColumnName("npdes_id")
                    .HasMaxLength(15);

                entity.Property(e => e.PermitGrp)
                    .HasColumnName("permit_grp")
                    .HasMaxLength(50);

                entity.Property(e => e.Permitname)
                    .HasColumnName("permitname")
                    .HasMaxLength(80);

                entity.Property(e => e.Permittee)
                    .HasColumnName("permittee")
                    .HasMaxLength(80);

                entity.Property(e => e.Permittype)
                    .HasColumnName("permittype")
                    .HasMaxLength(50);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(20);

                entity.Property(e => e.PointX)
                    .HasColumnName("point_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PointY)
                    .HasColumnName("point_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.RecWaters)
                    .HasColumnName("rec_waters")
                    .HasMaxLength(75);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SicCode)
                    .HasColumnName("sic_code")
                    .HasMaxLength(15);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(15);

                entity.Property(e => e.StateZip)
                    .HasColumnName("state_zip")
                    .HasMaxLength(15);

                entity.Property(e => e.SupAddres)
                    .HasColumnName("sup_addres")
                    .HasMaxLength(75);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<DwqUpdesDischargers>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("dwq_updes_dischargers_pkey");

                entity.ToTable("dwq_updes_dischargers", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("dwq_updes_dischargers_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(40);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Descript)
                    .HasColumnName("descript")
                    .HasMaxLength(50);

                entity.Property(e => e.EffecDate)
                    .HasColumnName("effec_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ExpirDate)
                    .HasColumnName("expir_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.IssueDate)
                    .HasColumnName("issue_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LatDd)
                    .HasColumnName("lat_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LocAddres)
                    .HasColumnName("loc_addres")
                    .HasMaxLength(60);

                entity.Property(e => e.LongDd)
                    .HasColumnName("long_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Maplabel)
                    .HasColumnName("maplabel")
                    .HasMaxLength(75);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.NpdesId)
                    .HasColumnName("npdes_id")
                    .HasMaxLength(15);

                entity.Property(e => e.PermitGrp)
                    .HasColumnName("permit_grp")
                    .HasMaxLength(50);

                entity.Property(e => e.Permitname)
                    .HasColumnName("permitname")
                    .HasMaxLength(80);

                entity.Property(e => e.Permittee)
                    .HasColumnName("permittee")
                    .HasMaxLength(80);

                entity.Property(e => e.Permittype)
                    .HasColumnName("permittype")
                    .HasMaxLength(50);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(20);

                entity.Property(e => e.PointX)
                    .HasColumnName("point_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PointY)
                    .HasColumnName("point_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RecWaters)
                    .HasColumnName("rec_waters")
                    .HasMaxLength(75);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SicCode)
                    .HasColumnName("sic_code")
                    .HasMaxLength(15);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(15);

                entity.Property(e => e.StateZip)
                    .HasColumnName("state_zip")
                    .HasMaxLength(15);

                entity.Property(e => e.SupAddres)
                    .HasColumnName("sup_addres")
                    .HasMaxLength(75);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<EarthquakeEpicenters1850To2016>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("earthquake_epicenters_1850_to_2016_pkey");

                entity.ToTable("earthquake_epicenters_1850_to_2016", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("earthquake_epicenters_1850_to_2016_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Day)
                    .HasColumnName("day")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DepthChge)
                    .HasColumnName("depth_chge")
                    .HasMaxLength(254);

                entity.Property(e => e.DepthQual)
                    .HasColumnName("depth_qual")
                    .HasMaxLength(254);

                entity.Property(e => e.Dmin)
                    .HasColumnName("dmin")
                    .HasMaxLength(254);

                entity.Property(e => e.EpiQual)
                    .HasColumnName("epi_qual")
                    .HasMaxLength(254);

                entity.Property(e => e.EqFlag)
                    .HasColumnName("eq_flag")
                    .HasMaxLength(254);

                entity.Property(e => e.Erh)
                    .HasColumnName("erh")
                    .HasMaxLength(254);

                entity.Property(e => e.Erz)
                    .HasColumnName("erz")
                    .HasMaxLength(254);

                entity.Property(e => e.Gap)
                    .HasColumnName("gap")
                    .HasMaxLength(254);

                entity.Property(e => e.Hr)
                    .HasColumnName("hr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Mag)
                    .HasColumnName("mag")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MagType)
                    .HasColumnName("mag_type")
                    .HasMaxLength(254);

                entity.Property(e => e.MagUu)
                    .HasColumnName("mag_uu")
                    .HasMaxLength(254);

                entity.Property(e => e.MaguuFlag)
                    .HasColumnName("maguu_flag")
                    .HasMaxLength(254);

                entity.Property(e => e.McUu)
                    .HasColumnName("mc_uu")
                    .HasMaxLength(254);

                entity.Property(e => e.Min)
                    .HasColumnName("min_")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MlUu)
                    .HasColumnName("ml_uu")
                    .HasMaxLength(254);

                entity.Property(e => e.Mo)
                    .HasColumnName("mo")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nph)
                    .HasColumnName("nph")
                    .HasMaxLength(254);

                entity.Property(e => e.Rms)
                    .HasColumnName("rms")
                    .HasMaxLength(254);

                entity.Property(e => e.Round)
                    .HasColumnName("round")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sec)
                    .HasColumnName("sec")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sigm)
                    .HasColumnName("sigm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SourceEpi)
                    .HasColumnName("source_epi")
                    .HasMaxLength(254);

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<EarthquakeEpicentersMiningInduced1928To2016>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("earthquake_epicenters_mining_induced_1928_to_2016_pkey");

                entity.ToTable("earthquake_epicenters_mining_induced_1928_to_2016", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("earthquake_epicenters_mining_induced_1928_to_2016_shape_geom_id")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Day)
                    .HasColumnName("day")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DepthChge)
                    .HasColumnName("depth_chge")
                    .HasMaxLength(254);

                entity.Property(e => e.DepthQual)
                    .HasColumnName("depth_qual")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Dmin)
                    .HasColumnName("dmin")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.EpiQual)
                    .HasColumnName("epi_qual")
                    .HasMaxLength(254);

                entity.Property(e => e.EqFlag)
                    .HasColumnName("eq_flag")
                    .HasMaxLength(254);

                entity.Property(e => e.Erh)
                    .HasColumnName("erh")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Erz)
                    .HasColumnName("erz")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Gap)
                    .HasColumnName("gap")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Hr)
                    .HasColumnName("hr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Mag)
                    .HasColumnName("mag")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MagType)
                    .HasColumnName("mag_type")
                    .HasMaxLength(254);

                entity.Property(e => e.MagUu)
                    .HasColumnName("mag_uu")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MaguuFlag)
                    .HasColumnName("maguu_flag")
                    .HasMaxLength(254);

                entity.Property(e => e.McUu)
                    .HasColumnName("mc_uu")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Min)
                    .HasColumnName("min_")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MlUu)
                    .HasColumnName("ml_uu")
                    .HasMaxLength(254);

                entity.Property(e => e.Mo)
                    .HasColumnName("mo")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nph)
                    .HasColumnName("nph")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rms)
                    .HasColumnName("rms")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Round)
                    .HasColumnName("round")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sec)
                    .HasColumnName("sec")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sigm)
                    .HasColumnName("sigm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SourceEpi)
                    .HasColumnName("source_epi")
                    .HasMaxLength(254);

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<ElectricalLines>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("electrical_lines_pkey");

                entity.ToTable("electrical_lines", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("electrical_lines_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<ElectricalService>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("electrical_service_pkey");

                entity.ToTable("electrical_service", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("electrical_service_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(100);

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(150);

                entity.Property(e => e.Provider)
                    .HasColumnName("provider")
                    .HasMaxLength(100);

                entity.Property(e => e.Servicearea)
                    .HasColumnName("servicearea")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(16);

                entity.Property(e => e.Weblink)
                    .HasColumnName("weblink")
                    .HasMaxLength(75);
            });

            modelBuilder.Entity<EmergencyMedicalServiceFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("emergency_medical_service_facilities_pkey");

                entity.ToTable("emergency_medical_service_facilities", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("emergency_medical_service_facilities_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(80);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(120);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Directions)
                    .HasColumnName("directions")
                    .HasMaxLength(254);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Frst)
                    .HasColumnName("frst")
                    .HasMaxLength(3);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(12);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<EmergencyMedicalServices>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("emergency_medical_services_pkey");

                entity.ToTable("emergency_medical_services", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("emergency_medical_services_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(80);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(120);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Frst)
                    .HasColumnName("frst")
                    .HasMaxLength(3);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(14);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<EmeryCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("emery_county_parcels_pkey");

                entity.ToTable("emery_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("emery_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<EnergyCorridorAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("energy_corridor_areas_pkey");

                entity.ToTable("energy_corridor_areas", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("energy_corridor_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(50);

                entity.Property(e => e.Designated)
                    .HasColumnName("designated")
                    .HasMaxLength(10);

                entity.Property(e => e.Desiguse)
                    .HasColumnName("desiguse")
                    .HasMaxLength(20);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SmaCode)
                    .HasColumnName("sma_code")
                    .HasMaxLength(10);

                entity.Property(e => e.StateAbbr)
                    .HasColumnName("state_abbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Widthfeet)
                    .HasColumnName("widthfeet")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<EnergyCorridorCenterline>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("energy_corridor_centerline_pkey");

                entity.ToTable("energy_corridor_centerline", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("energy_corridor_centerline_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(50);

                entity.Property(e => e.Designated)
                    .HasColumnName("designated")
                    .HasMaxLength(10);

                entity.Property(e => e.Desiguse)
                    .HasColumnName("desiguse")
                    .HasMaxLength(20);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.SmaCode)
                    .HasColumnName("sma_code")
                    .HasMaxLength(10);

                entity.Property(e => e.StateAbbr)
                    .HasColumnName("state_abbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Widthfeet)
                    .HasColumnName("widthfeet")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<EnergyResourcesLine>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("energy_resources_line_pkey");

                entity.ToTable("energy_resources_line", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("energy_resources_line_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<EnergyResourcesPoint>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("energy_resources_point_pkey");

                entity.ToTable("energy_resources_point", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("energy_resources_point_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<EnergyResourcesPolygons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("energy_resources_polygons_pkey");

                entity.ToTable("energy_resources_polygons", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("energy_resources_polygons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Code)
                    .HasColumnName("code")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<EnterpriseZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("enterprise_zones_pkey");

                entity.ToTable("enterprise_zones", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("enterprise_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.CreatedDate)
                    .HasColumnName("created_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.CreatedUser)
                    .HasColumnName("created_user")
                    .HasMaxLength(255);

                entity.Property(e => e.Expyr)
                    .HasColumnName("expyr")
                    .HasMaxLength(5);

                entity.Property(e => e.LastEditedDate)
                    .HasColumnName("last_edited_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LastEditedUser)
                    .HasColumnName("last_edited_user")
                    .HasMaxLength(255);

                entity.Property(e => e.PocEmail)
                    .HasColumnName("poc_email")
                    .HasMaxLength(50);

                entity.Property(e => e.PocName)
                    .HasColumnName("poc_name")
                    .HasMaxLength(35);

                entity.Property(e => e.PocPhone)
                    .HasColumnName("poc_phone")
                    .HasMaxLength(13);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Valid)
                    .HasColumnName("valid")
                    .HasMaxLength(10);

                entity.Property(e => e.Zonename)
                    .HasColumnName("zonename")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<EntitiesNonTax>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("entities_non_tax_pkey");

                entity.ToTable("entities_non_tax", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("entities_non_tax_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.EntCo)
                    .HasColumnName("ent_co")
                    .HasMaxLength(2);

                entity.Property(e => e.EntCode)
                    .HasColumnName("ent_code")
                    .HasMaxLength(10);

                entity.Property(e => e.EntDesc)
                    .HasColumnName("ent_desc")
                    .HasMaxLength(254);

                entity.Property(e => e.EntId)
                    .HasColumnName("ent_id")
                    .HasMaxLength(10);

                entity.Property(e => e.EntNbr)
                    .HasColumnName("ent_nbr")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.EntRate)
                    .HasColumnName("ent_rate")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.EntYr)
                    .HasColumnName("ent_yr")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Temp1)
                    .HasColumnName("temp1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Temp2)
                    .HasColumnName("temp2")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<EnvironmentUstRiskAssessment>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("environment_ust_risk_assessment_pkey");

                entity.ToTable("environment_ust_risk_assessment", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Age)
                    .HasColumnName("age")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agecount)
                    .HasColumnName("agecount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Altfacilityid)
                    .HasColumnName("altfacilityid")
                    .HasMaxLength(255);

                entity.Property(e => e.Aqz)
                    .HasColumnName("aqz")
                    .HasMaxLength(255);

                entity.Property(e => e.Aqzcount)
                    .HasColumnName("aqzcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Assessdate)
                    .HasColumnName("assessdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Assessunits)
                    .HasColumnName("assessunits")
                    .HasMaxLength(255);

                entity.Property(e => e.Assessunitscount)
                    .HasColumnName("assessunitscount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Clust)
                    .HasColumnName("clust")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Clustcount)
                    .HasColumnName("clustcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Complpts)
                    .HasColumnName("complpts")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Complptscount)
                    .HasColumnName("complptscount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Contdisp)
                    .HasColumnName("contdisp")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Contdispcount)
                    .HasColumnName("contdispcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Contsump)
                    .HasColumnName("contsump")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Contsumpcount)
                    .HasColumnName("contsumpcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depthtowat)
                    .HasColumnName("depthtowat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depthtowatcount)
                    .HasColumnName("depthtowatcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Distlake)
                    .HasColumnName("distlake")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Distlakecount)
                    .HasColumnName("distlakecount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Diststream)
                    .HasColumnName("diststream")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Diststreamcount)
                    .HasColumnName("diststreamcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Facavg)
                    .HasColumnName("facavg")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Facid)
                    .HasColumnName("facid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FacilityAddress)
                    .HasColumnName("facility_address")
                    .HasMaxLength(255);

                entity.Property(e => e.FacilityCity)
                    .HasColumnName("facility_city")
                    .HasMaxLength(255);

                entity.Property(e => e.FacilityName)
                    .HasColumnName("facility_name")
                    .HasMaxLength(255);

                entity.Property(e => e.Lust)
                    .HasColumnName("lust")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Lustcount)
                    .HasColumnName("lustcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Matofconst)
                    .HasColumnName("matofconst")
                    .HasMaxLength(255);

                entity.Property(e => e.Matofconstcount)
                    .HasColumnName("matofconstcount")
                    .HasMaxLength(255);

                entity.Property(e => e.Overfillinstalled)
                    .HasColumnName("overfillinstalled")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Overfillinstalledcount)
                    .HasColumnName("overfillinstalledcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pipematdesc)
                    .HasColumnName("pipematdesc")
                    .HasMaxLength(255);

                entity.Property(e => e.Pipematdesccount)
                    .HasColumnName("pipematdesccount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Pipemoddesc)
                    .HasColumnName("pipemoddesc")
                    .HasMaxLength(255);

                entity.Property(e => e.Pipemoddesccount)
                    .HasColumnName("pipemoddesccount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Popdensity)
                    .HasColumnName("popdensity")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Popdensitycount)
                    .HasColumnName("popdensitycount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sevage)
                    .HasColumnName("sevage")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sevagecount)
                    .HasColumnName("sevagecount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Severityratio)
                    .HasColumnName("severityratio")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sevmat)
                    .HasColumnName("sevmat")
                    .HasMaxLength(255);

                entity.Property(e => e.Sevmatcount)
                    .HasColumnName("sevmatcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Soils)
                    .HasColumnName("soils")
                    .HasMaxLength(255);

                entity.Property(e => e.Soilscount)
                    .HasColumnName("soilscount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Spillinstalled)
                    .HasColumnName("spillinstalled")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Spillinstalledcount)
                    .HasColumnName("spillinstalledcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Swpz)
                    .HasColumnName("swpz")
                    .HasMaxLength(255);

                entity.Property(e => e.Swpzcount)
                    .HasColumnName("swpzcount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tankmodsdesc)
                    .HasColumnName("tankmodsdesc")
                    .HasMaxLength(255);

                entity.Property(e => e.Tankmodsdesccount)
                    .HasColumnName("tankmodsdesccount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tankriskavg)
                    .HasColumnName("tankriskavg")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Wetlands)
                    .HasColumnName("wetlands")
                    .HasMaxLength(255);

                entity.Property(e => e.Wetlandscount)
                    .HasColumnName("wetlandscount")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Wrpod)
                    .HasColumnName("wrpod")
                    .HasMaxLength(255);

                entity.Property(e => e.Wrpodcount)
                    .HasColumnName("wrpodcount")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<EnvironmentalIncidents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("environmental_incidents_pkey");

                entity.ToTable("environmental_incidents", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("environmental_incidents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AddressLocation)
                    .HasColumnName("address_location")
                    .HasMaxLength(250);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.DateDiscovered)
                    .HasColumnName("date_discovered")
                    .HasMaxLength(30);

                entity.Property(e => e.DateDiscoveredForFilter)
                    .HasColumnName("date_discovered_for_filter")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Derrid)
                    .HasColumnName("derrid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.IncidentSummary)
                    .HasColumnName("incident_summary")
                    .HasColumnType("character varying");

                entity.Property(e => e.MapLabel)
                    .HasColumnName("map_label")
                    .HasMaxLength(59);

                entity.Property(e => e.NearestCity)
                    .HasColumnName("nearest_city")
                    .HasMaxLength(250);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ResponsibleParty)
                    .HasColumnName("responsible_party")
                    .HasMaxLength(250);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sitedesc)
                    .HasColumnName("sitedesc")
                    .HasMaxLength(23);

                entity.Property(e => e.TitleEventname)
                    .HasColumnName("title_eventname")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<FacilityMonitoringSites>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("facility_monitoring_sites_pkey");

                entity.ToTable("facility_monitoring_sites", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("facility_monitoring_sites_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(24);

                entity.Property(e => e.Hydrologic)
                    .HasColumnName("hydrologic")
                    .HasMaxLength(14);

                entity.Property(e => e.LatDms83)
                    .HasColumnName("lat_dms83")
                    .HasMaxLength(20);

                entity.Property(e => e.LongDms83)
                    .HasColumnName("long_dms83")
                    .HasMaxLength(20);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(95);

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Storet)
                    .HasColumnName("storet")
                    .HasMaxLength(10);

                entity.Property(e => e.Storets)
                    .HasColumnName("storets")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(18);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<FirePerimeters>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("fire_perimeters_pkey");

                entity.ToTable("fire_perimeters", "bioscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("fire_perimeters_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(10);

                entity.Property(e => e.Blm)
                    .HasColumnName("blm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Br)
                    .HasColumnName("br")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Dnr)
                    .HasColumnName("dnr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Dod)
                    .HasColumnName("dod")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Doe)
                    .HasColumnName("doe")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ffsl)
                    .HasColumnName("ffsl")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Firecode)
                    .HasColumnName("firecode")
                    .HasMaxLength(10);

                entity.Property(e => e.Firename)
                    .HasColumnName("firename")
                    .HasMaxLength(75);

                entity.Property(e => e.Incidentnumber)
                    .HasColumnName("incidentnumber")
                    .HasMaxLength(20);

                entity.Property(e => e.Nps)
                    .HasColumnName("nps")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Os)
                    .HasColumnName("os")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Perimeterdate)
                    .HasColumnName("perimeterdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Perimetertime)
                    .HasColumnName("perimetertime")
                    .HasMaxLength(10);

                entity.Property(e => e.Perimeteryear)
                    .HasColumnName("perimeteryear")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Private)
                    .HasColumnName("private")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Sitla)
                    .HasColumnName("sitla")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SlF)
                    .HasColumnName("sl_f")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(20);

                entity.Property(e => e.Tribal)
                    .HasColumnName("tribal")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Udot)
                    .HasColumnName("udot")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Udwr)
                    .HasColumnName("udwr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Usfs)
                    .HasColumnName("usfs")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Usfws)
                    .HasColumnName("usfws")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Usp)
                    .HasColumnName("usp")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<FireStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("fire_stations_pkey");

                entity.ToTable("fire_stations", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("fire_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(80);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(120);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Directions)
                    .HasColumnName("directions")
                    .HasMaxLength(254);

                entity.Property(e => e.Ems)
                    .HasColumnName("ems")
                    .HasMaxLength(3);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(12);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<Floodplains>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("floodplains_pkey");

                entity.ToTable("floodplains", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("floodplains_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ArRevert)
                    .HasColumnName("ar_revert")
                    .HasMaxLength(255);

                entity.Property(e => e.ArSubtrv)
                    .HasColumnName("ar_subtrv")
                    .HasMaxLength(255);

                entity.Property(e => e.BfeRevert)
                    .HasColumnName("bfe_revert")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Countyid)
                    .HasColumnName("countyid")
                    .HasMaxLength(15);

                entity.Property(e => e.DepRevert)
                    .HasColumnName("dep_revert")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DfirmId)
                    .HasColumnName("dfirm_id")
                    .HasMaxLength(255);

                entity.Property(e => e.DualZone)
                    .HasColumnName("dual_zone")
                    .HasMaxLength(255);

                entity.Property(e => e.FldArId)
                    .HasColumnName("fld_ar_id")
                    .HasMaxLength(255);

                entity.Property(e => e.FldZone)
                    .HasColumnName("fld_zone")
                    .HasMaxLength(255);

                entity.Property(e => e.Floodway)
                    .HasColumnName("floodway")
                    .HasMaxLength(255);

                entity.Property(e => e.LenUnit)
                    .HasColumnName("len_unit")
                    .HasMaxLength(255);

                entity.Property(e => e.SfhaTf)
                    .HasColumnName("sfha_tf")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SourceCit)
                    .HasColumnName("source_cit")
                    .HasMaxLength(255);

                entity.Property(e => e.StaticBfe)
                    .HasColumnName("static_bfe")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.StudyTyp)
                    .HasColumnName("study_typ")
                    .HasMaxLength(255);

                entity.Property(e => e.VDatum)
                    .HasColumnName("v_datum")
                    .HasMaxLength(255);

                entity.Property(e => e.VelUnit)
                    .HasColumnName("vel_unit")
                    .HasMaxLength(255);

                entity.Property(e => e.Velocity)
                    .HasColumnName("velocity")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.VersionId)
                    .HasColumnName("version_id")
                    .HasMaxLength(255);

                entity.Property(e => e.ZoneSubty)
                    .HasColumnName("zone_subty")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<ForestServiceBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("forest_service_boundaries_pkey");

                entity.ToTable("forest_service_boundaries", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("forest_service_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AdminForest)
                    .HasColumnName("admin_forest")
                    .HasMaxLength(50);

                entity.Property(e => e.Forest)
                    .HasColumnName("forest")
                    .HasMaxLength(2);

                entity.Property(e => e.ForestName)
                    .HasColumnName("forest_name")
                    .HasMaxLength(25);

                entity.Property(e => e.ForestNum)
                    .HasColumnName("forest_num")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.MapName)
                    .HasColumnName("map_name")
                    .HasMaxLength(40);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<ForestServiceStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("forest_service_stations_pkey");

                entity.ToTable("forest_service_stations", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("forest_service_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<GarfieldCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("garfield_county_parcels_pkey");

                entity.ToTable("garfield_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("garfield_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GarfieldCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("garfield_county_parcels_lir_pkey");

                entity.ToTable("garfield_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("garfield_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<GeologicContacts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geologic_contacts_pkey");

                entity.ToTable("geologic_contacts", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("geologic_contacts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Accuracy)
                    .HasColumnName("accuracy")
                    .HasMaxLength(15);

                entity.Property(e => e.FaultCon)
                    .HasColumnName("fault_con")
                    .HasMaxLength(4);

                entity.Property(e => e.LType)
                    .HasColumnName("l_type")
                    .HasMaxLength(12);

                entity.Property(e => e.LineDescr)
                    .HasColumnName("line_descr")
                    .HasMaxLength(47);

                entity.Property(e => e.Modifier)
                    .HasColumnName("modifier")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<GeologicDikes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geologic_dikes_pkey");

                entity.ToTable("geologic_dikes", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("geologic_dikes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.LType)
                    .HasColumnName("l_type")
                    .HasMaxLength(12);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<GeologicFormationsLine>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geologic_formations_line_pkey");

                entity.ToTable("geologic_formations_line", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("geologic_formations_line_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Accuracy)
                    .HasColumnName("accuracy")
                    .HasMaxLength(15);

                entity.Property(e => e.FaultCon)
                    .HasColumnName("fault_con")
                    .HasMaxLength(4);

                entity.Property(e => e.LType)
                    .HasColumnName("l_type")
                    .HasMaxLength(12);

                entity.Property(e => e.LineDescr)
                    .HasColumnName("line_descr")
                    .HasMaxLength(47);

                entity.Property(e => e.Modifier)
                    .HasColumnName("modifier")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<GeologicMarkers>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geologic_markers_pkey");

                entity.ToTable("geologic_markers", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("geologic_markers_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Accuracy)
                    .HasColumnName("accuracy")
                    .HasMaxLength(15);

                entity.Property(e => e.FaultCon)
                    .HasColumnName("fault_con")
                    .HasMaxLength(4);

                entity.Property(e => e.LType)
                    .HasColumnName("l_type")
                    .HasMaxLength(12);

                entity.Property(e => e.LineDescr)
                    .HasColumnName("line_descr")
                    .HasMaxLength(47);

                entity.Property(e => e.Modifier)
                    .HasColumnName("modifier")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<GeologicVeins>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geologic_veins_pkey");

                entity.ToTable("geologic_veins", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("geologic_veins_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Accuracy)
                    .HasColumnName("accuracy")
                    .HasMaxLength(15);

                entity.Property(e => e.FaultCon)
                    .HasColumnName("fault_con")
                    .HasMaxLength(4);

                entity.Property(e => e.LType)
                    .HasColumnName("l_type")
                    .HasMaxLength(12);

                entity.Property(e => e.LineDescr)
                    .HasColumnName("line_descr")
                    .HasMaxLength(47);

                entity.Property(e => e.Modifier)
                    .HasColumnName("modifier")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<GeothermalLeases>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("geothermal_leases_pkey");

                entity.ToTable("geothermal_leases", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("geothermal_leases_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AdminSt1)
                    .HasColumnName("admin_st_1")
                    .HasMaxLength(254);

                entity.Property(e => e.AdminStat)
                    .HasColumnName("admin_stat")
                    .HasMaxLength(254);

                entity.Property(e => e.CustNm)
                    .HasColumnName("cust_nm")
                    .HasMaxLength(254);

                entity.Property(e => e.CustNm1)
                    .HasColumnName("cust_nm_1")
                    .HasMaxLength(254);

                entity.Property(e => e.D)
                    .HasColumnName("d")
                    .HasMaxLength(1);

                entity.Property(e => e.Dblm)
                    .HasColumnName("dblm")
                    .HasMaxLength(254);

                entity.Property(e => e.Dblm1)
                    .HasColumnName("dblm_1")
                    .HasMaxLength(254);

                entity.Property(e => e.E)
                    .HasColumnName("e")
                    .HasMaxLength(1);

                entity.Property(e => e.Eblm)
                    .HasColumnName("eblm")
                    .HasMaxLength(254);

                entity.Property(e => e.Eblm1)
                    .HasColumnName("eblm_1")
                    .HasMaxLength(254);

                entity.Property(e => e.FidGbcada)
                    .HasColumnName("fid_gbcada")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Mblm)
                    .HasColumnName("mblm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Mblm1)
                    .HasColumnName("mblm_1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian_")
                    .HasMaxLength(24);

                entity.Property(e => e.Mtrs)
                    .HasColumnName("mtrs")
                    .HasMaxLength(254);

                entity.Property(e => e.Mtrs1)
                    .HasColumnName("mtrs_1")
                    .HasMaxLength(254);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rblm)
                    .HasColumnName("rblm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rblm1)
                    .HasColumnName("rblm_1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sblm)
                    .HasColumnName("sblm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sblm1)
                    .HasColumnName("sblm_1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Section)
                    .HasColumnName("section_")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.SerialNr)
                    .HasColumnName("serial_nr_")
                    .HasMaxLength(254);

                entity.Property(e => e.SerialNr1)
                    .HasColumnName("serial_nr1")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Tblm)
                    .HasColumnName("tblm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tblm1)
                    .HasColumnName("tblm_1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<GnisPlaceNames>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("gnis_place_names_pkey");

                entity.ToTable("gnis_place_names", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("gnis_place_names_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.CreatedDate)
                    .HasColumnName("created_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.EditedDate)
                    .HasColumnName("edited_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.ElevationMeters)
                    .HasColumnName("elevation_meters")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.QuadName)
                    .HasColumnName("quad_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<GolfCourses>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("golf_courses_pkey");

                entity.ToTable("golf_courses", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("golf_courses_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Holes)
                    .HasColumnName("holes")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Par)
                    .HasColumnName("par")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<GoogleFlightBlocks>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("google_flight_blocks_pkey");

                entity.ToTable("google_flight_blocks", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("google_flight_blocks_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Ext)
                    .HasColumnName("ext")
                    .HasMaxLength(5);

                entity.Property(e => e.Metadata)
                    .HasColumnName("metadata")
                    .HasMaxLength(5);

                entity.Property(e => e.Path)
                    .HasColumnName("path")
                    .HasMaxLength(75);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Size)
                    .HasColumnName("size")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Sqkm)
                    .HasColumnName("sqkm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sqmiles)
                    .HasColumnName("sqmiles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Tile)
                    .HasColumnName("tile")
                    .HasMaxLength(30);

                entity.Property(e => e.Worldfile)
                    .HasColumnName("worldfile")
                    .HasMaxLength(5);

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<GoogleServiceDates>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("google_service_dates_pkey");

                entity.ToTable("google_service_dates", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("google_service_dates_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(80);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<GrandCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("grand_county_parcels_pkey");

                entity.ToTable("grand_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("grand_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GrandCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("grand_county_parcels_lir_pkey");

                entity.ToTable("grand_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("grand_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<GrandStaircaseEscalanteNm>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("grand_staircase_escalante_nm_pkey");

                entity.ToTable("grand_staircase_escalante_nm", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("grand_staircase_escalante_nm_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.NmName)
                    .HasColumnName("nm_name")
                    .HasMaxLength(50);

                entity.Property(e => e.NmState)
                    .HasColumnName("nm_state")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GrazingAllotments>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("grazing_allotments_pkey");

                entity.ToTable("grazing_allotments", "farming");

                entity.HasIndex(e => e.Shape)
                    .HasName("grazing_allotments_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Allotname)
                    .HasColumnName("allotname")
                    .HasMaxLength(50);

                entity.Property(e => e.Allotno)
                    .HasColumnName("allotno")
                    .HasMaxLength(20);

                entity.Property(e => e.Manager)
                    .HasColumnName("manager")
                    .HasMaxLength(50);

                entity.Property(e => e.Pasturenm)
                    .HasColumnName("pasturenm")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GrazingImprovementRegions>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("grazing_improvement_regions_pkey");

                entity.ToTable("grazing_improvement_regions", "farming");

                entity.HasIndex(e => e.Shape)
                    .HasName("grazing_improvement_regions_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Gipregion)
                    .HasColumnName("gipregion")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GreatSaltLakeFlooding>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("great_salt_lake_flooding_pkey");

                entity.ToTable("great_salt_lake_flooding", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("great_salt_lake_flooding_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Symbol)
                    .HasColumnName("symbol")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Zone)
                    .HasColumnName("zone_")
                    .HasMaxLength(29);
            });

            modelBuilder.Entity<GreatSaltLakeMeanderLine>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("great_salt_lake_meander_line_pkey");

                entity.ToTable("great_salt_lake_meander_line", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("great_salt_lake_meander_line_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GreatSaltLakeShoreline>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("great_salt_lake_shoreline_pkey");

                entity.ToTable("great_salt_lake_shoreline", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("great_salt_lake_shoreline_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GreatSaltLakeShorelineFlooding>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("great_salt_lake_shoreline_flooding_pkey");

                entity.ToTable("great_salt_lake_shoreline_flooding", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("great_salt_lake_shoreline_flooding_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Symbol)
                    .HasColumnName("symbol")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<GsenmSpecialManagementArea>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("gsenm_special_management_area_pkey");

                entity.ToTable("gsenm_special_management_area", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("gsenm_special_management_area_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OnaName)
                    .HasColumnName("ona_name")
                    .HasMaxLength(75);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<GsenmSpecialRecreationManagementArea>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("gsenm_special_recreation_management_area_pkey");

                entity.ToTable("gsenm_special_recreation_management_area", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("gsenm_special_recreation_management_area_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SrmaId)
                    .HasColumnName("srma_id")
                    .HasMaxLength(8);

                entity.Property(e => e.SrmaName)
                    .HasColumnName("srma_name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HealthCareDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_care_districts_pkey");

                entity.ToTable("health_care_districts", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_care_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Distname)
                    .HasColumnName("distname")
                    .HasMaxLength(30);

                entity.Property(e => e.IdNum)
                    .HasColumnName("id_num")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HealthCareFacilities>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_care_facilities_pkey");

                entity.ToTable("health_care_facilities", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_care_facilities_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(50);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(25);

                entity.Property(e => e.Facid)
                    .HasColumnName("facid")
                    .HasMaxLength(15);

                entity.Property(e => e.FacilityId)
                    .HasColumnName("facility_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Factype)
                    .HasColumnName("factype")
                    .HasMaxLength(10);

                entity.Property(e => e.FunctionalCategory)
                    .HasColumnName("functional_category")
                    .HasMaxLength(50);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(60);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Telehealth)
                    .HasColumnName("telehealth")
                    .HasMaxLength(20);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(11);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(60);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(8);
            });

            modelBuilder.Entity<HealthDistricts2015>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_districts_2015_pkey");

                entity.ToTable("health_districts_2015", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_districts_2015_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Distname)
                    .HasColumnName("distname")
                    .HasMaxLength(30);

                entity.Property(e => e.IdNum)
                    .HasColumnName("id_num")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HealthSmallStatisticalAreas2017>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_small_statistical_areas_2017_pkey");

                entity.ToTable("health_small_statistical_areas_2017", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_small_statistical_areas_2017_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AreaCode)
                    .HasColumnName("area_code")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.AreaName)
                    .HasColumnName("area_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HealthSmallStatisticalAreas2018>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_small_statistical_areas_2018_pkey");

                entity.ToTable("health_small_statistical_areas_2018", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_small_statistical_areas_2018_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Smallareaname)
                    .HasColumnName("smallareaname")
                    .HasMaxLength(75);

                entity.Property(e => e.Smallareanumber)
                    .HasColumnName("smallareanumber")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<HealthSmallStatisticalAreasObesityAndActivity>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("health_small_statistical_areas_obesity_and_activity_pkey");

                entity.ToTable("health_small_statistical_areas_obesity_and_activity", "health");

                entity.HasIndex(e => e.Shape)
                    .HasName("health_small_statistical_areas_obesity_and_activity_shape_geom_")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Hiindex)
                    .HasColumnName("hiindex")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ObesityPercent)
                    .HasColumnName("obesity_percent")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PhysactivePercent)
                    .HasColumnName("physactive_percent")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PopdensitySqmi)
                    .HasColumnName("popdensity_sqmi")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Population2017)
                    .HasColumnName("population2017")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Smallareaname)
                    .HasColumnName("smallareaname")
                    .HasMaxLength(75);

                entity.Property(e => e.Smallareanumber)
                    .HasColumnName("smallareanumber")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<HexagonGrid1km>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("hexagon_grid_1km_pkey");

                entity.ToTable("hexagon_grid_1km", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("hexagon_grid_1km_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Hexid)
                    .HasColumnName("hexid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HexagonServiceDates>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("hexagon_service_dates_pkey");

                entity.ToTable("hexagon_service_dates", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("hexagon_service_dates_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(80);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<HighestPeaks>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("highest_peaks_pkey");

                entity.ToTable("highest_peaks", "elevation");

                entity.HasIndex(e => e.Shape)
                    .HasName("highest_peaks_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Combined)
                    .HasColumnName("combined")
                    .HasMaxLength(75);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.QuadName)
                    .HasColumnName("quad_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Rank)
                    .HasColumnName("rank")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(12);
            });

            modelBuilder.Entity<HighwayPatrolFieldSections>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("highway_patrol_field_sections_pkey");

                entity.ToTable("highway_patrol_field_sections", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("highway_patrol_field_sections_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Entitynbr)
                    .HasColumnName("entitynbr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Entityyr)
                    .HasColumnName("entityyr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FipsStr)
                    .HasColumnName("fips_str")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.PopCurrestimate)
                    .HasColumnName("pop_currestimate")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.PopLastcensus)
                    .HasColumnName("pop_lastcensus")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Stateplane)
                    .HasColumnName("stateplane")
                    .HasMaxLength(20);

                entity.Property(e => e.UhpSection)
                    .HasColumnName("uhp_section")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<HistoricDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("historic_districts_pkey");

                entity.ToTable("historic_districts", "history");

                entity.HasIndex(e => e.Shape)
                    .HasName("historic_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<HistoricLakeBonneville>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("historic_lake_bonneville_pkey");

                entity.ToTable("historic_lake_bonneville", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("historic_lake_bonneville_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Objectid).HasColumnName("objectid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HistoricTrails>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("historic_trails_pkey");

                entity.ToTable("historic_trails", "history");

                entity.HasIndex(e => e.Shape)
                    .HasName("historic_trails_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Adminagency)
                    .HasColumnName("adminagency")
                    .HasMaxLength(30);

                entity.Property(e => e.Altroutename)
                    .HasColumnName("altroutename")
                    .HasMaxLength(50);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.Routename)
                    .HasColumnName("routename")
                    .HasMaxLength(50);

                entity.Property(e => e.Scale)
                    .HasColumnName("scale")
                    .HasMaxLength(12);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(10);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(25);

                entity.Property(e => e.Trailname)
                    .HasColumnName("trailname")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<HouseDistricts2002>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("house_districts_2002_pkey");

                entity.ToTable("house_districts_2002", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("house_districts_2002_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HouseDistricts2012>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("house_districts_2012_pkey");

                entity.ToTable("house_districts_2012", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("house_districts_2012_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<HucBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("huc_boundaries_pkey");

                entity.ToTable("huc_boundaries", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("huc_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Huc)
                    .HasColumnName("huc")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(60);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<InlandPortAuthorityHb2001>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("inland_port_authority_hb2001_pkey");

                entity.ToTable("inland_port_authority_hb2001", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("inland_port_authority_hb2001_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<IronCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("iron_county_parcels_pkey");

                entity.ToTable("iron_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("iron_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<IronCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("iron_county_parcels_lir_pkey");

                entity.ToTable("iron_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("iron_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<JuabCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("juab_county_parcels_pkey");

                entity.ToTable("juab_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("juab_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<JuabCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("juab_county_parcels_lir_pkey");

                entity.ToTable("juab_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("juab_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<JudicialDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("judicial_districts_pkey");

                entity.ToTable("judicial_districts", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("judicial_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Counties)
                    .HasColumnName("counties")
                    .HasMaxLength(50);

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasMaxLength(10);

                entity.Property(e => e.DistrictCourt)
                    .HasColumnName("district_court")
                    .HasMaxLength(100);

                entity.Property(e => e.JuvenileCourt)
                    .HasColumnName("juvenile_court")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<KaneCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("kane_county_parcels_pkey");

                entity.ToTable("kane_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("kane_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AccountNum)
                    .HasColumnName("account_num")
                    .HasMaxLength(50);

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Zoning)
                    .HasColumnName("zoning")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<KaneCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("kane_county_parcels_lir_pkey");

                entity.ToTable("kane_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("kane_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<LakeMonitorSites>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("lake_monitor_sites_pkey");

                entity.ToTable("lake_monitor_sites", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("lake_monitor_sites_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Station)
                    .HasColumnName("station")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<LakeMonitoring>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("lake_monitoring_pkey");

                entity.ToTable("lake_monitoring", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("lake_monitoring_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AuLocated)
                    .HasColumnName("au_located")
                    .HasMaxLength(26);

                entity.Property(e => e.AuName)
                    .HasColumnName("au_name")
                    .HasMaxLength(40);

                entity.Property(e => e.BenClass)
                    .HasColumnName("ben_class")
                    .HasMaxLength(25);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(24);

                entity.Property(e => e.Hydrologic)
                    .HasColumnName("hydrologic")
                    .HasMaxLength(14);

                entity.Property(e => e.LatDms)
                    .HasColumnName("lat_dms")
                    .HasMaxLength(20);

                entity.Property(e => e.LongDms)
                    .HasColumnName("long_dms")
                    .HasMaxLength(20);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(95);

                entity.Property(e => e.Rec)
                    .HasColumnName("rec")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Storet)
                    .HasColumnName("storet")
                    .HasMaxLength(10);

                entity.Property(e => e.Storets)
                    .HasColumnName("storets")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(18);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<LakesNhd>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("lakes_nhd_pkey");

                entity.ToTable("lakes_nhd", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("lakes_nhd_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Areasqkm)
                    .HasColumnName("areasqkm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FcodeText)
                    .HasColumnName("fcode_text")
                    .HasMaxLength(50);

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FtypeText)
                    .HasColumnName("ftype_text")
                    .HasMaxLength(25);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(10);

                entity.Property(e => e.GnisName)
                    .HasColumnName("gnis_name")
                    .HasMaxLength(65);

                entity.Property(e => e.Inutah)
                    .HasColumnName("inutah")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ismajor)
                    .HasColumnName("ismajor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.PermanentIdentifier)
                    .HasColumnName("permanent_identifier")
                    .HasMaxLength(40);

                entity.Property(e => e.Reachcode)
                    .HasColumnName("reachcode")
                    .HasMaxLength(14);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<LandOwnership>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("land_ownership_pkey");

                entity.ToTable("land_ownership", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("land_ownership_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Admin)
                    .HasColumnName("admin")
                    .HasMaxLength(7);

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(7);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.Desig)
                    .HasColumnName("desig")
                    .HasMaxLength(34);

                entity.Property(e => e.EditDate)
                    .HasColumnName("edit_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.GisAcres)
                    .HasColumnName("gis_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LabelFederal)
                    .HasColumnName("label_federal")
                    .HasMaxLength(200);

                entity.Property(e => e.LabelState)
                    .HasColumnName("label_state")
                    .HasMaxLength(200);

                entity.Property(e => e.NatlLgd)
                    .HasColumnName("natl_lgd")
                    .HasMaxLength(70);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(7);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.StateLgd)
                    .HasColumnName("state_lgd")
                    .HasMaxLength(70);

                entity.Property(e => e.UtLgd)
                    .HasColumnName("ut_lgd")
                    .HasMaxLength(70);
            });

            modelBuilder.Entity<LandslideCompilationDebrisFlowPaths>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("landslide_compilation_debris_flow_paths_pkey");

                entity.ToTable("landslide_compilation_debris_flow_paths", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("landslide_compilation_debris_flow_paths_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AuthorS)
                    .HasColumnName("author_s")
                    .HasMaxLength(80);

                entity.Property(e => e.Historical)
                    .HasColumnName("historical")
                    .HasMaxLength(10);

                entity.Property(e => e.Lsunit)
                    .HasColumnName("lsunit")
                    .HasMaxLength(150);

                entity.Property(e => e.Mapname)
                    .HasColumnName("mapname")
                    .HasMaxLength(100);

                entity.Property(e => e.Mapscale)
                    .HasColumnName("mapscale")
                    .HasMaxLength(20);

                entity.Property(e => e.Movetype)
                    .HasColumnName("movetype")
                    .HasMaxLength(50);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Pubdate)
                    .HasColumnName("pubdate")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<LandslideCompilationPolygons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("landslide_compilation_polygons_pkey");

                entity.ToTable("landslide_compilation_polygons", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("landslide_compilation_polygons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Affunit)
                    .HasColumnName("affunit")
                    .HasMaxLength(50);

                entity.Property(e => e.AuthorS)
                    .HasColumnName("author_s")
                    .HasMaxLength(80);

                entity.Property(e => e.Geolunit)
                    .HasColumnName("geolunit")
                    .HasMaxLength(20);

                entity.Property(e => e.Historical)
                    .HasColumnName("historical")
                    .HasMaxLength(10);

                entity.Property(e => e.Lsunit)
                    .HasColumnName("lsunit")
                    .HasMaxLength(150);

                entity.Property(e => e.Mapbound)
                    .HasColumnName("mapbound")
                    .HasMaxLength(10);

                entity.Property(e => e.Mapname)
                    .HasColumnName("mapname")
                    .HasMaxLength(100);

                entity.Property(e => e.Mapscale)
                    .HasColumnName("mapscale")
                    .HasMaxLength(20);

                entity.Property(e => e.Movecause)
                    .HasColumnName("movecause")
                    .HasMaxLength(50);

                entity.Property(e => e.Movetype)
                    .HasColumnName("movetype")
                    .HasMaxLength(50);

                entity.Property(e => e.Moveunit)
                    .HasColumnName("moveunit")
                    .HasMaxLength(80);

                entity.Property(e => e.Multsource)
                    .HasColumnName("multsource")
                    .HasMaxLength(10);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Pubdate)
                    .HasColumnName("pubdate")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SqMiles)
                    .HasColumnName("sq_miles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Statelsid)
                    .HasColumnName("statelsid")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<LandslideCompilationScarps>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("landslide_compilation_scarps_pkey");

                entity.ToTable("landslide_compilation_scarps", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("landslide_compilation_scarps_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AuthorS)
                    .HasColumnName("author_s")
                    .HasMaxLength(80);

                entity.Property(e => e.Historical)
                    .HasColumnName("historical")
                    .HasMaxLength(10);

                entity.Property(e => e.Lsunit)
                    .HasColumnName("lsunit")
                    .HasMaxLength(150);

                entity.Property(e => e.Mapbound)
                    .HasColumnName("mapbound")
                    .HasMaxLength(10);

                entity.Property(e => e.Mapname)
                    .HasColumnName("mapname")
                    .HasMaxLength(100);

                entity.Property(e => e.Mapscale)
                    .HasColumnName("mapscale")
                    .HasMaxLength(20);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Pubdate)
                    .HasColumnName("pubdate")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<LandslideInventoryMappedAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("landslide_inventory_mapped_areas_pkey");

                entity.ToTable("landslide_inventory_mapped_areas", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("landslide_inventory_mapped_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AreaSqmi)
                    .HasColumnName("area_sqmi")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<LandslideInventoryPolygons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("landslide_inventory_polygons_pkey");

                entity.ToTable("landslide_inventory_polygons", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("landslide_inventory_polygons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Activity)
                    .HasColumnName("activity")
                    .HasMaxLength(50);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(50);

                entity.Property(e => e.Confidence)
                    .HasColumnName("confidence")
                    .HasMaxLength(50);

                entity.Property(e => e.DGeologicUnit1)
                    .HasColumnName("d_geologic_unit1")
                    .HasMaxLength(50);

                entity.Property(e => e.DGeologicUnit2)
                    .HasColumnName("d_geologic_unit2")
                    .HasMaxLength(50);

                entity.Property(e => e.DHMove1)
                    .HasColumnName("d_h_move1")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.DHMove2)
                    .HasColumnName("d_h_move2")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.DHMove3)
                    .HasColumnName("d_h_move3")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.DLandform)
                    .HasColumnName("d_landform")
                    .HasMaxLength(50);

                entity.Property(e => e.DMaterial)
                    .HasColumnName("d_material")
                    .HasMaxLength(50);

                entity.Property(e => e.DMoveDir)
                    .HasColumnName("d_move_dir")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.DMoveType)
                    .HasColumnName("d_move_type")
                    .HasMaxLength(50);

                entity.Property(e => e.DName)
                    .HasColumnName("d_name")
                    .HasMaxLength(50);

                entity.Property(e => e.DThickness)
                    .HasColumnName("d_thickness")
                    .HasMaxLength(50);

                entity.Property(e => e.MappedScale)
                    .HasColumnName("mapped_scale")
                    .HasMaxLength(20);

                entity.Property(e => e.Mapper)
                    .HasColumnName("mapper")
                    .HasMaxLength(50);

                entity.Property(e => e.PeerRev)
                    .HasColumnName("peer_rev")
                    .HasMaxLength(50);

                entity.Property(e => e.Publication)
                    .HasColumnName("publication")
                    .HasMaxLength(25);

                entity.Property(e => e.SName)
                    .HasColumnName("s_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<LawEnforcement>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("law_enforcement_pkey");

                entity.ToTable("law_enforcement", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("law_enforcement_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(80);

                entity.Property(e => e.Address2)
                    .HasColumnName("address2")
                    .HasMaxLength(80);

                entity.Property(e => e.Ci)
                    .HasColumnName("ci")
                    .HasMaxLength(3);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(120);

                entity.Property(e => e.Contdate)
                    .HasColumnName("contdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Conthow)
                    .HasColumnName("conthow")
                    .HasMaxLength(10);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Directions)
                    .HasColumnName("directions")
                    .HasMaxLength(254);

                entity.Property(e => e.Emergext)
                    .HasColumnName("emergext")
                    .HasMaxLength(10);

                entity.Property(e => e.Emergtel)
                    .HasColumnName("emergtel")
                    .HasMaxLength(15);

                entity.Property(e => e.Emergtitle)
                    .HasColumnName("emergtitle")
                    .HasMaxLength(50);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Geodate)
                    .HasColumnName("geodate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Geohow)
                    .HasColumnName("geohow")
                    .HasMaxLength(10);

                entity.Property(e => e.Geolinkid)
                    .HasColumnName("geolinkid")
                    .HasMaxLength(10);

                entity.Property(e => e.Geoprec)
                    .HasColumnName("geoprec")
                    .HasMaxLength(32);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(50);

                entity.Property(e => e.InmateCoe)
                    .HasColumnName("inmate_coe")
                    .HasMaxLength(5);

                entity.Property(e => e.InmateJuv)
                    .HasColumnName("inmate_juv")
                    .HasMaxLength(5);

                entity.Property(e => e.InmateMen)
                    .HasColumnName("inmate_men")
                    .HasMaxLength(5);

                entity.Property(e => e.InmateWom)
                    .HasColumnName("inmate_wom")
                    .HasMaxLength(5);

                entity.Property(e => e.Naicscode)
                    .HasColumnName("naicscode")
                    .HasMaxLength(6);

                entity.Property(e => e.Naicsdescr)
                    .HasColumnName("naicsdescr")
                    .HasMaxLength(120);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Phoneloc)
                    .HasColumnName("phoneloc")
                    .HasMaxLength(3);

                entity.Property(e => e.QcQa)
                    .HasColumnName("qc_qa")
                    .HasMaxLength(3);

                entity.Property(e => e.Secclass)
                    .HasColumnName("secclass")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StVendor)
                    .HasColumnName("st_vendor")
                    .HasMaxLength(10);

                entity.Property(e => e.StVersion)
                    .HasColumnName("st_version")
                    .HasMaxLength(10);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(12);

                entity.Property(e => e.Typeofagen)
                    .HasColumnName("typeofagen")
                    .HasMaxLength(100);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);

                entity.Property(e => e.Zipp4)
                    .HasColumnName("zipp4")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<LawEnforcementBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("law_enforcement_boundaries_pkey");

                entity.ToTable("law_enforcement_boundaries", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("law_enforcement_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<Libraries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("libraries_pkey");

                entity.ToTable("libraries", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("libraries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(75);

                entity.Property(e => e.AsstDirec)
                    .HasColumnName("asst_direc")
                    .HasMaxLength(40);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(20);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(11);

                entity.Property(e => e.Director)
                    .HasColumnName("director")
                    .HasMaxLength(40);

                entity.Property(e => e.DirectorEmail)
                    .HasColumnName("director_email")
                    .HasMaxLength(40);

                entity.Property(e => e.Fax)
                    .HasColumnName("fax")
                    .HasMaxLength(12);

                entity.Property(e => e.HoursFrid)
                    .HasColumnName("hours_frid")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursMond)
                    .HasColumnName("hours_mond")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursSatu)
                    .HasColumnName("hours_satu")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursSund)
                    .HasColumnName("hours_sund")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursThur)
                    .HasColumnName("hours_thur")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursTues)
                    .HasColumnName("hours_tues")
                    .HasMaxLength(40);

                entity.Property(e => e.HoursWedn)
                    .HasColumnName("hours_wedn")
                    .HasMaxLength(40);

                entity.Property(e => e.LibraryId)
                    .HasColumnName("library_id")
                    .HasMaxLength(15);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(12);

                entity.Property(e => e.PoBox)
                    .HasColumnName("po_box")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(5);

                entity.Property(e => e.Website)
                    .HasColumnName("website")
                    .HasMaxLength(100);

                entity.Property(e => e.ZipCode)
                    .HasColumnName("zip_code")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<LidarExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("lidar_extents_pkey");

                entity.ToTable("lidar_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("lidar_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Coverage)
                    .HasColumnName("coverage")
                    .HasMaxLength(50);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(50);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(125);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Metadata)
                    .HasColumnName("metadata")
                    .HasMaxLength(50);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Report)
                    .HasColumnName("report")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.UsgsQualitylevel)
                    .HasColumnName("usgs_qualitylevel")
                    .HasMaxLength(10);

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<LiquefactionPotential>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("liquefaction_potential_pkey");

                entity.ToTable("liquefaction_potential", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("liquefaction_potential_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Pcode)
                    .HasColumnName("pcode")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<LiquorStores>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("liquor_stores_pkey");

                entity.ToTable("liquor_stores", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("liquor_stores_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(50);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(35);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(25);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Onlystore)
                    .HasColumnName("onlystore")
                    .HasMaxLength(5);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(15);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Storenumber)
                    .HasColumnName("storenumber")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(20);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<LucaBlockAddressCounts2017>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("luca_block_address_counts_2017_pkey");

                entity.ToTable("luca_block_address_counts_2017", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("luca_block_address_counts_2017_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.GcaddCt)
                    .HasColumnName("gcadd_ct")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Geoid10)
                    .HasColumnName("geoid10")
                    .HasMaxLength(15);

                entity.Property(e => e.ResaddCt)
                    .HasColumnName("resadd_ct")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Uace10)
                    .HasColumnName("uace10")
                    .HasMaxLength(5);

                entity.Property(e => e.Uatype)
                    .HasColumnName("uatype")
                    .HasMaxLength(1);

                entity.Property(e => e.Ur10)
                    .HasColumnName("ur10")
                    .HasMaxLength(1);

                entity.Property(e => e.UtCbDiff)
                    .HasColumnName("ut_cb_diff")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtaddCt)
                    .HasColumnName("utadd_ct")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<MajorLakes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("major_lakes_pkey");

                entity.ToTable("major_lakes", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("major_lakes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ComId)
                    .HasColumnName("com_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasMaxLength(24);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(8);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(99);

                entity.Property(e => e.RchComId)
                    .HasColumnName("rch_com_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SqKm)
                    .HasColumnName("sq_km")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Stage)
                    .HasColumnName("stage")
                    .HasMaxLength(24);

                entity.Property(e => e.Wb)
                    .HasColumnName("wb_")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.WbId)
                    .HasColumnName("wb_id")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<MajorRiversPolygons>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("major_rivers_polygons_pkey");

                entity.ToTable("major_rivers_polygons", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("major_rivers_polygons_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ComId)
                    .HasColumnName("com_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasMaxLength(24);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(8);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(99);

                entity.Property(e => e.RchComId)
                    .HasColumnName("rch_com_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SqKm)
                    .HasColumnName("sq_km")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Stage)
                    .HasColumnName("stage")
                    .HasMaxLength(24);

                entity.Property(e => e.Wb)
                    .HasColumnName("wb_")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.WbId)
                    .HasColumnName("wb_id")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<MetroMicroStatisticalAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("metro_micro_statistical_areas_pkey");

                entity.ToTable("metro_micro_statistical_areas", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("metro_micro_statistical_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aland)
                    .HasColumnName("aland")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Awater)
                    .HasColumnName("awater")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Cbsafp)
                    .HasColumnName("cbsafp")
                    .HasMaxLength(5);

                entity.Property(e => e.Csafp)
                    .HasColumnName("csafp")
                    .HasMaxLength(3);

                entity.Property(e => e.Funcstat)
                    .HasColumnName("funcstat")
                    .HasMaxLength(1);

                entity.Property(e => e.Intptlat)
                    .HasColumnName("intptlat")
                    .HasMaxLength(11);

                entity.Property(e => e.Intptlon)
                    .HasColumnName("intptlon")
                    .HasMaxLength(12);

                entity.Property(e => e.Lsad)
                    .HasColumnName("lsad")
                    .HasMaxLength(2);

                entity.Property(e => e.Memi)
                    .HasColumnName("memi")
                    .HasMaxLength(1);

                entity.Property(e => e.Mtfcc)
                    .HasColumnName("mtfcc")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(100);

                entity.Property(e => e.Namelsad)
                    .HasColumnName("namelsad")
                    .HasMaxLength(100);

                entity.Property(e => e.Partflg)
                    .HasColumnName("partflg")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<MetroTownships>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("metro_townships_pkey");

                entity.ToTable("metro_townships", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("metro_townships_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Minname)
                    .HasColumnName("minname")
                    .HasMaxLength(40);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.Poplastcensus)
                    .HasColumnName("poplastcensus")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Poplastestimate)
                    .HasColumnName("poplastestimate")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Shortdesc)
                    .HasColumnName("shortdesc")
                    .HasMaxLength(100);

                entity.Property(e => e.Updated)
                    .HasColumnName("updated")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<MillardCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("millard_county_parcels_pkey");

                entity.ToTable("millard_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("millard_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<MillardCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("millard_county_parcels_lir_pkey");

                entity.ToTable("millard_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("millard_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<Minerals>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("minerals_pkey");

                entity.ToTable("minerals", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("minerals_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acc)
                    .HasColumnName("acc")
                    .HasMaxLength(10);

                entity.Property(e => e.Alter)
                    .HasColumnName("alter_")
                    .HasMaxLength(100);

                entity.Property(e => e.ApAcc)
                    .HasColumnName("ap_acc")
                    .HasMaxLength(53);

                entity.Property(e => e.ApAmt)
                    .HasColumnName("ap_amt")
                    .HasMaxLength(116);

                entity.Property(e => e.ApGrade)
                    .HasColumnName("ap_grade")
                    .HasMaxLength(254);

                entity.Property(e => e.ApItem)
                    .HasColumnName("ap_item")
                    .HasMaxLength(109);

                entity.Property(e => e.ApU)
                    .HasColumnName("ap_u")
                    .HasMaxLength(61);

                entity.Property(e => e.ApYear)
                    .HasColumnName("ap_year")
                    .HasMaxLength(69);

                entity.Property(e => e.ComInfo)
                    .HasColumnName("com_info")
                    .HasMaxLength(100);

                entity.Property(e => e.ComSub)
                    .HasColumnName("com_sub")
                    .HasMaxLength(100);

                entity.Property(e => e.Commod)
                    .HasColumnName("commod")
                    .HasMaxLength(29);

                entity.Property(e => e.Conc)
                    .HasColumnName("conc")
                    .HasMaxLength(100);

                entity.Property(e => e.Country)
                    .HasColumnName("country")
                    .HasMaxLength(2);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(14);

                entity.Property(e => e.CpAcc)
                    .HasColumnName("cp_acc")
                    .HasMaxLength(35);

                entity.Property(e => e.CpAmt)
                    .HasColumnName("cp_amt")
                    .HasMaxLength(74);

                entity.Property(e => e.CpGrade)
                    .HasColumnName("cp_grade")
                    .HasMaxLength(238);

                entity.Property(e => e.CpItem)
                    .HasColumnName("cp_item")
                    .HasMaxLength(78);

                entity.Property(e => e.CpU)
                    .HasColumnName("cp_u")
                    .HasMaxLength(71);

                entity.Property(e => e.CpYear)
                    .HasColumnName("cp_year")
                    .HasMaxLength(97);

                entity.Property(e => e.DWkU)
                    .HasColumnName("d_wk_u")
                    .HasMaxLength(79);

                entity.Property(e => e.DepBU)
                    .HasColumnName("dep_b_u")
                    .HasMaxLength(3);

                entity.Property(e => e.DepDescC)
                    .HasColumnName("dep_desc_c")
                    .HasMaxLength(254);

                entity.Property(e => e.DepForm)
                    .HasColumnName("dep_form")
                    .HasMaxLength(121);

                entity.Property(e => e.DepNum)
                    .HasColumnName("dep_num")
                    .HasMaxLength(31);

                entity.Property(e => e.DepSize)
                    .HasColumnName("dep_size")
                    .HasMaxLength(13);

                entity.Property(e => e.DepTU)
                    .HasColumnName("dep_t_u")
                    .HasMaxLength(15);

                entity.Property(e => e.DepType)
                    .HasColumnName("dep_type")
                    .HasMaxLength(75);

                entity.Property(e => e.DepthBot)
                    .HasColumnName("depth_bot")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthTop)
                    .HasColumnName("depth_top")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthWk)
                    .HasColumnName("depth_wk")
                    .HasMaxLength(52);

                entity.Property(e => e.DescWork)
                    .HasColumnName("desc_work_")
                    .HasMaxLength(254);

                entity.Property(e => e.DescWork1)
                    .HasColumnName("desc_work")
                    .HasMaxLength(4);

                entity.Property(e => e.Dip)
                    .HasColumnName("dip")
                    .HasMaxLength(10);

                entity.Property(e => e.Disc)
                    .HasColumnName("disc")
                    .HasMaxLength(66);

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasMaxLength(65);

                entity.Property(e => e.Drain)
                    .HasColumnName("drain")
                    .HasMaxLength(80);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasMaxLength(10);

                entity.Property(e => e.ExplCom)
                    .HasColumnName("expl_com")
                    .HasMaxLength(254);

                entity.Property(e => e.FilLink)
                    .HasColumnName("fil_link")
                    .HasMaxLength(10);

                entity.Property(e => e.Form2Age)
                    .HasColumnName("form2_age")
                    .HasMaxLength(4);

                entity.Property(e => e.Form2Name)
                    .HasColumnName("form2_name")
                    .HasMaxLength(8);

                entity.Property(e => e.FormAge)
                    .HasColumnName("form_age")
                    .HasMaxLength(71);

                entity.Property(e => e.FormName)
                    .HasColumnName("form_name")
                    .HasMaxLength(87);

                entity.Property(e => e.GenAnal)
                    .HasColumnName("gen_anal")
                    .HasMaxLength(254);

                entity.Property(e => e.GenCom)
                    .HasColumnName("gen_com")
                    .HasMaxLength(254);

                entity.Property(e => e.GeolCom)
                    .HasColumnName("geol_com")
                    .HasMaxLength(254);

                entity.Property(e => e.HrAge)
                    .HasColumnName("hr_age")
                    .HasMaxLength(25);

                entity.Property(e => e.HrType)
                    .HasColumnName("hr_type")
                    .HasMaxLength(75);

                entity.Property(e => e.Ig2UnitA)
                    .HasColumnName("ig2_unit_a")
                    .HasMaxLength(11);

                entity.Property(e => e.Ig2UnitN)
                    .HasColumnName("ig2_unit_n")
                    .HasMaxLength(17);

                entity.Property(e => e.IgAge)
                    .HasColumnName("ig_age")
                    .HasMaxLength(45);

                entity.Property(e => e.IgType)
                    .HasColumnName("ig_type")
                    .HasMaxLength(75);

                entity.Property(e => e.IgUnitAg)
                    .HasColumnName("ig_unit_ag")
                    .HasMaxLength(69);

                entity.Property(e => e.IgUnitNa)
                    .HasColumnName("ig_unit_na")
                    .HasMaxLength(101);

                entity.Property(e => e.InfoSrc)
                    .HasColumnName("info_src")
                    .HasMaxLength(5);

                entity.Property(e => e.LWkU)
                    .HasColumnName("l_wk_u")
                    .HasMaxLength(8);

                entity.Property(e => e.LandSt)
                    .HasColumnName("land_st")
                    .HasMaxLength(10);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasMaxLength(9);

                entity.Property(e => e.LenWk)
                    .HasColumnName("len_wk")
                    .HasMaxLength(9);

                entity.Property(e => e.LocalStru)
                    .HasColumnName("local_stru")
                    .HasMaxLength(254);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(100);

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasMaxLength(10);

                entity.Property(e => e.MLU)
                    .HasColumnName("m_l_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MTU)
                    .HasColumnName("m_t_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MWU)
                    .HasColumnName("m_w_u")
                    .HasMaxLength(13);

                entity.Property(e => e.Major)
                    .HasColumnName("major")
                    .HasMaxLength(14);

                entity.Property(e => e.MaxLen)
                    .HasColumnName("max_len")
                    .HasMaxLength(13);

                entity.Property(e => e.MaxThick)
                    .HasColumnName("max_thick")
                    .HasMaxLength(9);

                entity.Property(e => e.MaxWid)
                    .HasColumnName("max_wid")
                    .HasMaxLength(13);

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(30);

                entity.Property(e => e.MinAge)
                    .HasColumnName("min_age")
                    .HasMaxLength(42);

                entity.Property(e => e.Minor)
                    .HasColumnName("minor")
                    .HasMaxLength(12);

                entity.Property(e => e.NatDisc)
                    .HasColumnName("nat_disc")
                    .HasMaxLength(1);

                entity.Property(e => e.NonOreMi)
                    .HasColumnName("non_ore_mi")
                    .HasMaxLength(100);

                entity.Property(e => e.NpMain)
                    .HasColumnName("np_main")
                    .HasMaxLength(14);

                entity.Property(e => e.NpMinor)
                    .HasColumnName("np_minor")
                    .HasMaxLength(11);

                entity.Property(e => e.OAU)
                    .HasColumnName("o_a_u")
                    .HasMaxLength(9);

                entity.Property(e => e.OLU)
                    .HasColumnName("o_l_u")
                    .HasMaxLength(98);

                entity.Property(e => e.OWU)
                    .HasColumnName("o_w_u")
                    .HasMaxLength(5);

                entity.Property(e => e.Occur)
                    .HasColumnName("occur")
                    .HasMaxLength(20);

                entity.Property(e => e.Oper)
                    .HasColumnName("oper")
                    .HasMaxLength(100);

                entity.Property(e => e.OreCntl)
                    .HasColumnName("ore_cntl")
                    .HasMaxLength(227);

                entity.Property(e => e.OreMat)
                    .HasColumnName("ore_mat")
                    .HasMaxLength(100);

                entity.Property(e => e.OvAreaWk)
                    .HasColumnName("ov_area_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvLenWk)
                    .HasColumnName("ov_len_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvWidWk)
                    .HasColumnName("ov_wid_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(100);

                entity.Property(e => e.PCom)
                    .HasColumnName("p_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PSource)
                    .HasColumnName("p_source")
                    .HasMaxLength(153);

                entity.Property(e => e.Phys)
                    .HasColumnName("phys")
                    .HasMaxLength(55);

                entity.Property(e => e.Plunge)
                    .HasColumnName("plunge")
                    .HasMaxLength(10);

                entity.Property(e => e.PlungeDir)
                    .HasColumnName("plunge_dir")
                    .HasMaxLength(10);

                entity.Property(e => e.Position)
                    .HasColumnName("position")
                    .HasMaxLength(100);

                entity.Property(e => e.Poten)
                    .HasColumnName("poten")
                    .HasMaxLength(12);

                entity.Property(e => e.PrAcc)
                    .HasColumnName("pr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.PrAmt)
                    .HasColumnName("pr_amt")
                    .HasMaxLength(39);

                entity.Property(e => e.PrCom)
                    .HasColumnName("pr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PrGrade)
                    .HasColumnName("pr_grade")
                    .HasMaxLength(175);

                entity.Property(e => e.PrItem)
                    .HasColumnName("pr_item")
                    .HasMaxLength(44);

                entity.Property(e => e.PrSource)
                    .HasColumnName("pr_source")
                    .HasMaxLength(91);

                entity.Property(e => e.PrU)
                    .HasColumnName("pr_u")
                    .HasMaxLength(18);

                entity.Property(e => e.PrYear)
                    .HasColumnName("pr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Prod)
                    .HasColumnName("prod")
                    .HasMaxLength(3);

                entity.Property(e => e.Q1Scale)
                    .HasColumnName("q1_scale")
                    .HasMaxLength(6);

                entity.Property(e => e.Q2Scale)
                    .HasColumnName("q2_scale")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Quad1)
                    .HasColumnName("quad1")
                    .HasMaxLength(69);

                entity.Property(e => e.Quad2)
                    .HasColumnName("quad2")
                    .HasMaxLength(27);

                entity.Property(e => e.RAcc)
                    .HasColumnName("r_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RAmt)
                    .HasColumnName("r_amt")
                    .HasMaxLength(52);

                entity.Property(e => e.RCom)
                    .HasColumnName("r_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RGrade)
                    .HasColumnName("r_grade")
                    .HasMaxLength(151);

                entity.Property(e => e.RItem)
                    .HasColumnName("r_item")
                    .HasMaxLength(40);

                entity.Property(e => e.RSource)
                    .HasColumnName("r_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RU)
                    .HasColumnName("r_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RYear)
                    .HasColumnName("r_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(10);

                entity.Property(e => e.RecNo)
                    .HasColumnName("rec_no")
                    .HasMaxLength(7);

                entity.Property(e => e.RecType)
                    .HasColumnName("rec_type")
                    .HasMaxLength(3);

                entity.Property(e => e.Ref)
                    .HasColumnName("ref")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RegStruct)
                    .HasColumnName("reg_struct")
                    .HasMaxLength(100);

                entity.Property(e => e.Rep)
                    .HasColumnName("rep")
                    .HasMaxLength(50);

                entity.Property(e => e.RepAff)
                    .HasColumnName("rep_aff")
                    .HasMaxLength(10);

                entity.Property(e => e.RepDate)
                    .HasColumnName("rep_date")
                    .HasMaxLength(5);

                entity.Property(e => e.Rf1)
                    .HasColumnName("rf1")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf2)
                    .HasColumnName("rf2")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf3)
                    .HasColumnName("rf3")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf4)
                    .HasColumnName("rf4")
                    .HasMaxLength(254);

                entity.Property(e => e.RprAcc)
                    .HasColumnName("rpr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RprAmt)
                    .HasColumnName("rpr_amt")
                    .HasMaxLength(41);

                entity.Property(e => e.RprCom)
                    .HasColumnName("rpr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RprGrade)
                    .HasColumnName("rpr_grade")
                    .HasMaxLength(202);

                entity.Property(e => e.RprItem)
                    .HasColumnName("rpr_item")
                    .HasMaxLength(34);

                entity.Property(e => e.RprSource)
                    .HasColumnName("rpr_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RprU)
                    .HasColumnName("rpr_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RprYear)
                    .HasColumnName("rpr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.SectFract)
                    .HasColumnName("sect_fract")
                    .HasMaxLength(50);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteName)
                    .HasColumnName("site_name")
                    .HasMaxLength(70);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Strike)
                    .HasColumnName("strike")
                    .HasMaxLength(10);

                entity.Property(e => e.Syn)
                    .HasColumnName("syn")
                    .HasMaxLength(75);

                entity.Property(e => e.TectSet)
                    .HasColumnName("tect_set")
                    .HasMaxLength(75);

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(10);

                entity.Property(e => e.UtmE)
                    .HasColumnName("utm_e")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmN)
                    .HasColumnName("utm_n")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmZ)
                    .HasColumnName("utm_z")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Yr1stPro)
                    .HasColumnName("yr_1st_pro")
                    .HasMaxLength(10);

                entity.Property(e => e.YrDisc)
                    .HasColumnName("yr_disc")
                    .HasMaxLength(10);

                entity.Property(e => e.YrLastPr)
                    .HasColumnName("yr_last_pr")
                    .HasMaxLength(10);

                entity.Property(e => e.Zid)
                    .HasColumnName("zid")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<MorganCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("morgan_county_parcels_pkey");

                entity.ToTable("morgan_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("morgan_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<MorganCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("morgan_county_parcels_lir_pkey");

                entity.ToTable("morgan_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("morgan_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<MunicipalBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("municipal_boundaries_pkey");

                entity.ToTable("municipal_boundaries", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("municipal_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Countyseat)
                    .HasColumnName("countyseat")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Entitynbr)
                    .HasColumnName("entitynbr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Gnis)
                    .HasColumnName("gnis")
                    .HasMaxLength(10);

                entity.Property(e => e.Imscolor)
                    .HasColumnName("imscolor")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Minname)
                    .HasColumnName("minname")
                    .HasMaxLength(40);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.Poplastcensus)
                    .HasColumnName("poplastcensus")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Poplastestimate)
                    .HasColumnName("poplastestimate")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Salestaxid)
                    .HasColumnName("salestaxid")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Shortdesc)
                    .HasColumnName("shortdesc")
                    .HasMaxLength(100);

                entity.Property(e => e.Updated)
                    .HasColumnName("updated")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<MunicipalBoundariesCartography>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("municipal_boundaries_cartography_pkey");

                entity.ToTable("municipal_boundaries_cartography", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("municipal_boundaries_cartography_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasMaxLength(1);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<MunicipalitiesModifications>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("municipalities_modifications_pkey");

                entity.ToTable("municipalities_modifications", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("municipalities_modifications_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.CreatedDate)
                    .HasColumnName("created_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.CreatedUser)
                    .HasColumnName("created_user")
                    .HasMaxLength(255);

                entity.Property(e => e.DateIn)
                    .HasColumnName("date_in")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.DateOut)
                    .HasColumnName("date_out")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.DocLoc)
                    .HasColumnName("doc_loc")
                    .HasMaxLength(255);

                entity.Property(e => e.DocName)
                    .HasColumnName("doc_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.LastEditedDate)
                    .HasColumnName("last_edited_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LastEditedUser)
                    .HasColumnName("last_edited_user")
                    .HasMaxLength(255);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.UpdateType)
                    .HasColumnName("update_type")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<NationalGrid>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("national_grid_pkey");

                entity.ToTable("national_grid", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("national_grid_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasMaxLength(5);

                entity.Property(e => e.Grid100k)
                    .HasColumnName("grid100k")
                    .HasMaxLength(2);

                entity.Property(e => e.Grid1mil)
                    .HasColumnName("grid1mil")
                    .HasMaxLength(3);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Usng)
                    .HasColumnName("usng")
                    .HasMaxLength(15);
            });

            modelBuilder.Entity<NaturalGasServiceAreasApprox>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("natural_gas_service_areas_approx_pkey");

                entity.ToTable("natural_gas_service_areas_approx", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("natural_gas_service_areas_approx_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Provider)
                    .HasColumnName("provider")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(16);

                entity.Property(e => e.Weblink)
                    .HasColumnName("weblink")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<NavajoChapters>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("navajo_chapters_pkey");

                entity.ToTable("navajo_chapters", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("navajo_chapters_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aitsce)
                    .HasColumnName("aitsce")
                    .HasMaxLength(3);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(5);

                entity.Property(e => e.Fipscode)
                    .HasColumnName("fipscode")
                    .HasMaxLength(5);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(66);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<NcaPropSanJuanCounty>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("nca_prop_san_juan_county_pkey");

                entity.ToTable("nca_prop_san_juan_county", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("nca_prop_san_juan_county_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Ncaname)
                    .HasColumnName("ncaname")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<NhdPointsAll>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("nhd_points_all_pkey");

                entity.ToTable("nhd_points_all", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("nhd_points_all_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FcodeText)
                    .HasColumnName("fcode_text")
                    .HasMaxLength(30);

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FtypeText)
                    .HasColumnName("ftype_text")
                    .HasMaxLength(30);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(10);

                entity.Property(e => e.GnisName)
                    .HasColumnName("gnis_name")
                    .HasMaxLength(65);

                entity.Property(e => e.Inutah)
                    .HasColumnName("inutah")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.PermanentIdentifier)
                    .HasColumnName("permanent_identifier")
                    .HasMaxLength(40);

                entity.Property(e => e.Reachcode)
                    .HasColumnName("reachcode")
                    .HasMaxLength(14);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<NwsForecastZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("nws_forecast_zones_pkey");

                entity.ToTable("nws_forecast_zones", "climate");

                entity.HasIndex(e => e.Shape)
                    .HasName("nws_forecast_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Ajoin0)
                    .HasColumnName("ajoin0")
                    .HasMaxLength(6);

                entity.Property(e => e.Ajoin1)
                    .HasColumnName("ajoin1")
                    .HasMaxLength(6);

                entity.Property(e => e.Cwa)
                    .HasColumnName("cwa")
                    .HasMaxLength(9);

                entity.Property(e => e.FeArea)
                    .HasColumnName("fe_area")
                    .HasMaxLength(2);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Shortname)
                    .HasColumnName("shortname")
                    .HasMaxLength(32);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.StateZone)
                    .HasColumnName("state_zone")
                    .HasMaxLength(5);

                entity.Property(e => e.TimeZone)
                    .HasColumnName("time_zone")
                    .HasMaxLength(2);

                entity.Property(e => e.Zone)
                    .HasColumnName("zone")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<OilGasFields>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("oil_gas_fields_pkey");

                entity.ToTable("oil_gas_fields", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("oil_gas_fields_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(25);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(7);

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasMaxLength(6);

                entity.Property(e => e.DiscWell)
                    .HasColumnName("disc_well")
                    .HasMaxLength(30);

                entity.Property(e => e.Fieldname)
                    .HasColumnName("fieldname")
                    .HasMaxLength(35);

                entity.Property(e => e.Fieldnum)
                    .HasColumnName("fieldnum")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Form3)
                    .HasColumnName("form_3")
                    .HasMaxLength(6);

                entity.Property(e => e.Form4)
                    .HasColumnName("form_4")
                    .HasMaxLength(6);

                entity.Property(e => e.From2)
                    .HasColumnName("from_2")
                    .HasMaxLength(6);

                entity.Property(e => e.Loaddate)
                    .HasColumnName("loaddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ProdForm)
                    .HasColumnName("prod_form_")
                    .HasMaxLength(6);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(11);
            });

            modelBuilder.Entity<OilGasWells>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("oil_gas_wells_pkey");

                entity.ToTable("oil_gas_wells", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("oil_gas_wells_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Abandondate)
                    .HasColumnName("abandondate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Api)
                    .HasColumnName("api")
                    .HasMaxLength(32);

                entity.Property(e => e.Confidential)
                    .HasColumnName("confidential")
                    .HasMaxLength(3);

                entity.Property(e => e.Confreldate)
                    .HasColumnName("confreldate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.CoordssurfE)
                    .HasColumnName("coordssurf_e")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.CoordssurfN)
                    .HasColumnName("coordssurf_n")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.DirDirect)
                    .HasColumnName("dir_direct")
                    .HasMaxLength(1);

                entity.Property(e => e.DirEw)
                    .HasColumnName("dir_ew")
                    .HasMaxLength(12);

                entity.Property(e => e.DirHoriz)
                    .HasColumnName("dir_horiz")
                    .HasMaxLength(1);

                entity.Property(e => e.DirNs)
                    .HasColumnName("dir_ns")
                    .HasMaxLength(12);

                entity.Property(e => e.DirVert)
                    .HasColumnName("dir_vert")
                    .HasMaxLength(1);

                entity.Property(e => e.DrkfloorElev)
                    .HasColumnName("drkfloor_elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fieldname)
                    .HasColumnName("fieldname")
                    .HasMaxLength(55);

                entity.Property(e => e.Footageew)
                    .HasColumnName("footageew")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Footagens)
                    .HasColumnName("footagens")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Gisstatustype)
                    .HasColumnName("gisstatustype")
                    .HasMaxLength(3);

                entity.Property(e => e.GroundElev)
                    .HasColumnName("ground_elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Indiantribe)
                    .HasColumnName("indiantribe")
                    .HasMaxLength(50);

                entity.Property(e => e.Jurisdiction)
                    .HasColumnName("jurisdiction")
                    .HasMaxLength(6);

                entity.Property(e => e.KellyElev)
                    .HasColumnName("kelly_elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Leasenumber)
                    .HasColumnName("leasenumber")
                    .HasMaxLength(25);

                entity.Property(e => e.Leasetype)
                    .HasColumnName("leasetype")
                    .HasMaxLength(7);

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(30);

                entity.Property(e => e.MultiLats)
                    .HasColumnName("multi_lats")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Operator)
                    .HasColumnName("operator")
                    .HasMaxLength(100);

                entity.Property(e => e.Operatorno)
                    .HasColumnName("operatorno")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Origcompldate)
                    .HasColumnName("origcompldate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Originalfieldtype)
                    .HasColumnName("originalfieldtype")
                    .HasMaxLength(11);

                entity.Property(e => e.Qtrqtr)
                    .HasColumnName("qtrqtr")
                    .HasMaxLength(12);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rangedir)
                    .HasColumnName("rangedir")
                    .HasMaxLength(1);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Surfaceowner)
                    .HasColumnName("surfaceowner")
                    .HasMaxLength(7);

                entity.Property(e => e.TotcumGas)
                    .HasColumnName("totcum_gas")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.TotcumOil)
                    .HasColumnName("totcum_oil")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.TotcumWater)
                    .HasColumnName("totcum_water")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Townshipdir)
                    .HasColumnName("townshipdir")
                    .HasMaxLength(1);

                entity.Property(e => e.Unitname)
                    .HasColumnName("unitname")
                    .HasMaxLength(255);

                entity.Property(e => e.Utmzone)
                    .HasColumnName("utmzone")
                    .HasMaxLength(2);

                entity.Property(e => e.Wellname)
                    .HasColumnName("wellname")
                    .HasMaxLength(70);

                entity.Property(e => e.Wellstatus)
                    .HasColumnName("wellstatus")
                    .HasMaxLength(50);

                entity.Property(e => e.Welltype)
                    .HasColumnName("welltype")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<OilGasWellsDownHoles>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("oil_gas_wells_down_holes_pkey");

                entity.ToTable("oil_gas_wells_down_holes", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("oil_gas_wells_down_holes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Api)
                    .HasColumnName("api")
                    .HasMaxLength(32);

                entity.Property(e => e.Constructnumber)
                    .HasColumnName("constructnumber")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Constructstatus)
                    .HasColumnName("constructstatus")
                    .HasMaxLength(20);

                entity.Property(e => e.Constructtype)
                    .HasColumnName("constructtype")
                    .HasMaxLength(11);

                entity.Property(e => e.CoordsbhE)
                    .HasColumnName("coordsbh_e")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.CoordsbhN)
                    .HasColumnName("coordsbh_n")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DirEw)
                    .HasColumnName("dir_ew")
                    .HasMaxLength(12);

                entity.Property(e => e.DirNs)
                    .HasColumnName("dir_ns")
                    .HasMaxLength(12);

                entity.Property(e => e.Elevationtype)
                    .HasColumnName("elevationtype")
                    .HasMaxLength(50);

                entity.Property(e => e.Footageew)
                    .HasColumnName("footageew")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Footagens)
                    .HasColumnName("footagens")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Locid)
                    .HasColumnName("locid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Loctype)
                    .HasColumnName("loctype")
                    .HasMaxLength(10);

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(30);

                entity.Property(e => e.Qtrqtr)
                    .HasColumnName("qtrqtr")
                    .HasMaxLength(12);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Rangedir)
                    .HasColumnName("rangedir")
                    .HasMaxLength(1);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Townshipdir)
                    .HasColumnName("townshipdir")
                    .HasMaxLength(1);

                entity.Property(e => e.Utmzone)
                    .HasColumnName("utmzone")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<OilGasWellsPaths>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("oil_gas_wells_paths_pkey");

                entity.ToTable("oil_gas_wells_paths", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("oil_gas_wells_paths_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Api)
                    .HasColumnName("api")
                    .HasMaxLength(32);

                entity.Property(e => e.Constructnumber)
                    .HasColumnName("constructnumber")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Constructstatus)
                    .HasColumnName("constructstatus")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<ParksLocal>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("parks_local_pkey");

                entity.ToTable("parks_local", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("parks_local_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(75);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(150);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(50);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(75);
            });

            modelBuilder.Entity<PermittedUraniumMines>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("permitted_uranium_mines_pkey");

                entity.ToTable("permitted_uranium_mines", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("permitted_uranium_mines_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AcrRel)
                    .HasColumnName("acr_rel")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(25);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(10);

                entity.Property(e => e.Easting)
                    .HasColumnName("easting")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(11);

                entity.Property(e => e.MinOwn)
                    .HasColumnName("min_own")
                    .HasMaxLength(12);

                entity.Property(e => e.MinType)
                    .HasColumnName("min_type")
                    .HasMaxLength(17);

                entity.Property(e => e.Mineid)
                    .HasColumnName("mineid")
                    .HasMaxLength(10);

                entity.Property(e => e.Msu)
                    .HasColumnName("msu")
                    .HasMaxLength(6);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Northing)
                    .HasColumnName("northing")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Num)
                    .HasColumnName("num")
                    .HasMaxLength(6);

                entity.Property(e => e.OperId)
                    .HasColumnName("oper_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Operator)
                    .HasColumnName("operator")
                    .HasMaxLength(30);

                entity.Property(e => e.PermStat)
                    .HasColumnName("perm_stat")
                    .HasMaxLength(14);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(34);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(9);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(13);

                entity.Property(e => e.SurfOwn)
                    .HasColumnName("surf_own")
                    .HasMaxLength(13);

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(13);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(7);
            });

            modelBuilder.Entity<PhysiographicSubdivisions>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("physiographic_subdivisions_pkey");

                entity.ToTable("physiographic_subdivisions", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("physiographic_subdivisions_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(40);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Subdivision)
                    .HasColumnName("subdivision")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<PiuteCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("piute_county_parcels_pkey");

                entity.ToTable("piute_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("piute_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<PliAreasProposalJan16>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("pli_areas_proposal_jan16_pkey");

                entity.ToTable("pli_areas_proposal_jan16", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("pli_areas_proposal_jan16_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acreage)
                    .HasColumnName("acreage")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Class)
                    .HasColumnName("class")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.DesignationProposed)
                    .HasColumnName("designation_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.NameProposed)
                    .HasColumnName("name_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<PliLinesProposalJan16>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("pli_lines_proposal_jan16_pkey");

                entity.ToTable("pli_lines_proposal_jan16", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("pli_lines_proposal_jan16_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Class)
                    .HasColumnName("class")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.DesignationProposed)
                    .HasColumnName("designation_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.Length)
                    .HasColumnName("length")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.NameProposed)
                    .HasColumnName("name_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<PlssEditTracker>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_edit_tracker_pkey");

                entity.ToTable("plss_edit_tracker", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_edit_tracker_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.EditDate)
                    .HasColumnName("edit_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Edits)
                    .HasColumnName("edits")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(20);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(75);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(255);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<PlssPointAgrc>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_point_agrc_pkey");

                entity.ToTable("plss_point_agrc", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_point_agrc_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoordSource)
                    .HasColumnName("coord_source")
                    .HasMaxLength(150);

                entity.Property(e => e.Coordmeth)
                    .HasColumnName("coordmeth")
                    .HasMaxLength(25);

                entity.Property(e => e.Coordproc)
                    .HasColumnName("coordproc")
                    .HasMaxLength(20);

                entity.Property(e => e.Coordsys)
                    .HasColumnName("coordsys")
                    .HasMaxLength(20);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.DisplayGrp)
                    .HasColumnName("display_grp")
                    .HasMaxLength(20);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Errorx)
                    .HasColumnName("errorx")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Errory)
                    .HasColumnName("errory")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Errorz)
                    .HasColumnName("errorz")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Hdatum)
                    .HasColumnName("hdatum")
                    .HasMaxLength(20);

                entity.Property(e => e.Iscontrol)
                    .HasColumnName("iscontrol")
                    .HasMaxLength(3);

                entity.Property(e => e.Ismonument)
                    .HasColumnName("ismonument")
                    .HasMaxLength(3);

                entity.Property(e => e.LatNad83)
                    .HasColumnName("lat_nad83")
                    .HasMaxLength(25);

                entity.Property(e => e.Local1)
                    .HasColumnName("local1")
                    .HasMaxLength(25);

                entity.Property(e => e.Local2)
                    .HasColumnName("local2")
                    .HasMaxLength(25);

                entity.Property(e => e.Local3)
                    .HasColumnName("local3")
                    .HasMaxLength(25);

                entity.Property(e => e.Local4)
                    .HasColumnName("local4")
                    .HasMaxLength(25);

                entity.Property(e => e.LongNad83)
                    .HasColumnName("long_nad83")
                    .HasMaxLength(25);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.PointCategory)
                    .HasColumnName("point_category")
                    .HasMaxLength(20);

                entity.Property(e => e.Pointid)
                    .HasColumnName("pointid")
                    .HasMaxLength(24);

                entity.Property(e => e.Pointlab)
                    .HasColumnName("pointlab")
                    .HasMaxLength(6);

                entity.Property(e => e.Rely)
                    .HasColumnName("rely")
                    .HasMaxLength(15);

                entity.Property(e => e.Reviseddate)
                    .HasColumnName("reviseddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Steward1)
                    .HasColumnName("steward1")
                    .HasMaxLength(50);

                entity.Property(e => e.Steward2)
                    .HasColumnName("steward2")
                    .HasMaxLength(50);

                entity.Property(e => e.TiesheetName)
                    .HasColumnName("tiesheet_name")
                    .HasMaxLength(40);

                entity.Property(e => e.Vdatum)
                    .HasColumnName("vdatum")
                    .HasMaxLength(20);

                entity.Property(e => e.Xcoord)
                    .HasColumnName("xcoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ycoord)
                    .HasColumnName("ycoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zcoord)
                    .HasColumnName("zcoord")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<PlssPointGcdb>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_point_gcdb_pkey");

                entity.ToTable("plss_point_gcdb", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_point_gcdb_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Coordmeth)
                    .HasColumnName("coordmeth")
                    .HasMaxLength(25);

                entity.Property(e => e.Coordproc)
                    .HasColumnName("coordproc")
                    .HasMaxLength(20);

                entity.Property(e => e.Coordsys)
                    .HasColumnName("coordsys")
                    .HasMaxLength(20);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Errorx)
                    .HasColumnName("errorx")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Errory)
                    .HasColumnName("errory")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Errorz)
                    .HasColumnName("errorz")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Hdatum)
                    .HasColumnName("hdatum")
                    .HasMaxLength(20);

                entity.Property(e => e.Local1)
                    .HasColumnName("local1")
                    .HasMaxLength(25);

                entity.Property(e => e.Local2)
                    .HasColumnName("local2")
                    .HasMaxLength(25);

                entity.Property(e => e.Local3)
                    .HasColumnName("local3")
                    .HasMaxLength(25);

                entity.Property(e => e.Local4)
                    .HasColumnName("local4")
                    .HasMaxLength(25);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Pointid)
                    .HasColumnName("pointid")
                    .HasMaxLength(24);

                entity.Property(e => e.Pointlab)
                    .HasColumnName("pointlab")
                    .HasMaxLength(6);

                entity.Property(e => e.Rely)
                    .HasColumnName("rely")
                    .HasMaxLength(15);

                entity.Property(e => e.Reviseddate)
                    .HasColumnName("reviseddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Steward1)
                    .HasColumnName("steward1")
                    .HasMaxLength(50);

                entity.Property(e => e.Steward2)
                    .HasColumnName("steward2")
                    .HasMaxLength(50);

                entity.Property(e => e.Vdatum)
                    .HasColumnName("vdatum")
                    .HasMaxLength(20);

                entity.Property(e => e.Xcoord)
                    .HasColumnName("xcoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ycoord)
                    .HasColumnName("ycoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zcoord)
                    .HasColumnName("zcoord")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<PlssQuarterQuarterSectionsGcdb>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_quarter_quarter_sections_gcdb_pkey");

                entity.ToTable("plss_quarter_quarter_sections_gcdb", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_quarter_quarter_sections_gcdb_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Frstdivid)
                    .HasColumnName("frstdivid")
                    .HasMaxLength(25);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Secdivid)
                    .HasColumnName("secdivid")
                    .HasMaxLength(50);

                entity.Property(e => e.Secdivlab)
                    .HasColumnName("secdivlab")
                    .HasMaxLength(50);

                entity.Property(e => e.Secdivno)
                    .HasColumnName("secdivno")
                    .HasMaxLength(50);

                entity.Property(e => e.Secdivsuf)
                    .HasColumnName("secdivsuf")
                    .HasMaxLength(10);

                entity.Property(e => e.Secdivtxt)
                    .HasColumnName("secdivtxt")
                    .HasMaxLength(50);

                entity.Property(e => e.Secdivtyp)
                    .HasColumnName("secdivtyp")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Survtyp)
                    .HasColumnName("survtyp")
                    .HasMaxLength(2);

                entity.Property(e => e.Survtyptxt)
                    .HasColumnName("survtyptxt")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PlssQuarterSectionsGcdb>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_quarter_sections_gcdb_pkey");

                entity.ToTable("plss_quarter_sections_gcdb", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_quarter_sections_gcdb_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Qsection)
                    .HasColumnName("qsection")
                    .HasMaxLength(16);

                entity.Property(e => e.Refgriddup)
                    .HasColumnName("refgriddup")
                    .HasMaxLength(2);

                entity.Property(e => e.Refgridno)
                    .HasColumnName("refgridno")
                    .HasMaxLength(20);

                entity.Property(e => e.Refgridnom)
                    .HasColumnName("refgridnom")
                    .HasMaxLength(4);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<PlssSectionLookup>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_section_lookup_pkey");

                entity.ToTable("plss_section_lookup", "cadastre");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Pairswith)
                    .HasColumnName("pairswith")
                    .HasMaxLength(500);

                entity.Property(e => e.Trname)
                    .HasColumnName("trname")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<PlssSectionsGcdb>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_sections_gcdb_pkey");

                entity.ToTable("plss_sections_gcdb", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_sections_gcdb_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Basemeridian)
                    .HasColumnName("basemeridian")
                    .HasMaxLength(2);

                entity.Property(e => e.Frstdivdup)
                    .HasColumnName("frstdivdup")
                    .HasMaxLength(1);

                entity.Property(e => e.Frstdivid)
                    .HasColumnName("frstdivid")
                    .HasMaxLength(22);

                entity.Property(e => e.Frstdivlab)
                    .HasColumnName("frstdivlab")
                    .HasMaxLength(15);

                entity.Property(e => e.Frstdivno)
                    .HasColumnName("frstdivno")
                    .HasMaxLength(3);

                entity.Property(e => e.Frstdivtxt)
                    .HasColumnName("frstdivtxt")
                    .HasMaxLength(50);

                entity.Property(e => e.Frstdivtyp)
                    .HasColumnName("frstdivtyp")
                    .HasMaxLength(2);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(20);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Qnum)
                    .HasColumnName("qnum")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(5);

                entity.Property(e => e.Rnum)
                    .HasColumnName("rnum")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Snum)
                    .HasColumnName("snum")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Survtyp)
                    .HasColumnName("survtyp")
                    .HasMaxLength(2);

                entity.Property(e => e.Survtyptxt)
                    .HasColumnName("survtyptxt")
                    .HasMaxLength(50);

                entity.Property(e => e.Tnum)
                    .HasColumnName("tnum")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<PlssTownshipAndRangeLookup>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_township_and_range_lookup_pkey");

                entity.ToTable("plss_township_and_range_lookup", "cadastre");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Pairswith)
                    .HasColumnName("pairswith")
                    .HasMaxLength(500);

                entity.Property(e => e.Torrname)
                    .HasColumnName("torrname")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<PlssTownshipsGcdb>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("plss_townships_gcdb_pkey");

                entity.ToTable("plss_townships_gcdb", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("plss_townships_gcdb_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Basemeridian)
                    .HasColumnName("basemeridian")
                    .HasMaxLength(2);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(20);

                entity.Property(e => e.Plssid)
                    .HasColumnName("plssid")
                    .HasMaxLength(16);

                entity.Property(e => e.Prinmer)
                    .HasColumnName("prinmer")
                    .HasMaxLength(40);

                entity.Property(e => e.Prinmercd)
                    .HasColumnName("prinmercd")
                    .HasMaxLength(2);

                entity.Property(e => e.Qnum)
                    .HasColumnName("qnum")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(5);

                entity.Property(e => e.Rangedir)
                    .HasColumnName("rangedir")
                    .HasMaxLength(1);

                entity.Property(e => e.Rangefrac)
                    .HasColumnName("rangefrac")
                    .HasMaxLength(1);

                entity.Property(e => e.Rangeno)
                    .HasColumnName("rangeno")
                    .HasMaxLength(3);

                entity.Property(e => e.Rnum)
                    .HasColumnName("rnum")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Secsrvname)
                    .HasColumnName("secsrvname")
                    .HasMaxLength(60);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Srvname)
                    .HasColumnName("srvname")
                    .HasMaxLength(60);

                entity.Property(e => e.Stateabbr)
                    .HasColumnName("stateabbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Steward)
                    .HasColumnName("steward")
                    .HasMaxLength(50);

                entity.Property(e => e.Survtyp)
                    .HasColumnName("survtyp")
                    .HasMaxLength(2);

                entity.Property(e => e.Survtyptxt)
                    .HasColumnName("survtyptxt")
                    .HasMaxLength(50);

                entity.Property(e => e.Tnum)
                    .HasColumnName("tnum")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(5);

                entity.Property(e => e.Twnshpdir)
                    .HasColumnName("twnshpdir")
                    .HasMaxLength(1);

                entity.Property(e => e.Twnshpdpcd)
                    .HasColumnName("twnshpdpcd")
                    .HasMaxLength(1);

                entity.Property(e => e.Twnshpfrac)
                    .HasColumnName("twnshpfrac")
                    .HasMaxLength(1);

                entity.Property(e => e.Twnshplab)
                    .HasColumnName("twnshplab")
                    .HasMaxLength(20);

                entity.Property(e => e.Twnshpno)
                    .HasColumnName("twnshpno")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<PopulationBlockAreas2010Approx>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("population_block_areas_2010_approx_pkey");

                entity.ToTable("population_block_areas_2010_approx", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("population_block_areas_2010_approx_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Approxhouseholds)
                    .HasColumnName("approxhouseholds")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Approxpopulation)
                    .HasColumnName("approxpopulation")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(25);

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Srccenblk10)
                    .HasColumnName("srccenblk10")
                    .HasMaxLength(15);
            });

            modelBuilder.Entity<PopulationPlacePoints2010Approx>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("population_place_points_2010_approx_pkey");

                entity.ToTable("population_place_points_2010_approx", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("population_place_points_2010_approx_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Approxpopulation)
                    .HasColumnName("approxpopulation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(10);

                entity.Property(e => e.Countyseat)
                    .HasColumnName("countyseat")
                    .HasMaxLength(3);

                entity.Property(e => e.Countyseatlabel)
                    .HasColumnName("countyseatlabel")
                    .HasMaxLength(15);

                entity.Property(e => e.Incorporated)
                    .HasColumnName("incorporated")
                    .HasMaxLength(10);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<PortsOfEntry>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ports_of_entry_pkey");

                entity.ToTable("ports_of_entry", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("ports_of_entry_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(254);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(254);

                entity.Property(e => e.Email)
                    .HasColumnName("email")
                    .HasMaxLength(254);

                entity.Property(e => e.Fax)
                    .HasColumnName("fax")
                    .HasMaxLength(254);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(254);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(254);

                entity.Property(e => e.Supervisor)
                    .HasColumnName("supervisor")
                    .HasMaxLength(254);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<PostOffices>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("post_offices_pkey");

                entity.ToTable("post_offices", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("post_offices_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(25);

                entity.Property(e => e.Street)
                    .HasColumnName("street")
                    .HasMaxLength(25);

                entity.Property(e => e.Town)
                    .HasColumnName("town")
                    .HasMaxLength(25);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(25);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<PowerPlantsCo2>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("power_plants_co2_pkey");

                entity.ToTable("power_plants_co2", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("power_plants_co2_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Co2AnnualTonnes)
                    .HasColumnName("co2_annual_tonnes")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Co2AnnualTons)
                    .HasColumnName("co2_annual_tons")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DataAdjusted)
                    .HasColumnName("data_adjusted")
                    .HasMaxLength(20);

                entity.Property(e => e.FuelAbbr)
                    .HasColumnName("fuel_abbr")
                    .HasMaxLength(12);

                entity.Property(e => e.Fuelcode)
                    .HasColumnName("fuelcode")
                    .HasMaxLength(10);

                entity.Property(e => e.GenFuel)
                    .HasColumnName("gen_fuel")
                    .HasMaxLength(50);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.OrisCode)
                    .HasColumnName("oris_code")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Partnership)
                    .HasColumnName("partnership")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SpecFuel)
                    .HasColumnName("spec_fuel")
                    .HasMaxLength(50);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(50);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(50);

                entity.Property(e => e.Variance)
                    .HasColumnName("variance")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<PrimitivePropEmeryCounty>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("primitive_prop_emery_county_pkey");

                entity.ToTable("primitive_prop_emery_county", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("primitive_prop_emery_county_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<PublicLandsInitiativeHr5780AreasBlm2016>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("public_lands_initiative_hr5780_areas_blm_2016_pkey");

                entity.ToTable("public_lands_initiative_hr5780_areas_blm_2016", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("public_lands_initiative_hr5780_areas_blm_2016_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acreage)
                    .HasColumnName("acreage")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Class)
                    .HasColumnName("class")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.DataSource)
                    .HasColumnName("data_source")
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationProposed)
                    .HasColumnName("designation_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationSource)
                    .HasColumnName("designation_source")
                    .HasMaxLength(50);

                entity.Property(e => e.NameProposed)
                    .HasColumnName("name_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.NameSource)
                    .HasColumnName("name_source")
                    .HasMaxLength(50);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<PublicLandsInitiativeHr5780LinesBlm2016>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("public_lands_initiative_hr5780_lines_blm_2016_pkey");

                entity.ToTable("public_lands_initiative_hr5780_lines_blm_2016", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("public_lands_initiative_hr5780_lines_blm_2016_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Class)
                    .HasColumnName("class")
                    .HasMaxLength(30);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(30);

                entity.Property(e => e.DataSource)
                    .HasColumnName("data_source")
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationProposed)
                    .HasColumnName("designation_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.DesignationSource)
                    .HasColumnName("designation_source")
                    .HasMaxLength(50);

                entity.Property(e => e.Length)
                    .HasColumnName("length")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.NameProposed)
                    .HasColumnName("name_proposed")
                    .HasMaxLength(50);

                entity.Property(e => e.NameSource)
                    .HasColumnName("name_source")
                    .HasMaxLength(50);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<PublicSafetyAnsweringPointBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("public_safety_answering_point_boundaries_pkey");

                entity.ToTable("public_safety_answering_point_boundaries", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("public_safety_answering_point_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.DpsPsapName)
                    .HasColumnName("dps_psap_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Ecatsid)
                    .HasColumnName("ecatsid")
                    .HasMaxLength(5);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.PhoneNumber)
                    .HasColumnName("phone_number")
                    .HasMaxLength(14);

                entity.Property(e => e.PsapJuris)
                    .HasColumnName("psap_juris")
                    .HasMaxLength(30);

                entity.Property(e => e.PsapName)
                    .HasColumnName("psap_name")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Text911)
                    .HasColumnName("text911")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<PublicSafetyAnsweringPointLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("public_safety_answering_point_locations_pkey");

                entity.ToTable("public_safety_answering_point_locations", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("public_safety_answering_point_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(50);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(50);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(50);

                entity.Property(e => e.DpsPsapName)
                    .HasColumnName("dps_psap_name")
                    .HasMaxLength(100);

                entity.Property(e => e.PhoneNumber)
                    .HasColumnName("phone_number")
                    .HasMaxLength(14);

                entity.Property(e => e.PsapName)
                    .HasColumnName("psap_name")
                    .HasMaxLength(100);

                entity.Property(e => e.PsapType)
                    .HasColumnName("psap_type")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(11);

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<QuaternaryFaults>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("quaternary_faults_pkey");

                entity.ToTable("quaternary_faults", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("quaternary_faults_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Dipdirection)
                    .HasColumnName("dipdirection")
                    .HasMaxLength(50);

                entity.Property(e => e.Faultage)
                    .HasColumnName("faultage")
                    .HasMaxLength(50);

                entity.Property(e => e.Faultclass)
                    .HasColumnName("faultclass")
                    .HasMaxLength(50);

                entity.Property(e => e.Faultname)
                    .HasColumnName("faultname")
                    .HasMaxLength(60);

                entity.Property(e => e.Faultnum)
                    .HasColumnName("faultnum")
                    .HasMaxLength(50);

                entity.Property(e => e.Faultzone)
                    .HasColumnName("faultzone")
                    .HasMaxLength(50);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(100);

                entity.Property(e => e.Mappedscale)
                    .HasColumnName("mappedscale")
                    .HasMaxLength(15);

                entity.Property(e => e.Mappingconstraint)
                    .HasColumnName("mappingconstraint")
                    .HasMaxLength(50);

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(50);

                entity.Property(e => e.Override).HasColumnName("override");

                entity.Property(e => e.Ruleid)
                    .HasColumnName("ruleid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Sectionname)
                    .HasColumnName("sectionname")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Sliprate)
                    .HasColumnName("sliprate")
                    .HasMaxLength(50);

                entity.Property(e => e.Slipsense)
                    .HasColumnName("slipsense")
                    .HasMaxLength(50);

                entity.Property(e => e.Strandname)
                    .HasColumnName("strandname")
                    .HasMaxLength(50);

                entity.Property(e => e.Summary)
                    .HasColumnName("summary")
                    .HasMaxLength(2000);

                entity.Property(e => e.UsgsLink)
                    .HasColumnName("usgs_link")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<QuaternaryVolcanicFlow>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("quaternary_volcanic_flow_pkey");

                entity.ToTable("quaternary_volcanic_flow", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("quaternary_volcanic_flow_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Age)
                    .HasColumnName("age")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Feature)
                    .HasColumnName("feature")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Locnum)
                    .HasColumnName("locnum")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<QuaternaryVolcanicVents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("quaternary_volcanic_vents_pkey");

                entity.ToTable("quaternary_volcanic_vents", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("quaternary_volcanic_vents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Age)
                    .HasColumnName("age")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Feature)
                    .HasColumnName("feature")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Locnum)
                    .HasColumnName("locnum")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<RailroadMileposts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("railroad_mileposts_pkey");

                entity.ToTable("railroad_mileposts", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("railroad_mileposts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Division)
                    .HasColumnName("division")
                    .HasMaxLength(255);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(30);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Lon)
                    .HasColumnName("lon")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.RrMilepos)
                    .HasColumnName("rr_milepos")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<Railroads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("railroads_pkey");

                entity.ToTable("railroads", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("railroads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Abandoned)
                    .HasColumnName("abandoned")
                    .HasMaxLength(1);

                entity.Property(e => e.Coarse)
                    .HasColumnName("coarse")
                    .HasMaxLength(2);

                entity.Property(e => e.Division)
                    .HasColumnName("division")
                    .HasMaxLength(50);

                entity.Property(e => e.Fips5)
                    .HasColumnName("fips5")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Iscommuter)
                    .HasColumnName("iscommuter")
                    .HasMaxLength(2);

                entity.Property(e => e.Layer)
                    .HasColumnName("layer")
                    .HasMaxLength(8);

                entity.Property(e => e.Mainline)
                    .HasColumnName("mainline")
                    .HasMaxLength(1);

                entity.Property(e => e.Military)
                    .HasColumnName("military")
                    .HasMaxLength(1);

                entity.Property(e => e.OhElec)
                    .HasColumnName("oh_elec")
                    .HasMaxLength(2);

                entity.Property(e => e.Operator)
                    .HasColumnName("operator")
                    .HasMaxLength(20);

                entity.Property(e => e.Passenger)
                    .HasColumnName("passenger")
                    .HasMaxLength(1);

                entity.Property(e => e.Railroad)
                    .HasColumnName("railroad")
                    .HasMaxLength(15);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(15);
            });

            modelBuilder.Entity<RetailCulinaryWaterServiceAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("retail_culinary_water_service_areas_pkey");

                entity.ToTable("retail_culinary_water_service_areas", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("retail_culinary_water_service_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Basin)
                    .HasColumnName("basin")
                    .HasMaxLength(30);

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(15);

                entity.Property(e => e.Datasource)
                    .HasColumnName("datasource")
                    .HasMaxLength(50);

                entity.Property(e => e.Dwname)
                    .HasColumnName("dwname")
                    .HasMaxLength(40);

                entity.Property(e => e.Dwsysnum)
                    .HasColumnName("dwsysnum")
                    .HasMaxLength(12);

                entity.Property(e => e.Editdate)
                    .HasColumnName("editdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editor)
                    .HasColumnName("editor")
                    .HasMaxLength(50);

                entity.Property(e => e.Endyear)
                    .HasColumnName("endyear")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(10);

                entity.Property(e => e.Laname)
                    .HasColumnName("laname")
                    .HasMaxLength(35);

                entity.Property(e => e.Lanum)
                    .HasColumnName("lanum")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Sourcedate)
                    .HasColumnName("sourcedate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(15);

                entity.Property(e => e.Subarea)
                    .HasColumnName("subarea")
                    .HasMaxLength(10);

                entity.Property(e => e.Subareanam)
                    .HasColumnName("subareanam")
                    .HasMaxLength(35);

                entity.Property(e => e.Systemtype)
                    .HasColumnName("systemtype")
                    .HasMaxLength(15);

                entity.Property(e => e.Waterresid)
                    .HasColumnName("waterresid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Wholesaler)
                    .HasColumnName("wholesaler")
                    .HasMaxLength(100);

                entity.Property(e => e.Wrename)
                    .HasColumnName("wrename")
                    .HasMaxLength(100);

                entity.Property(e => e.Wrid)
                    .HasColumnName("wrid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Wrlink)
                    .HasColumnName("wrlink")
                    .HasMaxLength(150);

                entity.Property(e => e.Wrname)
                    .HasColumnName("wrname")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<RichCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("rich_county_parcels_pkey");

                entity.ToTable("rich_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("rich_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasMaxLength(100);

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<RichCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("rich_county_parcels_lir_pkey");

                entity.ToTable("rich_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("rich_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<Roads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("roads_pkey");

                entity.ToTable("roads", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("roads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.A1Name)
                    .HasColumnName("a1_name")
                    .HasMaxLength(40);

                entity.Property(e => e.A1Postdir)
                    .HasColumnName("a1_postdir")
                    .HasMaxLength(2);

                entity.Property(e => e.A1Posttype)
                    .HasColumnName("a1_posttype")
                    .HasMaxLength(4);

                entity.Property(e => e.A1Predir)
                    .HasColumnName("a1_predir")
                    .HasMaxLength(2);

                entity.Property(e => e.A2Name)
                    .HasColumnName("a2_name")
                    .HasMaxLength(40);

                entity.Property(e => e.A2Postdir)
                    .HasColumnName("a2_postdir")
                    .HasMaxLength(2);

                entity.Property(e => e.A2Posttype)
                    .HasColumnName("a2_posttype")
                    .HasMaxLength(4);

                entity.Property(e => e.A2Predir)
                    .HasColumnName("a2_predir")
                    .HasMaxLength(2);

                entity.Property(e => e.Accesscode)
                    .HasColumnName("accesscode")
                    .HasMaxLength(1);

                entity.Property(e => e.AddrsysL)
                    .HasColumnName("addrsys_l")
                    .HasMaxLength(30);

                entity.Property(e => e.AddrsysR)
                    .HasColumnName("addrsys_r")
                    .HasMaxLength(30);

                entity.Property(e => e.AnName)
                    .HasColumnName("an_name")
                    .HasMaxLength(10);

                entity.Property(e => e.AnPostdir)
                    .HasColumnName("an_postdir")
                    .HasMaxLength(2);

                entity.Property(e => e.BikeL)
                    .HasColumnName("bike_l")
                    .HasMaxLength(4);

                entity.Property(e => e.BikeNotes)
                    .HasColumnName("bike_notes")
                    .HasMaxLength(50);

                entity.Property(e => e.BikePlnL)
                    .HasColumnName("bike_pln_l")
                    .HasMaxLength(15);

                entity.Property(e => e.BikePlnR)
                    .HasColumnName("bike_pln_r")
                    .HasMaxLength(15);

                entity.Property(e => e.BikeR)
                    .HasColumnName("bike_r")
                    .HasMaxLength(4);

                entity.Property(e => e.BikeRegpr)
                    .HasColumnName("bike_regpr")
                    .HasMaxLength(5);

                entity.Property(e => e.Cartocode)
                    .HasColumnName("cartocode")
                    .HasMaxLength(10);

                entity.Property(e => e.CountyL)
                    .HasColumnName("county_l")
                    .HasMaxLength(30);

                entity.Property(e => e.CountyR)
                    .HasColumnName("county_r")
                    .HasMaxLength(30);

                entity.Property(e => e.Created)
                    .HasColumnName("created")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Creator)
                    .HasColumnName("creator")
                    .HasMaxLength(20);

                entity.Property(e => e.Customtags)
                    .HasColumnName("customtags")
                    .HasMaxLength(1000);

                entity.Property(e => e.DotAadt)
                    .HasColumnName("dot_aadt")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.DotAadtyr)
                    .HasColumnName("dot_aadtyr")
                    .HasMaxLength(4);

                entity.Property(e => e.DotClass)
                    .HasColumnName("dot_class")
                    .HasMaxLength(1);

                entity.Property(e => e.DotFMile)
                    .HasColumnName("dot_f_mile")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DotFclass)
                    .HasColumnName("dot_fclass")
                    .HasMaxLength(20);

                entity.Property(e => e.DotHwynam)
                    .HasColumnName("dot_hwynam")
                    .HasMaxLength(15);

                entity.Property(e => e.DotOwnL)
                    .HasColumnName("dot_own_l")
                    .HasMaxLength(30);

                entity.Property(e => e.DotOwnR)
                    .HasColumnName("dot_own_r")
                    .HasMaxLength(30);

                entity.Property(e => e.DotRtname)
                    .HasColumnName("dot_rtname")
                    .HasMaxLength(11);

                entity.Property(e => e.DotRtpart)
                    .HasColumnName("dot_rtpart")
                    .HasMaxLength(3);

                entity.Property(e => e.DotSrftyp)
                    .HasColumnName("dot_srftyp")
                    .HasMaxLength(30);

                entity.Property(e => e.DotTMile)
                    .HasColumnName("dot_t_mile")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.DotThrulanes)
                    .HasColumnName("dot_thrulanes")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Editor)
                    .HasColumnName("editor")
                    .HasMaxLength(20);

                entity.Property(e => e.Effective)
                    .HasColumnName("effective")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ErCadZones)
                    .HasColumnName("er_cad_zones")
                    .HasMaxLength(255);

                entity.Property(e => e.EsnL)
                    .HasColumnName("esn_l")
                    .HasMaxLength(5);

                entity.Property(e => e.EsnR)
                    .HasColumnName("esn_r")
                    .HasMaxLength(5);

                entity.Property(e => e.Expire)
                    .HasColumnName("expire")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FromaddrL)
                    .HasColumnName("fromaddr_l")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FromaddrR)
                    .HasColumnName("fromaddr_r")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Fullname)
                    .HasColumnName("fullname")
                    .HasMaxLength(50);

                entity.Property(e => e.IncmuniL)
                    .HasColumnName("incmuni_l")
                    .HasMaxLength(30);

                entity.Property(e => e.IncmuniR)
                    .HasColumnName("incmuni_r")
                    .HasMaxLength(30);

                entity.Property(e => e.LocalUid)
                    .HasColumnName("local_uid")
                    .HasMaxLength(30);

                entity.Property(e => e.MsagcommL)
                    .HasColumnName("msagcomm_l")
                    .HasMaxLength(30);

                entity.Property(e => e.MsagcommR)
                    .HasColumnName("msagcomm_r")
                    .HasMaxLength(30);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.NbrhdcomL)
                    .HasColumnName("nbrhdcom_l")
                    .HasMaxLength(30);

                entity.Property(e => e.NbrhdcomR)
                    .HasColumnName("nbrhdcom_r")
                    .HasMaxLength(30);

                entity.Property(e => e.Oneway)
                    .HasColumnName("oneway")
                    .HasMaxLength(1);

                entity.Property(e => e.ParityL)
                    .HasColumnName("parity_l")
                    .HasMaxLength(1);

                entity.Property(e => e.ParityR)
                    .HasColumnName("parity_r")
                    .HasMaxLength(1);

                entity.Property(e => e.PedL)
                    .HasColumnName("ped_l")
                    .HasMaxLength(25);

                entity.Property(e => e.PedR)
                    .HasColumnName("ped_r")
                    .HasMaxLength(25);

                entity.Property(e => e.PostcommL)
                    .HasColumnName("postcomm_l")
                    .HasMaxLength(30);

                entity.Property(e => e.PostcommR)
                    .HasColumnName("postcomm_r")
                    .HasMaxLength(30);

                entity.Property(e => e.Postdir)
                    .HasColumnName("postdir")
                    .HasMaxLength(2);

                entity.Property(e => e.Posttype)
                    .HasColumnName("posttype")
                    .HasMaxLength(4);

                entity.Property(e => e.Predir)
                    .HasColumnName("predir")
                    .HasMaxLength(2);

                entity.Property(e => e.QuadrantL)
                    .HasColumnName("quadrant_l")
                    .HasMaxLength(2);

                entity.Property(e => e.QuadrantR)
                    .HasColumnName("quadrant_r")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(75);

                entity.Property(e => e.SpeedLmt)
                    .HasColumnName("speed_lmt")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.StateL)
                    .HasColumnName("state_l")
                    .HasMaxLength(2);

                entity.Property(e => e.StateR)
                    .HasColumnName("state_r")
                    .HasMaxLength(2);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(15);

                entity.Property(e => e.TdmnetL)
                    .HasColumnName("tdmnet_l")
                    .HasMaxLength(15);

                entity.Property(e => e.TdmnetR)
                    .HasColumnName("tdmnet_r")
                    .HasMaxLength(15);

                entity.Property(e => e.ToaddrL)
                    .HasColumnName("toaddr_l")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.ToaddrR)
                    .HasColumnName("toaddr_r")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UninccomL)
                    .HasColumnName("uninccom_l")
                    .HasMaxLength(30);

                entity.Property(e => e.UninccomR)
                    .HasColumnName("uninccom_r")
                    .HasMaxLength(30);

                entity.Property(e => e.UniqueId)
                    .HasColumnName("unique_id")
                    .HasMaxLength(75);

                entity.Property(e => e.Updated)
                    .HasColumnName("updated")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.UtahrdUid)
                    .HasColumnName("utahrd_uid")
                    .HasMaxLength(100);

                entity.Property(e => e.VertLevel)
                    .HasColumnName("vert_level")
                    .HasMaxLength(1);

                entity.Property(e => e.ZipcodeL)
                    .HasColumnName("zipcode_l")
                    .HasMaxLength(5);

                entity.Property(e => e.ZipcodeR)
                    .HasColumnName("zipcode_r")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<RoadsFreewayExits>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("roads_freeway_exits_pkey");

                entity.ToTable("roads_freeway_exits", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("roads_freeway_exits_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DotRtname)
                    .HasColumnName("dot_rtname")
                    .HasMaxLength(11);

                entity.Property(e => e.Exitname)
                    .HasColumnName("exitname")
                    .HasMaxLength(50);

                entity.Property(e => e.Exitnbr)
                    .HasColumnName("exitnbr")
                    .HasMaxLength(6);

                entity.Property(e => e.Rtname)
                    .HasColumnName("rtname")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<RuralTelecomBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("rural_telecom_boundaries_pkey");

                entity.ToTable("rural_telecom_boundaries", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("rural_telecom_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(40);

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(20);

                entity.Property(e => e.Layer)
                    .HasColumnName("layer")
                    .HasMaxLength(16);

                entity.Property(e => e.Provider)
                    .HasColumnName("provider")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TeleBound)
                    .HasColumnName("tele_bound")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Telephone)
                    .HasColumnName("telephone")
                    .HasMaxLength(16);

                entity.Property(e => e.Weblink)
                    .HasColumnName("weblink")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<SalesTaxZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("sales_tax_zones_pkey");

                entity.ToTable("sales_tax_zones", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("sales_tax_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Coname)
                    .HasColumnName("coname")
                    .HasMaxLength(50);

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Currrate)
                    .HasColumnName("currrate")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasMaxLength(5);

                entity.Property(e => e.Fipsconum)
                    .HasColumnName("fipsconum")
                    .HasMaxLength(3);

                entity.Property(e => e.Metroname)
                    .HasColumnName("metroname")
                    .HasMaxLength(50);

                entity.Property(e => e.Ratedate)
                    .HasColumnName("ratedate")
                    .HasMaxLength(10);

                entity.Property(e => e.Sdekey)
                    .HasColumnName("sdekey")
                    .HasMaxLength(16);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Shortdesc)
                    .HasColumnName("shortdesc")
                    .HasMaxLength(100);

                entity.Property(e => e.Special)
                    .HasColumnName("special")
                    .HasMaxLength(5);

                entity.Property(e => e.SstPod)
                    .HasColumnName("sst_pod")
                    .HasMaxLength(5);

                entity.Property(e => e.Taxdist)
                    .HasColumnName("taxdist")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<SaltLakeCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("salt_lake_county_parcels_pkey");

                entity.ToTable("salt_lake_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("salt_lake_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SaltLakeCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("salt_lake_county_parcels_lir_pkey");

                entity.ToTable("salt_lake_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("salt_lake_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.PropType)
                    .HasColumnName("prop_type")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<SanJuanCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("san_juan_county_parcels_pkey");

                entity.ToTable("san_juan_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("san_juan_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SanJuanCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("san_juan_county_parcels_lir_pkey");

                entity.ToTable("san_juan_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("san_juan_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<SanpeteCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("sanpete_county_parcels_pkey");

                entity.ToTable("sanpete_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("sanpete_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SanpeteCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("sanpete_county_parcels_lir_pkey");

                entity.ToTable("sanpete_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("sanpete_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<SchoolBoardDistricts2012>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("school_board_districts_2012_pkey");

                entity.ToTable("school_board_districts_2012", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("school_board_districts_2012_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SchoolBoardDistricts2015>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("school_board_districts_2015_pkey");

                entity.ToTable("school_board_districts_2015", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("school_board_districts_2015_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Board)
                    .HasColumnName("board")
                    .HasMaxLength(50);

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SchoolBoardDistrictsMembers>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("school_board_districts_members_pkey");

                entity.ToTable("school_board_districts_members", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("school_board_districts_members_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Board)
                    .HasColumnName("board")
                    .HasMaxLength(50);

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SchoolDistrictBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("school_district_boundaries_pkey");

                entity.ToTable("school_district_boundaries", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("school_district_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasMaxLength(1);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(60);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Totenroll)
                    .HasColumnName("totenroll")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<Schools>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("schools_pkey");

                entity.ToTable("schools", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("schools_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(60);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(35);

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasMaxLength(35);

                entity.Property(e => e.Edtype)
                    .HasColumnName("edtype")
                    .HasMaxLength(30);

                entity.Property(e => e.Gradehigh)
                    .HasColumnName("gradehigh")
                    .HasMaxLength(2);

                entity.Property(e => e.Gradelow)
                    .HasColumnName("gradelow")
                    .HasMaxLength(2);

                entity.Property(e => e.Leanum)
                    .HasColumnName("leanum")
                    .HasMaxLength(20);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(15);

                entity.Property(e => e.School)
                    .HasColumnName("school")
                    .HasMaxLength(60);

                entity.Property(e => e.Schoolnum)
                    .HasColumnName("schoolnum")
                    .HasMaxLength(25);

                entity.Property(e => e.Schooltype)
                    .HasColumnName("schooltype")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Web)
                    .HasColumnName("web")
                    .HasMaxLength(100);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<SemiPrimitivePropEmeryCounty>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("semi_primitive_prop_emery_county_pkey");

                entity.ToTable("semi_primitive_prop_emery_county", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("semi_primitive_prop_emery_county_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<SenateDistricts2002>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("senate_districts_2002_pkey");

                entity.ToTable("senate_districts_2002", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("senate_districts_2002_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SenateDistricts2012>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("senate_districts_2012_pkey");

                entity.ToTable("senate_districts_2012", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("senate_districts_2012_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SevierCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("sevier_county_parcels_pkey");

                entity.ToTable("sevier_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("sevier_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SevierCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("sevier_county_parcels_lir_pkey");

                entity.ToTable("sevier_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("sevier_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<ShallowGroundWater>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("shallow_ground_water_pkey");

                entity.ToTable("shallow_ground_water", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("shallow_ground_water_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Depth)
                    .HasColumnName("depth")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SkiAreaBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ski_area_boundaries_pkey");

                entity.ToTable("ski_area_boundaries", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("ski_area_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color4)
                    .HasColumnName("color4")
                    .HasMaxLength(1);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SkiAreaResortLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ski_area_resort_locations_pkey");

                entity.ToTable("ski_area_resort_locations", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("ski_area_resort_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<SkiLifts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ski_lifts_pkey");

                entity.ToTable("ski_lifts", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("ski_lifts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.BaseElevation)
                    .HasColumnName("base_elevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Capacity)
                    .HasColumnName("capacity")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.LiftName)
                    .HasColumnName("lift_name")
                    .HasMaxLength(30);

                entity.Property(e => e.Resort)
                    .HasColumnName("resort")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.TopElevation)
                    .HasColumnName("top_elevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<SkiTrailsXc>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ski_trails_xc_pkey");

                entity.ToTable("ski_trails_xc", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("ski_trails_xc_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(40);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.XcArea)
                    .HasColumnName("xc_area")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<SpringsNhd>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("springs_nhd_pkey");

                entity.ToTable("springs_nhd", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("springs_nhd_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FcodeText)
                    .HasColumnName("fcode_text")
                    .HasMaxLength(30);

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FtypeText)
                    .HasColumnName("ftype_text")
                    .HasMaxLength(30);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(10);

                entity.Property(e => e.GnisName)
                    .HasColumnName("gnis_name")
                    .HasMaxLength(65);

                entity.Property(e => e.Inutah)
                    .HasColumnName("inutah")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.PermanentIdentifier)
                    .HasColumnName("permanent_identifier")
                    .HasMaxLength(40);

                entity.Property(e => e.Reachcode)
                    .HasColumnName("reachcode")
                    .HasMaxLength(14);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<StateAgencyDispatch>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("state_agency_dispatch_pkey");

                entity.ToTable("state_agency_dispatch", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("state_agency_dispatch_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Dispatch)
                    .HasColumnName("dispatch")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<StateBoundary>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("state_boundary_pkey");

                entity.ToTable("state_boundary", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("state_boundary_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(16);
            });

            modelBuilder.Entity<StateCourtDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("state_court_districts_pkey");

                entity.ToTable("state_court_districts", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("state_court_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<StateFacilityLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("state_facility_locations_pkey");

                entity.ToTable("state_facility_locations", "society");

                entity.HasIndex(e => e.Shape)
                    .HasName("state_facility_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address1)
                    .HasColumnName("address1")
                    .HasMaxLength(37);

                entity.Property(e => e.Address2)
                    .HasColumnName("address2")
                    .HasMaxLength(9);

                entity.Property(e => e.Agencyid)
                    .HasColumnName("agencyid")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Build)
                    .HasColumnName("build_")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Buildname)
                    .HasColumnName("buildname")
                    .HasMaxLength(40);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(22);

                entity.Property(e => e.Classabrev)
                    .HasColumnName("classabrev")
                    .HasMaxLength(9);

                entity.Property(e => e.Constructd)
                    .HasColumnName("constructd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.CorrectionBldNr)
                    .HasColumnName("correction_bld_nr")
                    .HasMaxLength(50);

                entity.Property(e => e.Countyabre)
                    .HasColumnName("countyabre")
                    .HasMaxLength(9);

                entity.Property(e => e.Cvalue)
                    .HasColumnName("cvalue")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Organizati)
                    .HasColumnName("organizati")
                    .HasMaxLength(41);

                entity.Property(e => e.RiskManBldNr)
                    .HasColumnName("risk_man_bld_nr")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.RiskNumbe)
                    .HasColumnName("risk_numbe")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Squareft)
                    .HasColumnName("squareft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(1);

                entity.Property(e => e.Their1)
                    .HasColumnName("their_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(9);

                entity.Property(e => e.Usevalue)
                    .HasColumnName("usevalue")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Valratenz)
                    .HasColumnName("valratenz")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(14);
            });

            modelBuilder.Entity<Stations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("stations_pkey");

                entity.ToTable("stations", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Hydrologic)
                    .HasColumnName("hydrologic")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Inutah)
                    .HasColumnName("inutah")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Organizati)
                    .HasColumnName("organizati")
                    .HasMaxLength(254);

                entity.Property(e => e.PrimaryTy)
                    .HasColumnName("primary_ty")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StationId)
                    .HasColumnName("station_id")
                    .HasMaxLength(254);

                entity.Property(e => e.StationNa)
                    .HasColumnName("station_na")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<StreamGaugesNhd>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("stream_gauges_nhd_pkey");

                entity.ToTable("stream_gauges_nhd", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("stream_gauges_nhd_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Actionstage)
                    .HasColumnName("actionstage")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Comid)
                    .HasColumnName("comid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Currentstage)
                    .HasColumnName("currentstage")
                    .HasMaxLength(10);

                entity.Property(e => e.Eventdate)
                    .HasColumnName("eventdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Eventtype)
                    .HasColumnName("eventtype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Featureclassref)
                    .HasColumnName("featureclassref")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Featurecomid)
                    .HasColumnName("featurecomid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Featuredetailurl)
                    .HasColumnName("featuredetailurl")
                    .HasMaxLength(255);

                entity.Property(e => e.Flood)
                    .HasColumnName("flood")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.GaugeHeight)
                    .HasColumnName("gauge_height")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Guageid)
                    .HasColumnName("guageid")
                    .HasMaxLength(10);

                entity.Property(e => e.Guagename)
                    .HasColumnName("guagename")
                    .HasMaxLength(50);

                entity.Property(e => e.HighestForecast)
                    .HasColumnName("highest_forecast")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.HighestForecastDate)
                    .HasColumnName("highest_forecast_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LastForecast)
                    .HasColumnName("last_forecast")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LastForecastDate)
                    .HasColumnName("last_forecast_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LastUpdate)
                    .HasColumnName("last_update")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Lastactionorabove)
                    .HasColumnName("lastactionorabove")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Major)
                    .HasColumnName("major")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Measure)
                    .HasColumnName("measure")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Moderate)
                    .HasColumnName("moderate")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Offset)
                    .HasColumnName("offset")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Reachcode)
                    .HasColumnName("reachcode")
                    .HasMaxLength(60);

                entity.Property(e => e.Reachresolution)
                    .HasColumnName("reachresolution")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Reachsmdate)
                    .HasColumnName("reachsmdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SourceDatadesc)
                    .HasColumnName("source_datadesc")
                    .HasMaxLength(100);

                entity.Property(e => e.SourceFeatureid)
                    .HasColumnName("source_featureid")
                    .HasMaxLength(40);

                entity.Property(e => e.SourceOriginator)
                    .HasColumnName("source_originator")
                    .HasMaxLength(130);

                entity.Property(e => e.StreamFlow)
                    .HasColumnName("stream_flow")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<StreamMonitorSites>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("stream_monitor_sites_pkey");

                entity.ToTable("stream_monitor_sites", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("stream_monitor_sites_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Active)
                    .HasColumnName("active")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Station)
                    .HasColumnName("station")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<StreamsNhd>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("streams_nhd_pkey");

                entity.ToTable("streams_nhd", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("streams_nhd_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Enabled)
                    .HasColumnName("enabled")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Fcode)
                    .HasColumnName("fcode")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FcodeText)
                    .HasColumnName("fcode_text")
                    .HasMaxLength(50);

                entity.Property(e => e.Fdate)
                    .HasColumnName("fdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Flowdir)
                    .HasColumnName("flowdir")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Ftype)
                    .HasColumnName("ftype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.FtypeText)
                    .HasColumnName("ftype_text")
                    .HasMaxLength(25);

                entity.Property(e => e.GnisId)
                    .HasColumnName("gnis_id")
                    .HasMaxLength(10);

                entity.Property(e => e.GnisName)
                    .HasColumnName("gnis_name")
                    .HasMaxLength(65);

                entity.Property(e => e.Inutah)
                    .HasColumnName("inutah")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Ismajor)
                    .HasColumnName("ismajor")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Lengthkm)
                    .HasColumnName("lengthkm")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.PermanentIdentifier)
                    .HasColumnName("permanent_identifier")
                    .HasMaxLength(40);

                entity.Property(e => e.Reachcode)
                    .HasColumnName("reachcode")
                    .HasMaxLength(14);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Submerged)
                    .HasColumnName("submerged")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.WbareaPermanentIdentifier)
                    .HasColumnName("wbarea_permanent_identifier")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<SummitCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("summit_county_parcels_pkey");

                entity.ToTable("summit_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("summit_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<SummitCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("summit_county_parcels_lir_pkey");

                entity.ToTable("summit_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("summit_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<TarSands>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("tar_sands_pkey");

                entity.ToTable("tar_sands", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("tar_sands_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acc)
                    .HasColumnName("acc")
                    .HasMaxLength(10);

                entity.Property(e => e.Alter)
                    .HasColumnName("alter_")
                    .HasMaxLength(100);

                entity.Property(e => e.ApAcc)
                    .HasColumnName("ap_acc")
                    .HasMaxLength(53);

                entity.Property(e => e.ApAmt)
                    .HasColumnName("ap_amt")
                    .HasMaxLength(116);

                entity.Property(e => e.ApGrade)
                    .HasColumnName("ap_grade")
                    .HasMaxLength(254);

                entity.Property(e => e.ApItem)
                    .HasColumnName("ap_item")
                    .HasMaxLength(109);

                entity.Property(e => e.ApU)
                    .HasColumnName("ap_u")
                    .HasMaxLength(61);

                entity.Property(e => e.ApYear)
                    .HasColumnName("ap_year")
                    .HasMaxLength(69);

                entity.Property(e => e.ComInfo)
                    .HasColumnName("com_info")
                    .HasMaxLength(100);

                entity.Property(e => e.ComSub)
                    .HasColumnName("com_sub")
                    .HasMaxLength(100);

                entity.Property(e => e.Commod)
                    .HasColumnName("commod")
                    .HasMaxLength(29);

                entity.Property(e => e.Conc)
                    .HasColumnName("conc")
                    .HasMaxLength(100);

                entity.Property(e => e.Country)
                    .HasColumnName("country")
                    .HasMaxLength(2);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(14);

                entity.Property(e => e.CpAcc)
                    .HasColumnName("cp_acc")
                    .HasMaxLength(35);

                entity.Property(e => e.CpAmt)
                    .HasColumnName("cp_amt")
                    .HasMaxLength(74);

                entity.Property(e => e.CpGrade)
                    .HasColumnName("cp_grade")
                    .HasMaxLength(238);

                entity.Property(e => e.CpItem)
                    .HasColumnName("cp_item")
                    .HasMaxLength(78);

                entity.Property(e => e.CpU)
                    .HasColumnName("cp_u")
                    .HasMaxLength(71);

                entity.Property(e => e.CpYear)
                    .HasColumnName("cp_year")
                    .HasMaxLength(97);

                entity.Property(e => e.DWkU)
                    .HasColumnName("d_wk_u")
                    .HasMaxLength(79);

                entity.Property(e => e.DepBU)
                    .HasColumnName("dep_b_u")
                    .HasMaxLength(3);

                entity.Property(e => e.DepDescC)
                    .HasColumnName("dep_desc_c")
                    .HasMaxLength(254);

                entity.Property(e => e.DepForm)
                    .HasColumnName("dep_form")
                    .HasMaxLength(121);

                entity.Property(e => e.DepNum)
                    .HasColumnName("dep_num")
                    .HasMaxLength(31);

                entity.Property(e => e.DepSize)
                    .HasColumnName("dep_size")
                    .HasMaxLength(13);

                entity.Property(e => e.DepTU)
                    .HasColumnName("dep_t_u")
                    .HasMaxLength(15);

                entity.Property(e => e.DepType)
                    .HasColumnName("dep_type")
                    .HasMaxLength(75);

                entity.Property(e => e.DepthBot)
                    .HasColumnName("depth_bot")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthTop)
                    .HasColumnName("depth_top")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthWk)
                    .HasColumnName("depth_wk")
                    .HasMaxLength(52);

                entity.Property(e => e.DescWork)
                    .HasColumnName("desc_work_")
                    .HasMaxLength(254);

                entity.Property(e => e.DescWork1)
                    .HasColumnName("desc_work")
                    .HasMaxLength(4);

                entity.Property(e => e.Dip)
                    .HasColumnName("dip")
                    .HasMaxLength(10);

                entity.Property(e => e.Disc)
                    .HasColumnName("disc")
                    .HasMaxLength(66);

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasMaxLength(65);

                entity.Property(e => e.Drain)
                    .HasColumnName("drain")
                    .HasMaxLength(80);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasMaxLength(10);

                entity.Property(e => e.ExplCom)
                    .HasColumnName("expl_com")
                    .HasMaxLength(254);

                entity.Property(e => e.FilLink)
                    .HasColumnName("fil_link")
                    .HasMaxLength(10);

                entity.Property(e => e.Form2Age)
                    .HasColumnName("form2_age")
                    .HasMaxLength(4);

                entity.Property(e => e.Form2Name)
                    .HasColumnName("form2_name")
                    .HasMaxLength(8);

                entity.Property(e => e.FormAge)
                    .HasColumnName("form_age")
                    .HasMaxLength(71);

                entity.Property(e => e.FormName)
                    .HasColumnName("form_name")
                    .HasMaxLength(87);

                entity.Property(e => e.GenAnal)
                    .HasColumnName("gen_anal")
                    .HasMaxLength(254);

                entity.Property(e => e.GenCom)
                    .HasColumnName("gen_com")
                    .HasMaxLength(254);

                entity.Property(e => e.GeolCom)
                    .HasColumnName("geol_com")
                    .HasMaxLength(254);

                entity.Property(e => e.HrAge)
                    .HasColumnName("hr_age")
                    .HasMaxLength(25);

                entity.Property(e => e.HrType)
                    .HasColumnName("hr_type")
                    .HasMaxLength(75);

                entity.Property(e => e.Ig2UnitA)
                    .HasColumnName("ig2_unit_a")
                    .HasMaxLength(11);

                entity.Property(e => e.Ig2UnitN)
                    .HasColumnName("ig2_unit_n")
                    .HasMaxLength(17);

                entity.Property(e => e.IgAge)
                    .HasColumnName("ig_age")
                    .HasMaxLength(45);

                entity.Property(e => e.IgType)
                    .HasColumnName("ig_type")
                    .HasMaxLength(75);

                entity.Property(e => e.IgUnitAg)
                    .HasColumnName("ig_unit_ag")
                    .HasMaxLength(69);

                entity.Property(e => e.IgUnitNa)
                    .HasColumnName("ig_unit_na")
                    .HasMaxLength(101);

                entity.Property(e => e.InfoSrc)
                    .HasColumnName("info_src")
                    .HasMaxLength(5);

                entity.Property(e => e.LWkU)
                    .HasColumnName("l_wk_u")
                    .HasMaxLength(8);

                entity.Property(e => e.LandSt)
                    .HasColumnName("land_st")
                    .HasMaxLength(10);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasMaxLength(9);

                entity.Property(e => e.LenWk)
                    .HasColumnName("len_wk")
                    .HasMaxLength(9);

                entity.Property(e => e.LocalStru)
                    .HasColumnName("local_stru")
                    .HasMaxLength(254);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(100);

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasMaxLength(10);

                entity.Property(e => e.MLU)
                    .HasColumnName("m_l_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MTU)
                    .HasColumnName("m_t_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MWU)
                    .HasColumnName("m_w_u")
                    .HasMaxLength(13);

                entity.Property(e => e.Major)
                    .HasColumnName("major")
                    .HasMaxLength(14);

                entity.Property(e => e.MaxLen)
                    .HasColumnName("max_len")
                    .HasMaxLength(13);

                entity.Property(e => e.MaxThick)
                    .HasColumnName("max_thick")
                    .HasMaxLength(9);

                entity.Property(e => e.MaxWid)
                    .HasColumnName("max_wid")
                    .HasMaxLength(13);

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(30);

                entity.Property(e => e.MinAge)
                    .HasColumnName("min_age")
                    .HasMaxLength(42);

                entity.Property(e => e.Minor)
                    .HasColumnName("minor")
                    .HasMaxLength(12);

                entity.Property(e => e.NatDisc)
                    .HasColumnName("nat_disc")
                    .HasMaxLength(1);

                entity.Property(e => e.NonOreMi)
                    .HasColumnName("non_ore_mi")
                    .HasMaxLength(100);

                entity.Property(e => e.NpMain)
                    .HasColumnName("np_main")
                    .HasMaxLength(14);

                entity.Property(e => e.NpMinor)
                    .HasColumnName("np_minor")
                    .HasMaxLength(11);

                entity.Property(e => e.OAU)
                    .HasColumnName("o_a_u")
                    .HasMaxLength(9);

                entity.Property(e => e.OLU)
                    .HasColumnName("o_l_u")
                    .HasMaxLength(98);

                entity.Property(e => e.OWU)
                    .HasColumnName("o_w_u")
                    .HasMaxLength(5);

                entity.Property(e => e.Occur)
                    .HasColumnName("occur")
                    .HasMaxLength(20);

                entity.Property(e => e.Oper)
                    .HasColumnName("oper")
                    .HasMaxLength(100);

                entity.Property(e => e.OreCntl)
                    .HasColumnName("ore_cntl")
                    .HasMaxLength(227);

                entity.Property(e => e.OreMat)
                    .HasColumnName("ore_mat")
                    .HasMaxLength(100);

                entity.Property(e => e.OvAreaWk)
                    .HasColumnName("ov_area_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvLenWk)
                    .HasColumnName("ov_len_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvWidWk)
                    .HasColumnName("ov_wid_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(100);

                entity.Property(e => e.PCom)
                    .HasColumnName("p_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PSource)
                    .HasColumnName("p_source")
                    .HasMaxLength(153);

                entity.Property(e => e.Phys)
                    .HasColumnName("phys")
                    .HasMaxLength(55);

                entity.Property(e => e.Plunge)
                    .HasColumnName("plunge")
                    .HasMaxLength(10);

                entity.Property(e => e.PlungeDir)
                    .HasColumnName("plunge_dir")
                    .HasMaxLength(10);

                entity.Property(e => e.Position)
                    .HasColumnName("position")
                    .HasMaxLength(100);

                entity.Property(e => e.Poten)
                    .HasColumnName("poten")
                    .HasMaxLength(12);

                entity.Property(e => e.PrAcc)
                    .HasColumnName("pr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.PrAmt)
                    .HasColumnName("pr_amt")
                    .HasMaxLength(39);

                entity.Property(e => e.PrCom)
                    .HasColumnName("pr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PrGrade)
                    .HasColumnName("pr_grade")
                    .HasMaxLength(175);

                entity.Property(e => e.PrItem)
                    .HasColumnName("pr_item")
                    .HasMaxLength(44);

                entity.Property(e => e.PrSource)
                    .HasColumnName("pr_source")
                    .HasMaxLength(91);

                entity.Property(e => e.PrU)
                    .HasColumnName("pr_u")
                    .HasMaxLength(18);

                entity.Property(e => e.PrYear)
                    .HasColumnName("pr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Prod)
                    .HasColumnName("prod")
                    .HasMaxLength(3);

                entity.Property(e => e.Q1Scale)
                    .HasColumnName("q1_scale")
                    .HasMaxLength(6);

                entity.Property(e => e.Q2Scale)
                    .HasColumnName("q2_scale")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Quad1)
                    .HasColumnName("quad1")
                    .HasMaxLength(69);

                entity.Property(e => e.Quad2)
                    .HasColumnName("quad2")
                    .HasMaxLength(27);

                entity.Property(e => e.RAcc)
                    .HasColumnName("r_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RAmt)
                    .HasColumnName("r_amt")
                    .HasMaxLength(52);

                entity.Property(e => e.RCom)
                    .HasColumnName("r_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RGrade)
                    .HasColumnName("r_grade")
                    .HasMaxLength(151);

                entity.Property(e => e.RItem)
                    .HasColumnName("r_item")
                    .HasMaxLength(40);

                entity.Property(e => e.RSource)
                    .HasColumnName("r_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RU)
                    .HasColumnName("r_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RYear)
                    .HasColumnName("r_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(10);

                entity.Property(e => e.RecNo)
                    .HasColumnName("rec_no")
                    .HasMaxLength(7);

                entity.Property(e => e.RecType)
                    .HasColumnName("rec_type")
                    .HasMaxLength(3);

                entity.Property(e => e.Ref)
                    .HasColumnName("ref")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RegStruct)
                    .HasColumnName("reg_struct")
                    .HasMaxLength(100);

                entity.Property(e => e.Rep)
                    .HasColumnName("rep")
                    .HasMaxLength(50);

                entity.Property(e => e.RepAff)
                    .HasColumnName("rep_aff")
                    .HasMaxLength(10);

                entity.Property(e => e.RepDate)
                    .HasColumnName("rep_date")
                    .HasMaxLength(5);

                entity.Property(e => e.Rf1)
                    .HasColumnName("rf1")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf2)
                    .HasColumnName("rf2")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf3)
                    .HasColumnName("rf3")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf4)
                    .HasColumnName("rf4")
                    .HasMaxLength(254);

                entity.Property(e => e.RprAcc)
                    .HasColumnName("rpr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RprAmt)
                    .HasColumnName("rpr_amt")
                    .HasMaxLength(41);

                entity.Property(e => e.RprCom)
                    .HasColumnName("rpr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RprGrade)
                    .HasColumnName("rpr_grade")
                    .HasMaxLength(202);

                entity.Property(e => e.RprItem)
                    .HasColumnName("rpr_item")
                    .HasMaxLength(34);

                entity.Property(e => e.RprSource)
                    .HasColumnName("rpr_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RprU)
                    .HasColumnName("rpr_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RprYear)
                    .HasColumnName("rpr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.SectFract)
                    .HasColumnName("sect_fract")
                    .HasMaxLength(50);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteName)
                    .HasColumnName("site_name")
                    .HasMaxLength(70);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Strike)
                    .HasColumnName("strike")
                    .HasMaxLength(10);

                entity.Property(e => e.Syn)
                    .HasColumnName("syn")
                    .HasMaxLength(75);

                entity.Property(e => e.TectSet)
                    .HasColumnName("tect_set")
                    .HasMaxLength(75);

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(10);

                entity.Property(e => e.UtmE)
                    .HasColumnName("utm_e")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmN)
                    .HasColumnName("utm_n")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmZ)
                    .HasColumnName("utm_z")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Yr1stPro)
                    .HasColumnName("yr_1st_pro")
                    .HasMaxLength(10);

                entity.Property(e => e.YrDisc)
                    .HasColumnName("yr_disc")
                    .HasMaxLength(10);

                entity.Property(e => e.YrLastPr)
                    .HasColumnName("yr_last_pr")
                    .HasMaxLength(10);

                entity.Property(e => e.Zid)
                    .HasColumnName("zid")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<TaxAreas2018>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("tax_areas_2018_pkey");

                entity.ToTable("tax_areas_2018", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("tax_areas_2018_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ComboId)
                    .HasColumnName("combo_id")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ComboInst)
                    .HasColumnName("combo_inst")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TxareaCo)
                    .HasColumnName("txarea_co")
                    .HasMaxLength(2);

                entity.Property(e => e.TxareaId)
                    .HasColumnName("txarea_id")
                    .HasMaxLength(5);

                entity.Property(e => e.TxareaSub)
                    .HasColumnName("txarea_sub")
                    .HasMaxLength(4);

                entity.Property(e => e.TxareaTemp)
                    .HasColumnName("txarea_temp")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.TxareaYr)
                    .HasColumnName("txarea_yr")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<TaxEntities2018>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("tax_entities_2018_pkey");

                entity.ToTable("tax_entities_2018", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("tax_entities_2018_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.EntCo)
                    .HasColumnName("ent_co")
                    .HasMaxLength(2);

                entity.Property(e => e.EntCode)
                    .HasColumnName("ent_code")
                    .HasMaxLength(10);

                entity.Property(e => e.EntDesc)
                    .HasColumnName("ent_desc")
                    .HasMaxLength(254);

                entity.Property(e => e.EntId)
                    .HasColumnName("ent_id")
                    .HasMaxLength(10);

                entity.Property(e => e.EntNbr)
                    .HasColumnName("ent_nbr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.EntRate)
                    .HasColumnName("ent_rate")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.EntYr)
                    .HasColumnName("ent_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Temp1)
                    .HasColumnName("temp1")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Temp2)
                    .HasColumnName("temp2")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<TooeleCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("tooele_county_parcels_pkey");

                entity.ToTable("tooele_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("tooele_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<TooeleCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("tooele_county_parcels_lir_pkey");

                entity.ToTable("tooele_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("tooele_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<TotalIcAndReservationTribalLand>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("total_ic_and_reservation_tribal_land_pkey");

                entity.ToTable("total_ic_and_reservation_tribal_land", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("total_ic_and_reservation_tribal_land_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Admin)
                    .HasColumnName("admin")
                    .HasMaxLength(7);

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(7);

                entity.Property(e => e.Air7Name)
                    .HasColumnName("air7_name")
                    .HasMaxLength(60);

                entity.Property(e => e.Air7Scale)
                    .HasColumnName("air7_scale")
                    .HasMaxLength(10);

                entity.Property(e => e.Air7Sourc)
                    .HasColumnName("air7_sourc")
                    .HasMaxLength(15);

                entity.Property(e => e.Areas)
                    .HasColumnName("areas")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BiaClass9)
                    .HasColumnName("bia_class9")
                    .HasMaxLength(30);

                entity.Property(e => e.Desig)
                    .HasColumnName("desig")
                    .HasMaxLength(34);

                entity.Property(e => e.EditDate)
                    .HasColumnName("edit_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.GisAcres)
                    .HasColumnName("gis_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Indncntry)
                    .HasColumnName("indncntry_")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Indncntry1)
                    .HasColumnName("indncntry1")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.IndnctryI)
                    .HasColumnName("indnctry_i")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.LabelFede)
                    .HasColumnName("label_fede")
                    .HasMaxLength(100);

                entity.Property(e => e.LabelStat)
                    .HasColumnName("label_stat")
                    .HasMaxLength(100);

                entity.Property(e => e.Names)
                    .HasColumnName("names_")
                    .HasMaxLength(35);

                entity.Property(e => e.NatlLgd)
                    .HasColumnName("natl_lgd")
                    .HasMaxLength(70);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(7);

                entity.Property(e => e.Perimeter)
                    .HasColumnName("perimeter")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.R8name)
                    .HasColumnName("r8name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("shape_leng")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.SqMiles)
                    .HasColumnName("sq_miles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.StateLgd)
                    .HasColumnName("state_lgd")
                    .HasMaxLength(70);

                entity.Property(e => e.Tname)
                    .HasColumnName("tname")
                    .HasMaxLength(50);

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Update)
                    .HasColumnName("update_")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.UtLgd)
                    .HasColumnName("ut_lgd")
                    .HasMaxLength(70);
            });

            modelBuilder.Entity<Trailheads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("trailheads_pkey");

                entity.ToTable("trailheads", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("trailheads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(200);

                entity.Property(e => e.Datasource)
                    .HasColumnName("datasource")
                    .HasMaxLength(200);

                entity.Property(e => e.Features)
                    .HasColumnName("features")
                    .HasMaxLength(150);

                entity.Property(e => e.Infourl)
                    .HasColumnName("infourl")
                    .HasMaxLength(200);

                entity.Property(e => e.Lastupdate)
                    .HasColumnName("lastupdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Primarymaintenance)
                    .HasColumnName("primarymaintenance")
                    .HasMaxLength(40);

                entity.Property(e => e.Primaryname)
                    .HasColumnName("primaryname")
                    .HasMaxLength(40);

                entity.Property(e => e.Seasonalrestriction)
                    .HasColumnName("seasonalrestriction")
                    .HasMaxLength(200);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Trailheadid)
                    .HasColumnName("trailheadid")
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<Trails>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("trails_pkey");

                entity.ToTable("trails", "recreation");

                entity.HasIndex(e => e.Shape)
                    .HasName("trails_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Adaaccessible)
                    .HasColumnName("adaaccessible")
                    .HasMaxLength(5);

                entity.Property(e => e.Bikedifficulty)
                    .HasColumnName("bikedifficulty")
                    .HasMaxLength(10);

                entity.Property(e => e.Cartocode)
                    .HasColumnName("cartocode")
                    .HasMaxLength(2);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(200);

                entity.Property(e => e.CreatedDate)
                    .HasColumnName("created_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Datasource)
                    .HasColumnName("datasource")
                    .HasMaxLength(200);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(200);

                entity.Property(e => e.Designateduses)
                    .HasColumnName("designateduses")
                    .HasMaxLength(150);

                entity.Property(e => e.Hikedifficulty)
                    .HasColumnName("hikedifficulty")
                    .HasMaxLength(10);

                entity.Property(e => e.Horseallowed)
                    .HasColumnName("horseallowed")
                    .HasMaxLength(7);

                entity.Property(e => e.Infourl)
                    .HasColumnName("infourl")
                    .HasMaxLength(200);

                entity.Property(e => e.LastEditedDate)
                    .HasColumnName("last_edited_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Lastupdate)
                    .HasColumnName("lastupdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Motorizedallowed)
                    .HasColumnName("motorizedallowed")
                    .HasMaxLength(7);

                entity.Property(e => e.Otherrestrictions)
                    .HasColumnName("otherrestrictions")
                    .HasMaxLength(200);

                entity.Property(e => e.Primarymaint)
                    .HasColumnName("primarymaint")
                    .HasMaxLength(40);

                entity.Property(e => e.Primaryname)
                    .HasColumnName("primaryname")
                    .HasMaxLength(40);

                entity.Property(e => e.Recreationarea)
                    .HasColumnName("recreationarea")
                    .HasMaxLength(50);

                entity.Property(e => e.Roadconcurrent)
                    .HasColumnName("roadconcurrent")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(10);

                entity.Property(e => e.Surfacetype)
                    .HasColumnName("surfacetype")
                    .HasMaxLength(10);

                entity.Property(e => e.Systemname)
                    .HasColumnName("systemname")
                    .HasMaxLength(40);

                entity.Property(e => e.Trailclass)
                    .HasColumnName("trailclass")
                    .HasMaxLength(20);

                entity.Property(e => e.Trailid)
                    .HasColumnName("trailid")
                    .HasMaxLength(40);

                entity.Property(e => e.Transnetwork)
                    .HasColumnName("transnetwork")
                    .HasMaxLength(10);

                entity.Property(e => e.UsngSeg)
                    .HasColumnName("usng_seg")
                    .HasMaxLength(13);
            });

            modelBuilder.Entity<TransitSpecialTaxAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("transit_special_tax_areas_pkey");

                entity.ToTable("transit_special_tax_areas", "economy");

                entity.HasIndex(e => e.Shape)
                    .HasName("transit_special_tax_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Entitynbr)
                    .HasColumnName("entitynbr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Entityyr)
                    .HasColumnName("entityyr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sdekey)
                    .HasColumnName("sdekey")
                    .HasMaxLength(16);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Shortdesc)
                    .HasColumnName("shortdesc")
                    .HasMaxLength(100);

                entity.Property(e => e.Taxdist)
                    .HasColumnName("taxdist")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<TransmissionLines>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("transmission_lines_pkey");

                entity.ToTable("transmission_lines", "utilities");

                entity.HasIndex(e => e.Shape)
                    .HasName("transmission_lines_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(75);

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Layer)
                    .HasColumnName("layer")
                    .HasMaxLength(32);

                entity.Property(e => e.SgidDesU)
                    .HasColumnName("sgid_des_u")
                    .HasMaxLength(14);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Thickness)
                    .HasColumnName("thickness")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<TurnGpsBaselines>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("turn_gps_baselines_pkey");

                entity.ToTable("turn_gps_baselines", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("turn_gps_baselines_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Kilometers)
                    .HasColumnName("kilometers")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Miles)
                    .HasColumnName("miles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<TurnGpsStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("turn_gps_stations_pkey");

                entity.ToTable("turn_gps_stations", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("turn_gps_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Antennatype)
                    .HasColumnName("antennatype")
                    .HasMaxLength(50);

                entity.Property(e => e.EllipsoidHeight)
                    .HasColumnName("ellipsoid_height")
                    .HasMaxLength(50);

                entity.Property(e => e.LatDd)
                    .HasColumnName("lat_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasMaxLength(50);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(50);

                entity.Property(e => e.LongDd)
                    .HasColumnName("long_dd")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.StationName)
                    .HasColumnName("station_name")
                    .HasMaxLength(255);

                entity.Property(e => e.Stationcode)
                    .HasColumnName("stationcode")
                    .HasMaxLength(15);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(10);

                entity.Property(e => e.TypeOfStation)
                    .HasColumnName("type_of_station")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<UdotMapScenicByways>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("udot_map_scenic_byways_pkey");

                entity.ToTable("udot_map_scenic_byways", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("udot_map_scenic_byways_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AdoptedDa)
                    .HasColumnName("adopted_da")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.RoadLeade)
                    .HasColumnName("road_leade")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Symbol)
                    .HasColumnName("symbol")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<UdotMileposts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("udot_mileposts_pkey");

                entity.ToTable("udot_mileposts", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("udot_mileposts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Carto)
                    .HasColumnName("carto")
                    .HasMaxLength(10);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(15);

                entity.Property(e => e.Mp)
                    .HasColumnName("mp")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.RtDir)
                    .HasColumnName("rt_dir")
                    .HasMaxLength(1);

                entity.Property(e => e.RtName)
                    .HasColumnName("rt_name")
                    .HasMaxLength(4);

                entity.Property(e => e.RtType)
                    .HasColumnName("rt_type")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Xcoord)
                    .HasColumnName("xcoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ycoord)
                    .HasColumnName("ycoord")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<UdotRoutesLrs>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("udot_routes_lrs_pkey");

                entity.ToTable("udot_routes_lrs", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("udot_routes_lrs_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Carto)
                    .HasColumnName("carto")
                    .HasMaxLength(10);

                entity.Property(e => e.DepDate)
                    .HasColumnName("dep_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.DepNotes)
                    .HasColumnName("dep_notes")
                    .HasMaxLength(100);

                entity.Property(e => e.EffDate)
                    .HasColumnName("eff_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.EffNotes)
                    .HasColumnName("eff_notes")
                    .HasMaxLength(100);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(15);

                entity.Property(e => e.RtDateB)
                    .HasColumnName("rt_date_b")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.RtDateE)
                    .HasColumnName("rt_date_e")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.RtDir)
                    .HasColumnName("rt_dir")
                    .HasMaxLength(1);

                entity.Property(e => e.RtDirId)
                    .HasColumnName("rt_dir_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.RtInt)
                    .HasColumnName("rt_int")
                    .HasMaxLength(3);

                entity.Property(e => e.RtMindesc)
                    .HasColumnName("rt_mindesc")
                    .HasMaxLength(40);

                entity.Property(e => e.RtName)
                    .HasColumnName("rt_name")
                    .HasMaxLength(4);

                entity.Property(e => e.RtRampnbr)
                    .HasColumnName("rt_rampnbr")
                    .HasMaxLength(2);

                entity.Property(e => e.RtType)
                    .HasColumnName("rt_type")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<UdotTenthMileRefPoints>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("udot_tenth_mile_ref_points_pkey");

                entity.ToTable("udot_tenth_mile_ref_points", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("udot_tenth_mile_ref_points_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Carto)
                    .HasColumnName("carto")
                    .HasMaxLength(10);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(15);

                entity.Property(e => e.Mp)
                    .HasColumnName("mp")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.RtDir)
                    .HasColumnName("rt_dir")
                    .HasMaxLength(1);

                entity.Property(e => e.RtName)
                    .HasColumnName("rt_name")
                    .HasMaxLength(4);

                entity.Property(e => e.RtType)
                    .HasColumnName("rt_type")
                    .HasMaxLength(1);

                entity.Property(e => e.SeAnnoCadData).HasColumnName("se_anno_cad_data");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Xcoord)
                    .HasColumnName("xcoord")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ycoord)
                    .HasColumnName("ycoord")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<UgsUraniumDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("ugs_uranium_districts_pkey");

                entity.ToTable("ugs_uranium_districts", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("ugs_uranium_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(55);

                entity.Property(e => e.Number)
                    .HasColumnName("number")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Potential)
                    .HasColumnName("potential")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UintahCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uintah_county_parcels_pkey");

                entity.ToTable("uintah_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("uintah_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UndergroundInjectionControlAuthorization>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("underground_injection_control_authorization_pkey");

                entity.ToTable("underground_injection_control_authorization", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Authorizationid)
                    .HasColumnName("authorizationid")
                    .HasMaxLength(14);

                entity.Property(e => e.Authorizationtype)
                    .HasColumnName("authorizationtype")
                    .HasMaxLength(2);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Createdon)
                    .HasColumnName("createdon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editedby)
                    .HasColumnName("editedby")
                    .HasMaxLength(40);

                entity.Property(e => e.Expirationdate)
                    .HasColumnName("expirationdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FacilityFk)
                    .HasColumnName("facility_fk")
                    .HasMaxLength(36);

                entity.Property(e => e.Guid)
                    .HasColumnName("guid")
                    .HasMaxLength(36);

                entity.Property(e => e.Modifiedon)
                    .HasColumnName("modifiedon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Ownersectortype)
                    .HasColumnName("ownersectortype")
                    .HasMaxLength(2);

                entity.Property(e => e.Startdate)
                    .HasColumnName("startdate")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<UndergroundInjectionControlAuthorizationAction>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("underground_injection_control_authorization_action_pkey");

                entity.ToTable("underground_injection_control_authorization_action", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AuthorizationFk)
                    .HasColumnName("authorization_fk")
                    .HasMaxLength(36);

                entity.Property(e => e.Authorizationactiondate)
                    .HasColumnName("authorizationactiondate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Authorizationactiontype)
                    .HasColumnName("authorizationactiontype")
                    .HasMaxLength(2);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Createdon)
                    .HasColumnName("createdon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editedby)
                    .HasColumnName("editedby")
                    .HasMaxLength(40);

                entity.Property(e => e.Guid)
                    .HasColumnName("guid")
                    .HasMaxLength(36);

                entity.Property(e => e.Modifiedon)
                    .HasColumnName("modifiedon")
                    .HasColumnType("timestamp with time zone");
            });

            modelBuilder.Entity<UndergroundInjectionControlFacility>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("underground_injection_control_facility_pkey");

                entity.ToTable("underground_injection_control_facility", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("underground_injection_control_facility_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Countyfips)
                    .HasColumnName("countyfips")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Createdon)
                    .HasColumnName("createdon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editedby)
                    .HasColumnName("editedby")
                    .HasMaxLength(40);

                entity.Property(e => e.Facilityaddress)
                    .HasColumnName("facilityaddress")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilitycity)
                    .HasColumnName("facilitycity")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilityid)
                    .HasColumnName("facilityid")
                    .HasMaxLength(14);

                entity.Property(e => e.Facilitymilepost)
                    .HasColumnName("facilitymilepost")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilityname)
                    .HasColumnName("facilityname")
                    .HasMaxLength(50);

                entity.Property(e => e.Facilitystate)
                    .HasColumnName("facilitystate")
                    .HasMaxLength(2);

                entity.Property(e => e.Facilitytype)
                    .HasColumnName("facilitytype")
                    .HasMaxLength(1);

                entity.Property(e => e.Facilityzip)
                    .HasColumnName("facilityzip")
                    .HasMaxLength(5);

                entity.Property(e => e.Frsid)
                    .HasColumnName("frsid")
                    .HasMaxLength(50);

                entity.Property(e => e.Guid)
                    .HasColumnName("guid")
                    .HasMaxLength(36);

                entity.Property(e => e.Modifiedon)
                    .HasColumnName("modifiedon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Naicsprimary)
                    .HasColumnName("naicsprimary")
                    .HasMaxLength(6);

                entity.Property(e => e.Naicssecondary)
                    .HasColumnName("naicssecondary")
                    .HasMaxLength(6);

                entity.Property(e => e.Nomigrationpetstatus)
                    .HasColumnName("nomigrationpetstatus")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UndergroundInjectionControlWell>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("underground_injection_control_well_pkey");

                entity.ToTable("underground_injection_control_well", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("underground_injection_control_well_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AorFk)
                    .HasColumnName("aor_fk")
                    .HasMaxLength(36);

                entity.Property(e => e.AuthorizationFk)
                    .HasColumnName("authorization_fk")
                    .HasMaxLength(36);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Convertedogwell)
                    .HasColumnName("convertedogwell")
                    .HasMaxLength(1);

                entity.Property(e => e.Createdon)
                    .HasColumnName("createdon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editedby)
                    .HasColumnName("editedby")
                    .HasMaxLength(40);

                entity.Property(e => e.FacilityFk)
                    .HasColumnName("facility_fk")
                    .HasMaxLength(36);

                entity.Property(e => e.Guid)
                    .HasColumnName("guid")
                    .HasMaxLength(36);

                entity.Property(e => e.Highpriority)
                    .HasColumnName("highpriority")
                    .HasMaxLength(1);

                entity.Property(e => e.Injectionaquiferexempt)
                    .HasColumnName("injectionaquiferexempt")
                    .HasMaxLength(1);

                entity.Property(e => e.Locationaccuracy)
                    .HasColumnName("locationaccuracy")
                    .HasMaxLength(1);

                entity.Property(e => e.Locationmethod)
                    .HasColumnName("locationmethod")
                    .HasMaxLength(3);

                entity.Property(e => e.Modifiedon)
                    .HasColumnName("modifiedon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Remediationprojectid)
                    .HasColumnName("remediationprojectid")
                    .HasMaxLength(20);

                entity.Property(e => e.Remediationprojecttype)
                    .HasColumnName("remediationprojecttype")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Surfaceelevation)
                    .HasColumnName("surfaceelevation")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Wellclass)
                    .HasColumnName("wellclass")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Wellid)
                    .HasColumnName("wellid")
                    .HasMaxLength(14);

                entity.Property(e => e.Wellname)
                    .HasColumnName("wellname")
                    .HasMaxLength(100);

                entity.Property(e => e.Wellsubclass)
                    .HasColumnName("wellsubclass")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Wellswpz)
                    .HasColumnName("wellswpz")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<UndergroundInjectionControlWellOperatingStatus>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("underground_injection_control_well_operating_status_pkey");

                entity.ToTable("underground_injection_control_well_operating_status", "environment");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Createdon)
                    .HasColumnName("createdon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Editedby)
                    .HasColumnName("editedby")
                    .HasMaxLength(40);

                entity.Property(e => e.Guid)
                    .HasColumnName("guid")
                    .HasMaxLength(36);

                entity.Property(e => e.Modifiedon)
                    .HasColumnName("modifiedon")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Operatingstatusdate)
                    .HasColumnName("operatingstatusdate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Operatingstatustype)
                    .HasColumnName("operatingstatustype")
                    .HasMaxLength(2);

                entity.Property(e => e.WellFk)
                    .HasColumnName("well_fk")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<UnincorporatedAreas2010Approx>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("unincorporated_areas_2010_approx_pkey");

                entity.ToTable("unincorporated_areas_2010_approx", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("unincorporated_areas_2010_approx_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Placename)
                    .HasColumnName("placename")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UniqueHouseSenate2002>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("unique_house_senate_2002_pkey");

                entity.ToTable("unique_house_senate_2002", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("unique_house_senate_2002_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color6)
                    .HasColumnName("color6")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Combine)
                    .HasColumnName("combine")
                    .HasMaxLength(12);

                entity.Property(e => e.Repclr4)
                    .HasColumnName("repclr4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Repdist)
                    .HasColumnName("repdist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Replbl)
                    .HasColumnName("replbl")
                    .HasMaxLength(10);

                entity.Property(e => e.Senclr4)
                    .HasColumnName("senclr4")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Sendist)
                    .HasColumnName("sendist")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Senlbl)
                    .HasColumnName("senlbl")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Ushouse)
                    .HasColumnName("ushouse")
                    .HasColumnType("numeric(5,0)");
            });

            modelBuilder.Entity<UnpopulatedAreas2010Approx>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("unpopulated_areas_2010_approx_pkey");

                entity.ToTable("unpopulated_areas_2010_approx", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("unpopulated_areas_2010_approx_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(16);
            });

            modelBuilder.Entity<UpdesSites>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("updes_sites_pkey");

                entity.ToTable("updes_sites", "environment");

                entity.HasIndex(e => e.Shape)
                    .HasName("updes_sites_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(36);

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(23);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(20);

                entity.Property(e => e.EffecDate)
                    .HasColumnName("effec_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ExpDate)
                    .HasColumnName("exp_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Facility)
                    .HasColumnName("facility")
                    .HasMaxLength(86);

                entity.Property(e => e.IssueDate)
                    .HasColumnName("issue_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.LatDeg)
                    .HasColumnName("lat_deg")
                    .HasMaxLength(14);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(58);

                entity.Property(e => e.LongDeg)
                    .HasColumnName("long_deg")
                    .HasMaxLength(16);

                entity.Property(e => e.Nad83utmX)
                    .HasColumnName("nad83utm_x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Nad83utmY)
                    .HasColumnName("nad83utm_y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.NpdesId)
                    .HasColumnName("npdes_id")
                    .HasMaxLength(14);

                entity.Property(e => e.Official)
                    .HasColumnName("official")
                    .HasMaxLength(37);

                entity.Property(e => e.Permitee)
                    .HasColumnName("permitee")
                    .HasMaxLength(86);

                entity.Property(e => e.Phone)
                    .HasColumnName("phone")
                    .HasMaxLength(11);

                entity.Property(e => e.PrimCode)
                    .HasColumnName("prim_code")
                    .HasMaxLength(11);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(9);

                entity.Property(e => e.Study)
                    .HasColumnName("study")
                    .HasMaxLength(50);

                entity.Property(e => e.SupState)
                    .HasColumnName("sup_state")
                    .HasMaxLength(9);

                entity.Property(e => e.SupZip)
                    .HasColumnName("sup_zip")
                    .HasMaxLength(13);

                entity.Property(e => e.SuppAddr)
                    .HasColumnName("supp_addr")
                    .HasMaxLength(59);

                entity.Property(e => e.SuppCity)
                    .HasColumnName("supp_city")
                    .HasMaxLength(27);

                entity.Property(e => e.Waterbody)
                    .HasColumnName("waterbody")
                    .HasMaxLength(57);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(9);
            });

            modelBuilder.Entity<UraniumAreaBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uranium_area_boundaries_pkey");

                entity.ToTable("uranium_area_boundaries", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("uranium_area_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UraniumMills>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uranium_mills_pkey");

                entity.ToTable("uranium_mills", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("uranium_mills_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(12);

                entity.Property(e => e.MillId)
                    .HasColumnName("mill_id")
                    .HasMaxLength(9);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(22);

                entity.Property(e => e.Operator)
                    .HasColumnName("operator")
                    .HasMaxLength(20);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(9);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(9);

                entity.Property(e => e.UtmE)
                    .HasColumnName("utm_e")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmN)
                    .HasColumnName("utm_n")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<UraniumPastProducers>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uranium_past_producers_pkey");

                entity.ToTable("uranium_past_producers", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("uranium_past_producers_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acc)
                    .HasColumnName("acc")
                    .HasMaxLength(10);

                entity.Property(e => e.Alter)
                    .HasColumnName("alter_")
                    .HasMaxLength(100);

                entity.Property(e => e.ApAcc)
                    .HasColumnName("ap_acc")
                    .HasMaxLength(53);

                entity.Property(e => e.ApAmt)
                    .HasColumnName("ap_amt")
                    .HasMaxLength(116);

                entity.Property(e => e.ApGrade)
                    .HasColumnName("ap_grade")
                    .HasMaxLength(254);

                entity.Property(e => e.ApItem)
                    .HasColumnName("ap_item")
                    .HasMaxLength(109);

                entity.Property(e => e.ApU)
                    .HasColumnName("ap_u")
                    .HasMaxLength(61);

                entity.Property(e => e.ApYear)
                    .HasColumnName("ap_year")
                    .HasMaxLength(69);

                entity.Property(e => e.ComInfo)
                    .HasColumnName("com_info")
                    .HasMaxLength(100);

                entity.Property(e => e.ComSub)
                    .HasColumnName("com_sub")
                    .HasMaxLength(100);

                entity.Property(e => e.Commod)
                    .HasColumnName("commod")
                    .HasMaxLength(29);

                entity.Property(e => e.Conc)
                    .HasColumnName("conc")
                    .HasMaxLength(100);

                entity.Property(e => e.Country)
                    .HasColumnName("country")
                    .HasMaxLength(2);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(14);

                entity.Property(e => e.CpAcc)
                    .HasColumnName("cp_acc")
                    .HasMaxLength(35);

                entity.Property(e => e.CpAmt)
                    .HasColumnName("cp_amt")
                    .HasMaxLength(74);

                entity.Property(e => e.CpGrade)
                    .HasColumnName("cp_grade")
                    .HasMaxLength(238);

                entity.Property(e => e.CpItem)
                    .HasColumnName("cp_item")
                    .HasMaxLength(78);

                entity.Property(e => e.CpU)
                    .HasColumnName("cp_u")
                    .HasMaxLength(71);

                entity.Property(e => e.CpYear)
                    .HasColumnName("cp_year")
                    .HasMaxLength(97);

                entity.Property(e => e.DWkU)
                    .HasColumnName("d_wk_u")
                    .HasMaxLength(79);

                entity.Property(e => e.DepBU)
                    .HasColumnName("dep_b_u")
                    .HasMaxLength(3);

                entity.Property(e => e.DepDescC)
                    .HasColumnName("dep_desc_c")
                    .HasMaxLength(254);

                entity.Property(e => e.DepForm)
                    .HasColumnName("dep_form")
                    .HasMaxLength(121);

                entity.Property(e => e.DepNum)
                    .HasColumnName("dep_num")
                    .HasMaxLength(31);

                entity.Property(e => e.DepSize)
                    .HasColumnName("dep_size")
                    .HasMaxLength(13);

                entity.Property(e => e.DepTU)
                    .HasColumnName("dep_t_u")
                    .HasMaxLength(15);

                entity.Property(e => e.DepType)
                    .HasColumnName("dep_type")
                    .HasMaxLength(75);

                entity.Property(e => e.DepthBot)
                    .HasColumnName("depth_bot")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthTop)
                    .HasColumnName("depth_top")
                    .HasMaxLength(10);

                entity.Property(e => e.DepthWk)
                    .HasColumnName("depth_wk")
                    .HasMaxLength(52);

                entity.Property(e => e.DescWork)
                    .HasColumnName("desc_work_")
                    .HasMaxLength(254);

                entity.Property(e => e.DescWork1)
                    .HasColumnName("desc_work")
                    .HasMaxLength(4);

                entity.Property(e => e.Dip)
                    .HasColumnName("dip")
                    .HasMaxLength(10);

                entity.Property(e => e.Disc)
                    .HasColumnName("disc")
                    .HasMaxLength(66);

                entity.Property(e => e.Dist)
                    .HasColumnName("dist")
                    .HasMaxLength(65);

                entity.Property(e => e.Drain)
                    .HasColumnName("drain")
                    .HasMaxLength(80);

                entity.Property(e => e.Elev)
                    .HasColumnName("elev")
                    .HasMaxLength(10);

                entity.Property(e => e.ExplCom)
                    .HasColumnName("expl_com")
                    .HasMaxLength(254);

                entity.Property(e => e.FilLink)
                    .HasColumnName("fil_link")
                    .HasMaxLength(10);

                entity.Property(e => e.Form2Age)
                    .HasColumnName("form2_age")
                    .HasMaxLength(4);

                entity.Property(e => e.Form2Name)
                    .HasColumnName("form2_name")
                    .HasMaxLength(8);

                entity.Property(e => e.FormAge)
                    .HasColumnName("form_age")
                    .HasMaxLength(71);

                entity.Property(e => e.FormName)
                    .HasColumnName("form_name")
                    .HasMaxLength(87);

                entity.Property(e => e.GenAnal)
                    .HasColumnName("gen_anal")
                    .HasMaxLength(254);

                entity.Property(e => e.GenCom)
                    .HasColumnName("gen_com")
                    .HasMaxLength(254);

                entity.Property(e => e.GeolCom)
                    .HasColumnName("geol_com")
                    .HasMaxLength(254);

                entity.Property(e => e.HrAge)
                    .HasColumnName("hr_age")
                    .HasMaxLength(25);

                entity.Property(e => e.HrType)
                    .HasColumnName("hr_type")
                    .HasMaxLength(75);

                entity.Property(e => e.Ig2UnitA)
                    .HasColumnName("ig2_unit_a")
                    .HasMaxLength(11);

                entity.Property(e => e.Ig2UnitN)
                    .HasColumnName("ig2_unit_n")
                    .HasMaxLength(17);

                entity.Property(e => e.IgAge)
                    .HasColumnName("ig_age")
                    .HasMaxLength(45);

                entity.Property(e => e.IgType)
                    .HasColumnName("ig_type")
                    .HasMaxLength(75);

                entity.Property(e => e.IgUnitAg)
                    .HasColumnName("ig_unit_ag")
                    .HasMaxLength(69);

                entity.Property(e => e.IgUnitNa)
                    .HasColumnName("ig_unit_na")
                    .HasMaxLength(101);

                entity.Property(e => e.InfoSrc)
                    .HasColumnName("info_src")
                    .HasMaxLength(5);

                entity.Property(e => e.LWkU)
                    .HasColumnName("l_wk_u")
                    .HasMaxLength(8);

                entity.Property(e => e.LandSt)
                    .HasColumnName("land_st")
                    .HasMaxLength(10);

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasMaxLength(9);

                entity.Property(e => e.LenWk)
                    .HasColumnName("len_wk")
                    .HasMaxLength(9);

                entity.Property(e => e.LocalStru)
                    .HasColumnName("local_stru")
                    .HasMaxLength(254);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(100);

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasMaxLength(10);

                entity.Property(e => e.MLU)
                    .HasColumnName("m_l_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MTU)
                    .HasColumnName("m_t_u")
                    .HasMaxLength(10);

                entity.Property(e => e.MWU)
                    .HasColumnName("m_w_u")
                    .HasMaxLength(13);

                entity.Property(e => e.Major)
                    .HasColumnName("major")
                    .HasMaxLength(14);

                entity.Property(e => e.MaxLen)
                    .HasColumnName("max_len")
                    .HasMaxLength(13);

                entity.Property(e => e.MaxThick)
                    .HasColumnName("max_thick")
                    .HasMaxLength(9);

                entity.Property(e => e.MaxWid)
                    .HasColumnName("max_wid")
                    .HasMaxLength(13);

                entity.Property(e => e.Meridian)
                    .HasColumnName("meridian")
                    .HasMaxLength(30);

                entity.Property(e => e.MinAge)
                    .HasColumnName("min_age")
                    .HasMaxLength(42);

                entity.Property(e => e.Minor)
                    .HasColumnName("minor")
                    .HasMaxLength(12);

                entity.Property(e => e.NatDisc)
                    .HasColumnName("nat_disc")
                    .HasMaxLength(1);

                entity.Property(e => e.NonOreMi)
                    .HasColumnName("non_ore_mi")
                    .HasMaxLength(100);

                entity.Property(e => e.NpMain)
                    .HasColumnName("np_main")
                    .HasMaxLength(14);

                entity.Property(e => e.NpMinor)
                    .HasColumnName("np_minor")
                    .HasMaxLength(11);

                entity.Property(e => e.OAU)
                    .HasColumnName("o_a_u")
                    .HasMaxLength(9);

                entity.Property(e => e.OLU)
                    .HasColumnName("o_l_u")
                    .HasMaxLength(98);

                entity.Property(e => e.OWU)
                    .HasColumnName("o_w_u")
                    .HasMaxLength(5);

                entity.Property(e => e.Occur)
                    .HasColumnName("occur")
                    .HasMaxLength(20);

                entity.Property(e => e.Oper)
                    .HasColumnName("oper")
                    .HasMaxLength(100);

                entity.Property(e => e.OreCntl)
                    .HasColumnName("ore_cntl")
                    .HasMaxLength(227);

                entity.Property(e => e.OreMat)
                    .HasColumnName("ore_mat")
                    .HasMaxLength(100);

                entity.Property(e => e.OvAreaWk)
                    .HasColumnName("ov_area_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvLenWk)
                    .HasColumnName("ov_len_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.OvWidWk)
                    .HasColumnName("ov_wid_wk")
                    .HasMaxLength(10);

                entity.Property(e => e.Owner)
                    .HasColumnName("owner")
                    .HasMaxLength(100);

                entity.Property(e => e.PCom)
                    .HasColumnName("p_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PSource)
                    .HasColumnName("p_source")
                    .HasMaxLength(153);

                entity.Property(e => e.Phys)
                    .HasColumnName("phys")
                    .HasMaxLength(55);

                entity.Property(e => e.Plunge)
                    .HasColumnName("plunge")
                    .HasMaxLength(10);

                entity.Property(e => e.PlungeDir)
                    .HasColumnName("plunge_dir")
                    .HasMaxLength(10);

                entity.Property(e => e.Position)
                    .HasColumnName("position")
                    .HasMaxLength(100);

                entity.Property(e => e.Poten)
                    .HasColumnName("poten")
                    .HasMaxLength(12);

                entity.Property(e => e.PrAcc)
                    .HasColumnName("pr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.PrAmt)
                    .HasColumnName("pr_amt")
                    .HasMaxLength(39);

                entity.Property(e => e.PrCom)
                    .HasColumnName("pr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.PrGrade)
                    .HasColumnName("pr_grade")
                    .HasMaxLength(175);

                entity.Property(e => e.PrItem)
                    .HasColumnName("pr_item")
                    .HasMaxLength(44);

                entity.Property(e => e.PrSource)
                    .HasColumnName("pr_source")
                    .HasMaxLength(91);

                entity.Property(e => e.PrU)
                    .HasColumnName("pr_u")
                    .HasMaxLength(18);

                entity.Property(e => e.PrYear)
                    .HasColumnName("pr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Prod)
                    .HasColumnName("prod")
                    .HasMaxLength(3);

                entity.Property(e => e.Q1Scale)
                    .HasColumnName("q1_scale")
                    .HasMaxLength(6);

                entity.Property(e => e.Q2Scale)
                    .HasColumnName("q2_scale")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Quad1)
                    .HasColumnName("quad1")
                    .HasMaxLength(69);

                entity.Property(e => e.Quad2)
                    .HasColumnName("quad2")
                    .HasMaxLength(27);

                entity.Property(e => e.RAcc)
                    .HasColumnName("r_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RAmt)
                    .HasColumnName("r_amt")
                    .HasMaxLength(52);

                entity.Property(e => e.RCom)
                    .HasColumnName("r_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RGrade)
                    .HasColumnName("r_grade")
                    .HasMaxLength(151);

                entity.Property(e => e.RItem)
                    .HasColumnName("r_item")
                    .HasMaxLength(40);

                entity.Property(e => e.RSource)
                    .HasColumnName("r_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RU)
                    .HasColumnName("r_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RYear)
                    .HasColumnName("r_year")
                    .HasMaxLength(29);

                entity.Property(e => e.Range)
                    .HasColumnName("range")
                    .HasMaxLength(10);

                entity.Property(e => e.RecNo)
                    .HasColumnName("rec_no")
                    .HasMaxLength(7);

                entity.Property(e => e.RecType)
                    .HasColumnName("rec_type")
                    .HasMaxLength(3);

                entity.Property(e => e.Ref)
                    .HasColumnName("ref")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RegStruct)
                    .HasColumnName("reg_struct")
                    .HasMaxLength(100);

                entity.Property(e => e.Rep)
                    .HasColumnName("rep")
                    .HasMaxLength(50);

                entity.Property(e => e.RepAff)
                    .HasColumnName("rep_aff")
                    .HasMaxLength(10);

                entity.Property(e => e.RepDate)
                    .HasColumnName("rep_date")
                    .HasMaxLength(5);

                entity.Property(e => e.Rf1)
                    .HasColumnName("rf1")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf2)
                    .HasColumnName("rf2")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf3)
                    .HasColumnName("rf3")
                    .HasMaxLength(254);

                entity.Property(e => e.Rf4)
                    .HasColumnName("rf4")
                    .HasMaxLength(254);

                entity.Property(e => e.RprAcc)
                    .HasColumnName("rpr_acc")
                    .HasMaxLength(23);

                entity.Property(e => e.RprAmt)
                    .HasColumnName("rpr_amt")
                    .HasMaxLength(41);

                entity.Property(e => e.RprCom)
                    .HasColumnName("rpr_com")
                    .HasMaxLength(100);

                entity.Property(e => e.RprGrade)
                    .HasColumnName("rpr_grade")
                    .HasMaxLength(202);

                entity.Property(e => e.RprItem)
                    .HasColumnName("rpr_item")
                    .HasMaxLength(34);

                entity.Property(e => e.RprSource)
                    .HasColumnName("rpr_source")
                    .HasMaxLength(100);

                entity.Property(e => e.RprU)
                    .HasColumnName("rpr_u")
                    .HasMaxLength(22);

                entity.Property(e => e.RprYear)
                    .HasColumnName("rpr_year")
                    .HasMaxLength(29);

                entity.Property(e => e.SectFract)
                    .HasColumnName("sect_fract")
                    .HasMaxLength(50);

                entity.Property(e => e.Section)
                    .HasColumnName("section")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SiteName)
                    .HasColumnName("site_name")
                    .HasMaxLength(70);

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Strike)
                    .HasColumnName("strike")
                    .HasMaxLength(10);

                entity.Property(e => e.Syn)
                    .HasColumnName("syn")
                    .HasMaxLength(75);

                entity.Property(e => e.TectSet)
                    .HasColumnName("tect_set")
                    .HasMaxLength(75);

                entity.Property(e => e.Township)
                    .HasColumnName("township")
                    .HasMaxLength(10);

                entity.Property(e => e.UtmE)
                    .HasColumnName("utm_e")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmN)
                    .HasColumnName("utm_n")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UtmZ)
                    .HasColumnName("utm_z")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Yr1stPro)
                    .HasColumnName("yr_1st_pro")
                    .HasMaxLength(10);

                entity.Property(e => e.YrDisc)
                    .HasColumnName("yr_disc")
                    .HasMaxLength(10);

                entity.Property(e => e.YrLastPr)
                    .HasColumnName("yr_last_pr")
                    .HasMaxLength(10);

                entity.Property(e => e.Zid)
                    .HasColumnName("zid")
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<UrbanAreasCensus2010>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urban_areas_census_2010_pkey");

                entity.ToTable("urban_areas_census_2010", "demographic");

                entity.HasIndex(e => e.Shape)
                    .HasName("urban_areas_census_2010_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.HousingUnits)
                    .HasColumnName("housing_units")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(60);

                entity.Property(e => e.Population)
                    .HasColumnName("population")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<UrbanInterfaceAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urban_interface_areas_pkey");

                entity.ToTable("urban_interface_areas", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("urban_interface_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Fuel)
                    .HasColumnName("fuel")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Lotsize)
                    .HasColumnName("lotsize")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(1);
            });

            modelBuilder.Entity<UrezPhase1GeothermalZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_1_geothermal_zones_pkey");

                entity.ToTable("urez_phase_1_geothermal_zones", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_1_geothermal_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Areaname)
                    .HasColumnName("areaname")
                    .HasMaxLength(50);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(100);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UrezPhase1SolarZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_1_solar_zones_pkey");

                entity.ToTable("urez_phase_1_solar_zones", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_1_solar_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Dnr)
                    .HasColumnName("dnr")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UrezPhase1Transmission>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_1_transmission_pkey");

                entity.ToTable("urez_phase_1_transmission", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_1_transmission_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Color)
                    .HasColumnName("color")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Comment)
                    .HasColumnName("comment")
                    .HasMaxLength(75);

                entity.Property(e => e.Kv)
                    .HasColumnName("kv")
                    .HasMaxLength(32);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<UrezPhase1WindDrainage>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_1_wind_drainage_pkey");

                entity.ToTable("urez_phase_1_wind_drainage", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_1_wind_drainage_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<UrezPhase1WindZones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_1_wind_zones_pkey");

                entity.ToTable("urez_phase_1_wind_zones", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_1_wind_zones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.Confidence)
                    .HasColumnName("confidence")
                    .HasMaxLength(1);

                entity.Property(e => e.Counties)
                    .HasColumnName("counties")
                    .HasMaxLength(255);

                entity.Property(e => e.ElevFt)
                    .HasColumnName("elev_ft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Estspeed80m)
                    .HasColumnName("estspeed80m")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Gcf101dens)
                    .HasColumnName("gcf101dens")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Ge15grscap)
                    .HasColumnName("ge15grscap")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.MwEsttech)
                    .HasColumnName("mw_esttech")
                    .HasMaxLength(255);

                entity.Property(e => e.MwPotent)
                    .HasColumnName("mw_potent")
                    .HasMaxLength(255);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SiteId)
                    .HasColumnName("site_id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Sitename)
                    .HasColumnName("sitename")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<UrezPhase2ConceptualTransmission>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_2_conceptual_transmission_pkey");

                entity.ToTable("urez_phase_2_conceptual_transmission", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_2_conceptual_transmission_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Datasource)
                    .HasColumnName("datasource")
                    .HasMaxLength(50);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(100);

                entity.Property(e => e.Miles)
                    .HasColumnName("miles")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(10);

                entity.Property(e => e.Subid1)
                    .HasColumnName("subid_1")
                    .HasMaxLength(25);

                entity.Property(e => e.Subid2)
                    .HasColumnName("subid_2")
                    .HasMaxLength(25);
            });

            modelBuilder.Entity<UrezPhase2Geothermal>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_2_geothermal_pkey");

                entity.ToTable("urez_phase_2_geothermal", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_2_geothermal_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.DistanceM)
                    .HasColumnName("distance_m")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Gwh)
                    .HasColumnName("gwh")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Mw)
                    .HasColumnName("mw")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Project)
                    .HasColumnName("project")
                    .HasMaxLength(254);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Subid)
                    .HasColumnName("subid")
                    .HasMaxLength(25);

                entity.Property(e => e.UrezName)
                    .HasColumnName("urez_name")
                    .HasMaxLength(60);
            });

            modelBuilder.Entity<UrezPhase2ZoneBoundaries>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("urez_phase_2_zone_boundaries_pkey");

                entity.ToTable("urez_phase_2_zone_boundaries", "energy");

                entity.HasIndex(e => e.Shape)
                    .HasName("urez_phase_2_zone_boundaries_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Altname)
                    .HasColumnName("altname")
                    .HasMaxLength(60);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UsCongressDistricts>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("us_congress_districts_pkey");

                entity.ToTable("us_congress_districts", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("us_congress_districts_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UsCongressDistricts2002>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("us_congress_districts_2002_pkey");

                entity.ToTable("us_congress_districts_2002", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("us_congress_districts_2002_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.District)
                    .HasColumnName("district")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UsStates>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("us_states_pkey");

                entity.ToTable("us_states", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("us_states_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.StateAbbr)
                    .HasColumnName("state_abbr")
                    .HasMaxLength(2);

                entity.Property(e => e.StateFips)
                    .HasColumnName("state_fips")
                    .HasMaxLength(2);

                entity.Property(e => e.StateName)
                    .HasColumnName("state_name")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<UsfsRoadlessInventory>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usfs_roadless_inventory_pkey");

                entity.ToTable("usfs_roadless_inventory", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("usfs_roadless_inventory_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Authority1)
                    .HasColumnName("authority1")
                    .HasMaxLength(4);

                entity.Property(e => e.Authority2)
                    .HasColumnName("authority2")
                    .HasMaxLength(4);

                entity.Property(e => e.Authority3)
                    .HasColumnName("authority3")
                    .HasMaxLength(4);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(4);

                entity.Property(e => e.Comment)
                    .HasColumnName("comment_")
                    .HasMaxLength(50);

                entity.Property(e => e.Comment1)
                    .HasColumnName("comment1")
                    .HasMaxLength(150);

                entity.Property(e => e.Comment2)
                    .HasColumnName("comment2")
                    .HasMaxLength(150);

                entity.Property(e => e.Comment3)
                    .HasColumnName("comment3")
                    .HasMaxLength(150);

                entity.Property(e => e.Feature1)
                    .HasColumnName("feature1")
                    .HasMaxLength(6);

                entity.Property(e => e.Feature2)
                    .HasColumnName("feature2")
                    .HasMaxLength(6);

                entity.Property(e => e.Feature3)
                    .HasColumnName("feature3")
                    .HasMaxLength(6);

                entity.Property(e => e.FinalCat)
                    .HasColumnName("final_cat")
                    .HasMaxLength(4);

                entity.Property(e => e.Forest)
                    .HasColumnName("forest")
                    .HasMaxLength(40);

                entity.Property(e => e.IraName2)
                    .HasColumnName("ira_name2")
                    .HasMaxLength(80);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(80);

                entity.Property(e => e.Name1)
                    .HasColumnName("name1")
                    .HasMaxLength(80);

                entity.Property(e => e.Name2)
                    .HasColumnName("name2")
                    .HasMaxLength(80);

                entity.Property(e => e.Name3)
                    .HasColumnName("name3")
                    .HasMaxLength(80);

                entity.Property(e => e.Ownership)
                    .HasColumnName("ownership")
                    .HasMaxLength(2);

                entity.Property(e => e.Region)
                    .HasColumnName("region")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RevCat)
                    .HasColumnName("rev_cat")
                    .HasMaxLength(4);

                entity.Property(e => e.RevCatCom)
                    .HasColumnName("rev_cat_com")
                    .HasMaxLength(150);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<UsfsWildernessAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usfs_wilderness_areas_pkey");

                entity.ToTable("usfs_wilderness_areas", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("usfs_wilderness_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Authority1)
                    .HasColumnName("authority1")
                    .HasMaxLength(4);

                entity.Property(e => e.Authority2)
                    .HasColumnName("authority2")
                    .HasMaxLength(4);

                entity.Property(e => e.Authority3)
                    .HasColumnName("authority3")
                    .HasMaxLength(4);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(4);

                entity.Property(e => e.Comment)
                    .HasColumnName("comment_")
                    .HasMaxLength(50);

                entity.Property(e => e.Comment1)
                    .HasColumnName("comment1")
                    .HasMaxLength(150);

                entity.Property(e => e.Comment2)
                    .HasColumnName("comment2")
                    .HasMaxLength(150);

                entity.Property(e => e.Comment3)
                    .HasColumnName("comment3")
                    .HasMaxLength(150);

                entity.Property(e => e.Feature1)
                    .HasColumnName("feature1")
                    .HasMaxLength(6);

                entity.Property(e => e.Feature2)
                    .HasColumnName("feature2")
                    .HasMaxLength(6);

                entity.Property(e => e.Feature3)
                    .HasColumnName("feature3")
                    .HasMaxLength(6);

                entity.Property(e => e.FinalCat)
                    .HasColumnName("final_cat")
                    .HasMaxLength(4);

                entity.Property(e => e.Forest)
                    .HasColumnName("forest")
                    .HasMaxLength(40);

                entity.Property(e => e.IraName2)
                    .HasColumnName("ira_name2")
                    .HasMaxLength(80);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(80);

                entity.Property(e => e.Name1)
                    .HasColumnName("name1")
                    .HasMaxLength(80);

                entity.Property(e => e.Name2)
                    .HasColumnName("name2")
                    .HasMaxLength(80);

                entity.Property(e => e.Name3)
                    .HasColumnName("name3")
                    .HasMaxLength(80);

                entity.Property(e => e.Ownership)
                    .HasColumnName("ownership")
                    .HasMaxLength(2);

                entity.Property(e => e.Region)
                    .HasColumnName("region")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.RevCat)
                    .HasColumnName("rev_cat")
                    .HasMaxLength(4);

                entity.Property(e => e.RevCatCom)
                    .HasColumnName("rev_cat_com")
                    .HasMaxLength(150);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(2);
            });

            modelBuilder.Entity<Usgs100kQuads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_100k_quads_pkey");

                entity.ToTable("usgs_100k_quads", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_100k_quads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Ext)
                    .HasColumnName("ext")
                    .HasMaxLength(5);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(32);

                entity.Property(e => e.Path)
                    .HasColumnName("path")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Size)
                    .HasColumnName("size")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tile)
                    .HasColumnName("tile")
                    .HasMaxLength(15);

                entity.Property(e => e.TileName)
                    .HasColumnName("tile_name")
                    .HasMaxLength(32);
            });

            modelBuilder.Entity<Usgs24kQuads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_24k_quads_pkey");

                entity.ToTable("usgs_24k_quads", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_24k_quads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Ext)
                    .HasColumnName("ext")
                    .HasMaxLength(5);

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(128);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(25);

                entity.Property(e => e.OhioCode)
                    .HasColumnName("ohio_code")
                    .HasMaxLength(7);

                entity.Property(e => e.Path)
                    .HasColumnName("path")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Size)
                    .HasColumnName("size")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Tile)
                    .HasColumnName("tile")
                    .HasMaxLength(15);
            });

            modelBuilder.Entity<Usgs24kQuarterQuads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_24k_quarter_quads_pkey");

                entity.ToTable("usgs_24k_quarter_quads", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_24k_quarter_quads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(35);

                entity.Property(e => e.Ohio2)
                    .HasColumnName("ohio2")
                    .HasMaxLength(10);

                entity.Property(e => e.OhioCode)
                    .HasColumnName("ohio_code")
                    .HasMaxLength(7);

                entity.Property(e => e.OhioCoord)
                    .HasColumnName("ohio_coord")
                    .HasMaxLength(50);

                entity.Property(e => e.Quadrant)
                    .HasColumnName("quadrant")
                    .HasMaxLength(2);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TileCoord)
                    .HasColumnName("tile_coord")
                    .HasMaxLength(10);

                entity.Property(e => e.TileName)
                    .HasColumnName("tile_name")
                    .HasMaxLength(32);
            });

            modelBuilder.Entity<Usgs250kQuads1x1>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_250k_quads_1x1_pkey");

                entity.ToTable("usgs_250k_quads_1x1", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_250k_quads_1x1_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(128);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TileName)
                    .HasColumnName("tile_name")
                    .HasMaxLength(32);

                entity.Property(e => e.UsgsCode)
                    .HasColumnName("usgs_code")
                    .HasMaxLength(8);
            });

            modelBuilder.Entity<Usgs250kQuads1x2>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_250k_quads_1x2_pkey");

                entity.ToTable("usgs_250k_quads_1x2", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_250k_quads_1x2_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(128);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.TileName)
                    .HasColumnName("tile_name")
                    .HasMaxLength(32);
            });

            modelBuilder.Entity<Usgs3dep1kGrid>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_3dep_1k_grid_pkey");

                entity.ToTable("usgs_3dep_1k_grid", "elevation");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_3dep_1k_grid_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(64);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.StateName)
                    .HasColumnName("state_name")
                    .HasMaxLength(64);

                entity.Property(e => e.TileId)
                    .HasColumnName("tile_id")
                    .HasMaxLength(16);
            });

            modelBuilder.Entity<UsgsDemExtents>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("usgs_dem_extents_pkey");

                entity.ToTable("usgs_dem_extents", "indices");

                entity.HasIndex(e => e.Shape)
                    .HasName("usgs_dem_extents_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AverageFileSize)
                    .HasColumnName("average_file_size")
                    .HasMaxLength(10);

                entity.Property(e => e.Category)
                    .HasColumnName("category")
                    .HasMaxLength(50);

                entity.Property(e => e.Contact)
                    .HasColumnName("contact")
                    .HasMaxLength(100);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(100);

                entity.Property(e => e.EstimatedDate)
                    .HasColumnName("estimated_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.FileExtension)
                    .HasColumnName("file_extension")
                    .HasMaxLength(20);

                entity.Property(e => e.FileFormat)
                    .HasColumnName("file_format")
                    .HasMaxLength(25);

                entity.Property(e => e.FlightdateLocation)
                    .HasColumnName("flightdate_location")
                    .HasMaxLength(50);

                entity.Property(e => e.FtpPath)
                    .HasColumnName("ftp_path")
                    .HasMaxLength(100);

                entity.Property(e => e.HorizontalAccuracy)
                    .HasColumnName("horizontal_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.HtmlPage)
                    .HasColumnName("html_page")
                    .HasMaxLength(150);

                entity.Property(e => e.InHouse)
                    .HasColumnName("in_house")
                    .HasMaxLength(10);

                entity.Property(e => e.Interval)
                    .HasColumnName("interval")
                    .HasMaxLength(20);

                entity.Property(e => e.LyrFile)
                    .HasColumnName("lyr_file")
                    .HasMaxLength(150);

                entity.Property(e => e.Metadata)
                    .HasColumnName("metadata")
                    .HasMaxLength(50);

                entity.Property(e => e.Product)
                    .HasColumnName("product")
                    .HasMaxLength(50);

                entity.Property(e => e.Report)
                    .HasColumnName("report")
                    .HasMaxLength(50);

                entity.Property(e => e.Resolution)
                    .HasColumnName("resolution")
                    .HasMaxLength(20);

                entity.Property(e => e.RestEndpoint)
                    .HasColumnName("rest_endpoint")
                    .HasMaxLength(150);

                entity.Property(e => e.Servicename)
                    .HasColumnName("servicename")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Show)
                    .HasColumnName("show")
                    .HasMaxLength(1);

                entity.Property(e => e.TileIndex)
                    .HasColumnName("tile_index")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalSize)
                    .HasColumnName("total_size")
                    .HasMaxLength(15);

                entity.Property(e => e.TotalSquareMiles)
                    .HasColumnName("total_square_miles")
                    .HasMaxLength(15);

                entity.Property(e => e.UploadDate)
                    .HasColumnName("upload_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.VerticalAccuracy)
                    .HasColumnName("vertical_accuracy")
                    .HasMaxLength(100);

                entity.Property(e => e.YearCollected)
                    .HasColumnName("year_collected")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<UtaBusFlexRoutes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_bus_flex_routes_pkey");

                entity.ToTable("uta_bus_flex_routes", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_bus_flex_routes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Frequency)
                    .HasColumnName("frequency")
                    .HasMaxLength(30);

                entity.Property(e => e.Lineabbr)
                    .HasColumnName("lineabbr")
                    .HasMaxLength(7);

                entity.Property(e => e.Linename)
                    .HasColumnName("linename")
                    .HasMaxLength(75);

                entity.Property(e => e.Routetype)
                    .HasColumnName("routetype")
                    .HasMaxLength(30);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<UtaBusRoutesWasatchFront>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_bus_routes_wasatch_front_pkey");

                entity.ToTable("uta_bus_routes_wasatch_front", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_bus_routes_wasatch_front_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Avgbrd)
                    .HasColumnName("avgbrd")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(247);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(80);

                entity.Property(e => e.Frequency)
                    .HasColumnName("frequency")
                    .HasMaxLength(80);

                entity.Property(e => e.Lineabbr)
                    .HasColumnName("lineabbr")
                    .HasMaxLength(80);

                entity.Property(e => e.Linename)
                    .HasColumnName("linename")
                    .HasMaxLength(80);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.ShapeLen)
                    .HasColumnName("shape__len")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<UtaBusStopsWasatchFront>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_bus_stops_wasatch_front_pkey");

                entity.ToTable("uta_bus_stops_wasatch_front", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_bus_stops_wasatch_front_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.City)
                    .HasColumnName("city")
                    .HasMaxLength(80);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(80);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(80);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Stopabbr)
                    .HasColumnName("stopabbr")
                    .HasMaxLength(80);

                entity.Property(e => e.X)
                    .HasColumnName("x")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Y)
                    .HasColumnName("y")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Zipcode)
                    .HasColumnName("zipcode")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<UtaCommuterRailRoutes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_commuter_rail_routes_pkey");

                entity.ToTable("uta_commuter_rail_routes", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_commuter_rail_routes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<UtaCommuterRailStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_commuter_rail_stations_pkey");

                entity.ToTable("uta_commuter_rail_stations", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_commuter_rail_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(50);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Lat)
                    .HasColumnName("lat")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Linename)
                    .HasColumnName("linename")
                    .HasMaxLength(50);

                entity.Property(e => e.Long)
                    .HasColumnName("long")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Parknride)
                    .HasColumnName("parknride")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Stationname)
                    .HasColumnName("stationname")
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(20);

                entity.Property(e => e.Utastopid)
                    .HasColumnName("utastopid")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<UtaLightRailRoutes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_light_rail_routes_pkey");

                entity.ToTable("uta_light_rail_routes", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_light_rail_routes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Direction)
                    .HasColumnName("direction")
                    .HasMaxLength(8);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Line)
                    .HasColumnName("line")
                    .HasMaxLength(30);

                entity.Property(e => e.Route)
                    .HasColumnName("route")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");
            });

            modelBuilder.Entity<UtaLightRailStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uta_light_rail_stations_pkey");

                entity.ToTable("uta_light_rail_stations", "transportation");

                entity.HasIndex(e => e.Shape)
                    .HasName("uta_light_rail_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Address)
                    .HasColumnName("address")
                    .HasMaxLength(40);

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Linename)
                    .HasColumnName("linename")
                    .HasMaxLength(50);

                entity.Property(e => e.Parknride)
                    .HasColumnName("parknride")
                    .HasMaxLength(16);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Stationname)
                    .HasColumnName("stationname")
                    .HasMaxLength(30);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<UtahCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("utah_county_parcels_pkey");

                entity.ToTable("utah_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("utah_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.Ownername)
                    .HasColumnName("ownername")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<UtahCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("utah_county_parcels_lir_pkey");

                entity.ToTable("utah_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("utah_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<Uwc2008CherryStemRoads>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("uwc_2008_cherry_stem_roads_pkey");

                entity.ToTable("uwc_2008_cherry_stem_roads", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("uwc_2008_cherry_stem_roads_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.PropType)
                    .HasColumnName("prop_type")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiLineString,26912)");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("shape_leng")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<VistaBallotAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("vista_ballot_areas_pkey");

                entity.ToTable("vista_ballot_areas", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("vista_ballot_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("aliasname")
                    .HasMaxLength(50);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(100);

                entity.Property(e => e.Countyid)
                    .HasColumnName("countyid")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Effectivedate)
                    .HasColumnName("effectivedate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Precinctid)
                    .HasColumnName("precinctid")
                    .HasMaxLength(6);

                entity.Property(e => e.Rcvddate)
                    .HasColumnName("rcvddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Subprecinctid)
                    .HasColumnName("subprecinctid")
                    .HasMaxLength(4);

                entity.Property(e => e.Versionnbr)
                    .HasColumnName("versionnbr")
                    .HasMaxLength(20);

                entity.Property(e => e.Vistaid)
                    .HasColumnName("vistaid")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<VistaBallotAreasProposed>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("vista_ballot_areas_proposed_pkey");

                entity.ToTable("vista_ballot_areas_proposed", "political");

                entity.HasIndex(e => e.Shape)
                    .HasName("vista_ballot_areas_proposed_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Aliasname)
                    .HasColumnName("aliasname")
                    .HasMaxLength(50);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(100);

                entity.Property(e => e.Countyid)
                    .HasColumnName("countyid")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Effectivedate)
                    .HasColumnName("effectivedate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Precinctid)
                    .HasColumnName("precinctid")
                    .HasMaxLength(6);

                entity.Property(e => e.Rcvddate)
                    .HasColumnName("rcvddate")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Subprecinctid)
                    .HasColumnName("subprecinctid")
                    .HasMaxLength(4);

                entity.Property(e => e.Versionnbr)
                    .HasColumnName("versionnbr")
                    .HasMaxLength(20);

                entity.Property(e => e.Vistaid)
                    .HasColumnName("vistaid")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<VolcanicCones>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("volcanic_cones_pkey");

                entity.ToTable("volcanic_cones", "geoscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("volcanic_cones_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.SType)
                    .HasColumnName("s_type")
                    .HasMaxLength(16);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");
            });

            modelBuilder.Entity<WasatchCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wasatch_county_parcels_pkey");

                entity.ToTable("wasatch_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("wasatch_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WasatchCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wasatch_county_parcels_lir_pkey");

                entity.ToTable("wasatch_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("wasatch_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<WashingtonCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("washington_county_parcels_pkey");

                entity.ToTable("washington_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("washington_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WashingtonCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("washington_county_parcels_lir_pkey");

                entity.ToTable("washington_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("washington_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<WaterRelatedLandUse>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("water_related_land_use_pkey");

                entity.ToTable("water_related_land_use", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("water_related_land_use_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Basin)
                    .HasColumnName("basin")
                    .HasMaxLength(50);

                entity.Property(e => e.ClassName)
                    .HasColumnName("class_name")
                    .HasMaxLength(50);

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(25);

                entity.Property(e => e.Cropgroup)
                    .HasColumnName("cropgroup")
                    .HasMaxLength(25);

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(50);

                entity.Property(e => e.IrrMethod)
                    .HasColumnName("irr_method")
                    .HasMaxLength(25);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(9);

                entity.Property(e => e.LabelClass)
                    .HasColumnName("label_class")
                    .HasMaxLength(50);

                entity.Property(e => e.Landuse)
                    .HasColumnName("landuse")
                    .HasMaxLength(25);

                entity.Property(e => e.LuGroup)
                    .HasColumnName("lu_group")
                    .HasMaxLength(25);

                entity.Property(e => e.Luid)
                    .HasColumnName("luid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Oldlanduse)
                    .HasColumnName("oldlanduse")
                    .HasMaxLength(10);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.State)
                    .HasColumnName("state")
                    .HasMaxLength(25);

                entity.Property(e => e.Subarea)
                    .HasColumnName("subarea")
                    .HasMaxLength(50);

                entity.Property(e => e.SurvYear)
                    .HasColumnName("surv_year")
                    .HasMaxLength(8);
            });

            modelBuilder.Entity<WatershedsArea>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("watersheds_area_pkey");

                entity.ToTable("watersheds_area", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("watersheds_area_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Hu10Ds)
                    .HasColumnName("hu_10_ds")
                    .HasMaxLength(10);

                entity.Property(e => e.Hu10Mod)
                    .HasColumnName("hu_10_mod")
                    .HasMaxLength(20);

                entity.Property(e => e.Hu10Name)
                    .HasColumnName("hu_10_name")
                    .HasMaxLength(80);

                entity.Property(e => e.Hu10Type)
                    .HasColumnName("hu_10_type")
                    .HasMaxLength(1);

                entity.Property(e => e.Hu12Ds)
                    .HasColumnName("hu_12_ds")
                    .HasMaxLength(12);

                entity.Property(e => e.Hu12Mod)
                    .HasColumnName("hu_12_mod")
                    .HasMaxLength(20);

                entity.Property(e => e.Hu12Name)
                    .HasColumnName("hu_12_name")
                    .HasMaxLength(80);

                entity.Property(e => e.Hu12Type)
                    .HasColumnName("hu_12_type")
                    .HasMaxLength(1);

                entity.Property(e => e.Hu8Name)
                    .HasColumnName("hu_8_name")
                    .HasMaxLength(80);

                entity.Property(e => e.Huc10)
                    .HasColumnName("huc_10")
                    .HasMaxLength(10);

                entity.Property(e => e.Huc12)
                    .HasColumnName("huc_12")
                    .HasMaxLength(12);

                entity.Property(e => e.Huc8)
                    .HasColumnName("huc_8")
                    .HasMaxLength(8);

                entity.Property(e => e.NcontrbA)
                    .HasColumnName("ncontrb_a")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.States)
                    .HasColumnName("states")
                    .HasMaxLength(11);
            });

            modelBuilder.Entity<WayneCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wayne_county_parcels_pkey");

                entity.ToTable("wayne_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("wayne_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WayneCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wayne_county_parcels_lir_pkey");

                entity.ToTable("wayne_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("wayne_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<WeatherStations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("weather_stations_pkey");

                entity.ToTable("weather_stations", "climate");

                entity.HasIndex(e => e.Shape)
                    .HasName("weather_stations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.ActiveIna)
                    .HasColumnName("active_ina")
                    .HasMaxLength(26);

                entity.Property(e => e.Altimeter)
                    .HasColumnName("altimeter")
                    .HasMaxLength(15);

                entity.Property(e => e.ClimateDi)
                    .HasColumnName("climate_di")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.County)
                    .HasColumnName("county")
                    .HasMaxLength(18);

                entity.Property(e => e.DewPoint)
                    .HasColumnName("dew_point")
                    .HasMaxLength(15);

                entity.Property(e => e.Elevation)
                    .HasColumnName("elevation")
                    .HasMaxLength(17);

                entity.Property(e => e.FuelMoist)
                    .HasColumnName("fuel_moist")
                    .HasMaxLength(15);

                entity.Property(e => e.FuelTemp)
                    .HasColumnName("fuel_temp")
                    .HasMaxLength(15);

                entity.Property(e => e.Huc)
                    .HasColumnName("huc")
                    .HasMaxLength(12);

                entity.Property(e => e.Latitude)
                    .HasColumnName("latitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.LocationO)
                    .HasColumnName("location_o")
                    .HasMaxLength(116);

                entity.Property(e => e.Longitude)
                    .HasColumnName("longitude")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Network)
                    .HasColumnName("network_")
                    .HasMaxLength(26);

                entity.Property(e => e.PeriodOf)
                    .HasColumnName("period_of_")
                    .HasMaxLength(24);

                entity.Property(e => e.Precipitat)
                    .HasColumnName("precipitat")
                    .HasMaxLength(15);

                entity.Property(e => e.Pressure)
                    .HasColumnName("pressure")
                    .HasMaxLength(15);

                entity.Property(e => e.RelHum)
                    .HasColumnName("rel_hum")
                    .HasMaxLength(12);

                entity.Property(e => e.Secondary)
                    .HasColumnName("secondary_")
                    .HasMaxLength(19);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.SlPressur)
                    .HasColumnName("sl_pressur")
                    .HasMaxLength(15);

                entity.Property(e => e.SnowFall)
                    .HasColumnName("snow_fall")
                    .HasMaxLength(13);

                entity.Property(e => e.SnwGndDp)
                    .HasColumnName("snw_gnd_dp")
                    .HasMaxLength(21);

                entity.Property(e => e.SoilMoist)
                    .HasColumnName("soil_moist")
                    .HasMaxLength(18);

                entity.Property(e => e.SoilTemp)
                    .HasColumnName("soil_temp")
                    .HasMaxLength(13);

                entity.Property(e => e.SolarRad)
                    .HasColumnName("solar_rad")
                    .HasMaxLength(13);

                entity.Property(e => e.StationNa)
                    .HasColumnName("station_na")
                    .HasMaxLength(36);

                entity.Property(e => e.StnAuthor)
                    .HasColumnName("stn_author")
                    .HasMaxLength(49);

                entity.Property(e => e.StnId)
                    .HasColumnName("stn_id_")
                    .HasMaxLength(19);

                entity.Property(e => e.Temp)
                    .HasColumnName("temp_")
                    .HasMaxLength(14);

                entity.Property(e => e.TypeOfOb)
                    .HasColumnName("type_of_ob")
                    .HasMaxLength(24);

                entity.Property(e => e.Uvb)
                    .HasColumnName("uvb")
                    .HasMaxLength(12);

                entity.Property(e => e.Visibility)
                    .HasColumnName("visibility")
                    .HasMaxLength(15);

                entity.Property(e => e.WaterBasi)
                    .HasColumnName("water_basi")
                    .HasMaxLength(24);

                entity.Property(e => e.WeatherCo)
                    .HasColumnName("weather_co")
                    .HasMaxLength(15);

                entity.Property(e => e.WindGust)
                    .HasColumnName("wind_gust")
                    .HasMaxLength(15);

                entity.Property(e => e.WindSpeed)
                    .HasColumnName("wind_speed")
                    .HasMaxLength(12);
            });

            modelBuilder.Entity<WeberCountyParcels>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("weber_county_parcels_pkey");

                entity.ToTable("weber_county_parcels", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("weber_county_parcels_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.CoparcelUrl)
                    .HasColumnName("coparcel_url")
                    .HasMaxLength(100);

                entity.Property(e => e.Fips)
                    .HasColumnName("fips")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.OwnType)
                    .HasColumnName("own_type")
                    .HasMaxLength(20);

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(60);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.ParcelZip)
                    .HasColumnName("parcel_zip")
                    .HasMaxLength(10);

                entity.Property(e => e.Parcelnotes)
                    .HasColumnName("parcelnotes")
                    .HasMaxLength(50);

                entity.Property(e => e.Parcelscur)
                    .HasColumnName("parcelscur")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelspub)
                    .HasColumnName("parcelspub")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelsrec)
                    .HasColumnName("parcelsrec")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Parcelyear)
                    .HasColumnName("parcelyear")
                    .HasMaxLength(5);

                entity.Property(e => e.Recorder)
                    .HasColumnName("recorder")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WeberCountyParcelsLir>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("weber_county_parcels_lir_pkey");

                entity.ToTable("weber_county_parcels_lir", "cadastre");

                entity.HasIndex(e => e.Shape)
                    .HasName("weber_county_parcels_lir_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AssessorSrc)
                    .HasColumnName("assessor_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BldgSqft)
                    .HasColumnName("bldg_sqft")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.BldgSqftInfo)
                    .HasColumnName("bldg_sqft_info")
                    .HasMaxLength(100);

                entity.Property(e => e.BoundarySrc)
                    .HasColumnName("boundary_src")
                    .HasMaxLength(100);

                entity.Property(e => e.BuiltYr)
                    .HasColumnName("built_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ConstMaterial)
                    .HasColumnName("const_material")
                    .HasMaxLength(100);

                entity.Property(e => e.CountyId)
                    .HasColumnName("county_id")
                    .HasMaxLength(2);

                entity.Property(e => e.CountyName)
                    .HasColumnName("county_name")
                    .HasMaxLength(20);

                entity.Property(e => e.CurrentAsof)
                    .HasColumnName("current_asof")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Disclaimer)
                    .HasColumnName("disclaimer")
                    .HasMaxLength(50);

                entity.Property(e => e.EffbuiltYr)
                    .HasColumnName("effbuilt_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.FloorsCnt)
                    .HasColumnName("floors_cnt")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.FloorsInfo)
                    .HasColumnName("floors_info")
                    .HasMaxLength(100);

                entity.Property(e => e.HouseCnt)
                    .HasColumnName("house_cnt")
                    .HasMaxLength(10);

                entity.Property(e => e.LandMktValue)
                    .HasColumnName("land_mkt_value")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAcres)
                    .HasColumnName("parcel_acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.ParcelAdd)
                    .HasColumnName("parcel_add")
                    .HasMaxLength(100);

                entity.Property(e => e.ParcelCity)
                    .HasColumnName("parcel_city")
                    .HasMaxLength(30);

                entity.Property(e => e.ParcelId)
                    .HasColumnName("parcel_id")
                    .HasMaxLength(50);

                entity.Property(e => e.PrimaryRes)
                    .HasColumnName("primary_res")
                    .HasMaxLength(1);

                entity.Property(e => e.PropClass)
                    .HasColumnName("prop_class")
                    .HasMaxLength(100);

                entity.Property(e => e.SerialNum)
                    .HasColumnName("serial_num")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SubdivName)
                    .HasColumnName("subdiv_name")
                    .HasMaxLength(100);

                entity.Property(e => e.TaxDistrict)
                    .HasColumnName("tax_district")
                    .HasMaxLength(10);

                entity.Property(e => e.TaxexemptType)
                    .HasColumnName("taxexempt_type")
                    .HasMaxLength(100);

                entity.Property(e => e.TotalMktValue)
                    .HasColumnName("total_mkt_value")
                    .HasColumnType("numeric(38,8)");
            });

            modelBuilder.Entity<Wetlands>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wetlands_pkey");

                entity.ToTable("wetlands", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("wetlands_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Attribute)
                    .HasColumnName("attribute")
                    .HasMaxLength(15);

                entity.Property(e => e.Class)
                    .HasColumnName("class")
                    .HasMaxLength(100);

                entity.Property(e => e.Modifier)
                    .HasColumnName("modifier")
                    .HasMaxLength(25);

                entity.Property(e => e.Regime)
                    .HasColumnName("regime")
                    .HasMaxLength(75);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.System)
                    .HasColumnName("system")
                    .HasMaxLength(50);

                entity.Property(e => e.WetlandType)
                    .HasColumnName("wetland_type")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WetlandsMappingProjects>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wetlands_mapping_projects_pkey");

                entity.ToTable("wetlands_mapping_projects", "water");

                entity.HasIndex(e => e.Shape)
                    .HasName("wetlands_mapping_projects_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.AllScales)
                    .HasColumnName("all_scales")
                    .HasMaxLength(50);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(255);

                entity.Property(e => e.DataCat)
                    .HasColumnName("data_cat")
                    .HasMaxLength(25);

                entity.Property(e => e.DataSource)
                    .HasColumnName("data_source")
                    .HasMaxLength(25);

                entity.Property(e => e.Emulsion)
                    .HasColumnName("emulsion")
                    .HasMaxLength(30);

                entity.Property(e => e.ImageDate)
                    .HasColumnName("image_date")
                    .HasMaxLength(40);

                entity.Property(e => e.ImageScale)
                    .HasColumnName("image_scale")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.ImageYr)
                    .HasColumnName("image_yr")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.ProjectName)
                    .HasColumnName("project_name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.SourceType)
                    .HasColumnName("source_type")
                    .HasMaxLength(12);

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(50);

                entity.Property(e => e.Suppmapinfo)
                    .HasColumnName("suppmapinfo")
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<WildernessBlm98Reinventory>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_blm_98_reinventory_pkey");

                entity.ToTable("wilderness_blm_98_reinventory", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_blm_98_reinventory_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(32);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(32);

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<WildernessBlmSuitability>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_blm_suitability_pkey");

                entity.ToTable("wilderness_blm_suitability", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_blm_suitability_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Blmname)
                    .HasColumnName("blmname")
                    .HasMaxLength(30);

                entity.Property(e => e.IsThisSt)
                    .HasColumnName("is_this_st")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Suitabilit)
                    .HasColumnName("suitabilit")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalBlm>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_blm_pkey");

                entity.ToTable("wilderness_proposal_blm", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_blm_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Blmname)
                    .HasColumnName("blmname")
                    .HasMaxLength(30);

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);

                entity.Property(e => e.UnitLabel)
                    .HasColumnName("unit_label")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalHr1500>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_hr1500_pkey");

                entity.ToTable("wilderness_proposal_hr1500", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_hr1500_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WildernessProposalHr1745>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_hr1745_pkey");

                entity.ToTable("wilderness_proposal_hr1745", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_hr1745_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Blmname)
                    .HasColumnName("blmname")
                    .HasMaxLength(30);

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);

                entity.Property(e => e.UnitLabel)
                    .HasColumnName("unit_label")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalNineco1995>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_nineco_1995_pkey");

                entity.ToTable("wilderness_proposal_nineco_1995", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_nineco_1995_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);

                entity.Property(e => e.UnitLabel)
                    .HasColumnName("unit_label")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalRedRock>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_red_rock_pkey");

                entity.ToTable("wilderness_proposal_red_rock", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_red_rock_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Cluster)
                    .HasColumnName("cluster")
                    .HasMaxLength(40);

                entity.Property(e => e.DateRev)
                    .HasColumnName("date_rev")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20);

                entity.Property(e => e.Polygonid)
                    .HasColumnName("polygonid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Region)
                    .HasColumnName("region")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Uwc2004Id)
                    .HasColumnName("uwc2004_id")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.UwcProp)
                    .HasColumnName("uwc_prop")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<WildernessProposalUwa1995>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_uwa_1995_pkey");

                entity.ToTable("wilderness_proposal_uwa_1995", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_uwa_1995_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(32);

                entity.Property(e => e.UnitLabel)
                    .HasColumnName("unit_label")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalUwc1989>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_uwc_1989_pkey");

                entity.ToTable("wilderness_proposal_uwc_1989", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_uwc_1989_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Division)
                    .HasColumnName("division")
                    .HasMaxLength(6);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");
            });

            modelBuilder.Entity<WildernessProposalUwc1995>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_uwc_1995_pkey");

                entity.ToTable("wilderness_proposal_uwc_1995", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_uwc_1995_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<WildernessProposalUwc2008>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_uwc_2008_pkey");

                entity.ToTable("wilderness_proposal_uwc_2008", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_uwc_2008_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Angle)
                    .HasColumnName("angle")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Cluster)
                    .HasColumnName("cluster")
                    .HasMaxLength(40);

                entity.Property(e => e.DateRev)
                    .HasColumnName("date_rev")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20);

                entity.Property(e => e.Polygonid)
                    .HasColumnName("polygonid")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Region)
                    .HasColumnName("region")
                    .HasMaxLength(20);

                entity.Property(e => e.Scale)
                    .HasColumnName("scale")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.UwcProp)
                    .HasColumnName("uwc_prop")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<WildernessProposalWashingtonCounty>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_washington_county_pkey");

                entity.ToTable("wilderness_proposal_washington_county", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_washington_county_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Blmname)
                    .HasColumnName("blmname")
                    .HasMaxLength(30);

                entity.Property(e => e.IsThisSt)
                    .HasColumnName("is_this_st")
                    .HasMaxLength(1);

                entity.Property(e => e.Label)
                    .HasColumnName("label")
                    .HasMaxLength(25);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.ShapeLeng)
                    .HasColumnName("shape_leng")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);

                entity.Property(e => e.UnitLabel)
                    .HasColumnName("unit_label")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildernessProposalWestDesert1999>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wilderness_proposal_west_desert_1999_pkey");

                entity.ToTable("wilderness_proposal_west_desert_1999", "planning");

                entity.HasIndex(e => e.Shape)
                    .HasName("wilderness_proposal_west_desert_1999_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Data)
                    .HasColumnName("data")
                    .HasMaxLength(30);

                entity.Property(e => e.IsThisState)
                    .HasColumnName("is_this_state")
                    .HasMaxLength(1);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Unit)
                    .HasColumnName("unit")
                    .HasMaxLength(30);
            });

            modelBuilder.Entity<WildfirePerimeters>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("wildfire_perimeters_pkey");

                entity.ToTable("wildfire_perimeters", "bioscience");

                entity.HasIndex(e => e.Shape)
                    .HasName("wildfire_perimeters_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Acres)
                    .HasColumnName("acres")
                    .HasColumnType("numeric(38,8)");

                entity.Property(e => e.Active)
                    .HasColumnName("active")
                    .HasMaxLength(1);

                entity.Property(e => e.Agency)
                    .HasColumnName("agency")
                    .HasMaxLength(15);

                entity.Property(e => e.Comments)
                    .HasColumnName("comments")
                    .HasMaxLength(50);

                entity.Property(e => e.Date)
                    .HasColumnName("date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Fire)
                    .HasColumnName("fire")
                    .HasMaxLength(50);

                entity.Property(e => e.FireName)
                    .HasColumnName("fire_name")
                    .HasMaxLength(50);

                entity.Property(e => e.FireNum)
                    .HasColumnName("fire_num")
                    .HasMaxLength(8);

                entity.Property(e => e.InciwebId)
                    .HasColumnName("inciweb_id")
                    .HasMaxLength(10);

                entity.Property(e => e.LoadDate)
                    .HasColumnName("load_date")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Source)
                    .HasColumnName("source")
                    .HasMaxLength(200);

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasMaxLength(4);

                entity.Property(e => e.UnitId)
                    .HasColumnName("unit_id")
                    .HasMaxLength(7);

                entity.Property(e => e.Year)
                    .HasColumnName("year")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<ZipCodeAreas>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("zip_code_areas_pkey");

                entity.ToTable("zip_code_areas", "boundaries");

                entity.HasIndex(e => e.Shape)
                    .HasName("zip_code_areas_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Countynbr)
                    .HasColumnName("countynbr")
                    .HasMaxLength(2);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Symbol)
                    .HasColumnName("symbol")
                    .HasColumnType("numeric(5,0)");

                entity.Property(e => e.Zip5)
                    .HasColumnName("zip5")
                    .HasMaxLength(254);
            });

            modelBuilder.Entity<ZipCodePoBoxes>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("zip_code_po_boxes_pkey");

                entity.ToTable("zip_code_po_boxes", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("zip_code_po_boxes_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasMaxLength(33);

                entity.Property(e => e.Placename)
                    .HasColumnName("placename")
                    .HasMaxLength(50);

                entity.Property(e => e.PoboxType)
                    .HasColumnName("pobox_type")
                    .HasMaxLength(50);

                entity.Property(e => e.Pre)
                    .HasColumnName("pre")
                    .HasMaxLength(5);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(Point,26912)");

                entity.Property(e => e.Stadd)
                    .HasColumnName("stadd")
                    .HasColumnType("numeric(10,0)");

                entity.Property(e => e.Street)
                    .HasColumnName("street")
                    .HasMaxLength(13);

                entity.Property(e => e.Suff)
                    .HasColumnName("suff")
                    .HasMaxLength(7);

                entity.Property(e => e.Zip)
                    .HasColumnName("zip")
                    .HasMaxLength(5);

                entity.Property(e => e.Zip5)
                    .HasColumnName("zip5")
                    .HasColumnType("numeric(10,0)");
            });

            modelBuilder.Entity<ZoomLocations>(entity =>
            {
                entity.HasKey(e => e.Xid)
                    .HasName("zoom_locations_pkey");

                entity.ToTable("zoom_locations", "location");

                entity.HasIndex(e => e.Shape)
                    .HasName("zoom_locations_shape_geom_idx")
                    .HasMethod("gist");

                entity.Property(e => e.Xid).HasColumnName("xid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(50);

                entity.Property(e => e.Shape)
                    .HasColumnName("shape")
                    .HasColumnType("geometry(MultiPolygon,26912)");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
