apiVersion: networking.gke.io/v1beta2
kind: ManagedCertificate
metadata:
  name: agrc-api-managed-cert
spec:
  domains:
    - agrc-api.dev.utah.gov
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: webapi-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: web-api-cluster-ingress # Created in terraform
    networking.gke.io/managed-certificates: agrc-api-managed-cert
spec:
  rules:
    # - host: agrc-api.dev.utah.gov
    - http:
        paths:
          - path: /*
            backend:
              serviceName: webapi-api
              servicePort: http
    # # - host: agrc-api.dev.utah.gov
    # - http:
    #     paths:
    #       - path: /*
    #         backend:
    #           serviceName: webapi-explorer
    #           servicePort: http
  # - host: developer.mapserv.utah.gov
  #   http:
  #     paths:
  #     - path: /*
  #       backend:
  #         serviceName: webapi-developer
  #         servicePort: http
---
apiVersion: v1
kind: Service
metadata:
  name: webapi-api
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  labels:
    app: api
    tier: backend
    version: 1.0.0
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 1337
  selector:
    app: api
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: webapi-explorer
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
  labels:
    app: api
    tier: frontend
    version: 1.0.0
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: api
    tier: frontend
---
kind: Service
apiVersion: v1
metadata:
  name: geocoding-host
spec:
  type: ExternalName
  externalName: mapserv.utah.gov #: redirects host traffic to this external resource
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      tier: backend
  template:
    metadata:
      labels:
        app: api
        tier: backend
        version: 1.0.0
    spec:
      volumes:
        - name: appsettings-config
          configMap:
            name: app-config
      containers:
        - name: webapi-api
          image: gcr.io/ut-dts-agrc-web-api-dv/api.mapserv.utah.gov/api
          imagePullPolicy: Always
          volumeMounts:
            - name: appsettings-config
              mountPath: /app/appsettings.json
              subPath: appsettings.json
          env:
            - name: WEBAPI__ARCGIS__HOST
              value: geocoder
            - name: WEBAPI__ARCGIS__PORT
              value: "6080"
            - name: WEBAPI__ARCGIS__GEOMETRY_SERVICE__PATH
              value: arcgis/rest/services/Geometry/GeometryServer
            - name: ASPNETCORE_URLS
              value: http://+:1337
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          ports:
            - containerPort: 1337
          readinessProbe:
            httpGet:
              path: /
              port: 1337
            initialDelaySeconds: 35
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 1337
            initialDelaySeconds: 36
            periodSeconds: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: explorer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      tier: frontend
  template:
    metadata:
      labels:
        app: api
        tier: frontend
        version: 1.0.0
    spec:
      containers:
        - name: webapi-explorer
          image: gcr.io/ut-dts-agrc-web-api-dv/api.mapserv.utah.gov/api-explorer
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 35
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 36
            periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: postgres
    tier: backend
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: postgres
      tier: backend
  template:
    metadata:
      labels:
        app: postgres
        tier: backend
        version: 1.0.0
    spec:
      containers:
        - name: db
          image: gcr.io/ut-dts-agrc-web-api-dv/api.mapserv.utah.gov/db
          imagePullPolicy: Always
          env:
            - name: POSTGRES_DB
              value: webapi
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: what password
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
