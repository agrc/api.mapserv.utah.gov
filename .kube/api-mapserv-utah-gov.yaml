apiVersion: v1
kind: Service
metadata:
  name: api-mapserv-utah-gov
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: api-mapserv-utah-gov
  type: LoadBalancer #: this is the public entry point to the cluster
---
kind: Service
apiVersion: v1
metadata:
  name: geocoding-host
spec:
  type: ExternalName
  externalName: mapserv.utah.gov #: redirects host traffic to this external resource
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api-pod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: api-mapserv-utah-gov
    spec:
      volumes:
      - name: appsettings-config
        configMap: #: kubectl create configmap app-config --from-file=appsettings.json=appsettings.json
          name: app-config
      containers:
        - name: api
          image: gcr.io/ut-dts-agrc-web-api-dv/api.mapserv.utah.gov/api:latest
          ports:
            - containerPort: 1337
          volumeMounts:
            - name: appsettings-config
              mountPath: /app/appsettings.json
              subPath: appsettings.json
          env:
            - name: WEBAPI__ARCGIS__HOST
              value: geocoding-host
            - name: WEBAPI__ARCGIS__PORT
              value: '80'
            - name: WEBAPI__ARCGIS__GEOMETRY_SERVICE__PATH
              value: arcgis/rest/services/Geometry/GeometryServer
            - name: ASPNETCORE_URLS
              value: http://+:1337
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          readinessProbe:
            httpGet:
              path: /
              port: 1337
            initialDelaySeconds: 35
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 1337
            initialDelaySeconds: 36
            periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: postgres
    tier: backend
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: postgres
      tier: backend
  template:
    metadata:
      labels:
        app: postgres
        tier: backend
        version: 1.0.0
    spec:
      containers:
      - name: db
        image: gcr.io/ut-dts-agrc-web-api-dv/api.mapserv.utah.gov/db:latest
        imagePullPolicy: Always
        env:
        - name: POSTGRES_DB
          value: webapi
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: what password
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          subPath: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
