apiVersion: v1
kind: Service
metadata:
  name: webapi-api
  labels:
    app: api
    tier: backend
    version: 1.0.0
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 1337
  selector:
    app: api
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi-api
spec:
  selector:
    matchLabels:
      app: api
      tier: backend
  template:
    metadata:
      labels:
        app: api
        tier: backend
        version: 1.0.0
    spec:
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      volumes:
      - name: appsettings-config
        configMap:
          name: app-config
      containers:
      - name: webapi-api
        image: gcr.io/agrc-204220/webapi/api
        imagePullPolicy: Always
        volumeMounts:
        - name: appsettings-config
          mountPath: /app/appsettings.json
          subPath: appsettings.json
        env:
        - name: WEBAPI__DATABASE__HOST
          value: db
        - name: WEBAPI__DATABASE__PORT
          value: '5432'
        - name: WEBAPI__DATABASE__DB
          value: webapi
        - name: WEBAPI__DATABASE__USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: WEBAPI__DATABASE__PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: WEBAPI__DATABASE__PEPPER
          value: spicy
        - name: WEBAPI__ARCGIS__HOST
          value: mapserv.utah.gov
        - name: WEBAPI__ARCGIS__PORT
          value: '80'
        - name: WEBAPI__ARCGIS__GEOMETRY_SERVICE__PATH
          value: arcgis/rest/services/Geometry/GeometryServer
        - name: ASPNETCORE_URLS
          value: http://+:1337
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        ports:
        - containerPort: 1337
---
apiVersion: v1
kind: Service
metadata:
  name: developer-console
  labels:
    app: website
    tier: frontend
    version: 1.0.0
spec:
  type: NodePort
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 1338
  selector:
    app: website
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: developer-console
spec:
  selector:
    matchLabels:
      app: website
      tier: frontend
  template:
    metadata:
      labels:
        app: website
        tier: frontend
        version: 1.0.0
    spec:
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      - name: webapi-developer
        image: gcr.io/agrc-204220/webapi/developer
        imagePullPolicy: Always
        env:
        - name: ASPNETCORE_URLS
          value: http://+:1338
        - name: ASPNETCORE_ENVIRONMENT
          value: DockerDevelopment
        ports:
        - containerPort: 1338
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: postgres
    tier: backend
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: postgres
      tier: backend
  template:
    metadata:
      labels:
        app: postgres
        tier: backend
        version: 1.0.0
    spec:
      imagePullSecrets:
      - name: gcr-json-key
      containers:
      - name: db
        image: gcr.io/agrc-204220/webapi/db
        imagePullPolicy: Always
        env:
        - name: POSTGRES_DB
          value: webapi
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: what password
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          subPath: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 5Gi
